{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/src/app/map/map/map-instance.ts"],"sourcesContent":["import mapboxgl from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nclass Map {\r\n  private static instance: Map | null = null;\r\n  private mapRef: mapboxgl.Map | null;\r\n  private mapContainerRef: HTMLDivElement | null;\r\n\r\n  private constructor() {\r\n    this.mapRef = null;\r\n    this.mapContainerRef = null;\r\n  }\r\n\r\n  /** Get the Singleton Instance of Map */\r\n  public static getInstance(): Map {\r\n    if (!Map.instance) {\r\n      Map.instance = new Map();\r\n    }\r\n    return Map.instance;\r\n  }\r\n\r\n  /** Set the container and initialize the Map */\r\n  public setContainer(container: HTMLDivElement) {\r\n    if (this.mapContainerRef !== container) {\r\n      this.mapContainerRef = container;\r\n      this.initMap();\r\n    }\r\n  }\r\n\r\n  /** Initialize the Mapbox Map */\r\n  private initMap() {\r\n    if (!this.mapContainerRef || this.mapRef) return;\r\n\r\n    mapboxgl.accessToken =\r\n      \"pk.eyJ1IjoiYWxlY3JkYW4iLCJhIjoiY203ejdtdmVhMGlocDJrcTQxY3Juamg0aiJ9.4PKhiLg4cZmfj0FOMXqeBw\";\r\n\r\n    this.mapRef = new mapboxgl.Map({\r\n      container: this.mapContainerRef,\r\n      style: \"mapbox://styles/mapbox/streets-v12\",\r\n      center: [-74.006, 40.7128],\r\n      zoom: 12,\r\n      projection: \"globe\",\r\n    });\r\n\r\n    this.mapRef.on(\"style.load\", () => {\r\n      this.mapRef?.setFog({});\r\n    });\r\n  }\r\n\r\n  /** Return the MapboxGL Instance */\r\n  public getMap(): mapboxgl.Map | null {\r\n    return this.mapRef;\r\n  }\r\n\r\n  /** Remove and Cleanup Map */\r\n  public removeMap() {\r\n    if (this.mapRef) {\r\n      this.mapRef.remove();\r\n      this.mapRef = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Map;\r\n"],"names":[],"mappings":";;;AAAA;;;AAGA,MAAM;IACJ,OAAe,WAAuB,KAAK;IACnC,OAA4B;IAC5B,gBAAuC;IAE/C,aAAsB;QACpB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,eAAe,GAAG;IACzB;IAEA,sCAAsC,GACtC,OAAc,cAAmB;QAC/B,IAAI,CAAC,IAAI,QAAQ,EAAE;YACjB,IAAI,QAAQ,GAAG,IAAI;QACrB;QACA,OAAO,IAAI,QAAQ;IACrB;IAEA,6CAA6C,GAC7C,AAAO,aAAa,SAAyB,EAAE;QAC7C,IAAI,IAAI,CAAC,eAAe,KAAK,WAAW;YACtC,IAAI,CAAC,eAAe,GAAG;YACvB,IAAI,CAAC,OAAO;QACd;IACF;IAEA,8BAA8B,GAC9B,AAAQ,UAAU;QAChB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,EAAE;QAE1C,oJAAA,CAAA,UAAQ,CAAC,WAAW,GAClB;QAEF,IAAI,CAAC,MAAM,GAAG,IAAI,oJAAA,CAAA,UAAQ,CAAC,GAAG,CAAC;YAC7B,WAAW,IAAI,CAAC,eAAe;YAC/B,OAAO;YACP,QAAQ;gBAAC,CAAC;gBAAQ;aAAQ;YAC1B,MAAM;YACN,YAAY;QACd;QAEA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc;YAC3B,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;QACvB;IACF;IAEA,iCAAiC,GACjC,AAAO,SAA8B;QACnC,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,2BAA2B,GAC3B,AAAO,YAAY;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM;YAClB,IAAI,CAAC,MAAM,GAAG;QAChB;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/src/app/map/features/create-route.ts"],"sourcesContent":["import mapboxgl from \"mapbox-gl\";\r\nimport GeoPoint from \"../schemas/map\";\r\n\r\nclass MapRoute {\r\n  private type: string;\r\n  private start: GeoPoint;\r\n  private end: GeoPoint;\r\n  private instance: mapboxgl.Map;\r\n\r\n  constructor(\r\n    instance: mapboxgl.Map,\r\n    type: string,\r\n    start: GeoPoint,\r\n    end: GeoPoint\r\n  ) {\r\n    this.instance = instance;\r\n    this.type = type;\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n\r\n  static getInstance(): typeof mapboxgl {\r\n    if (!mapboxgl.accessToken) {\r\n      throw new Error(\r\n        \"MapboxGL is not initialized. Set accessToken before using.\"\r\n      );\r\n    }\r\n    return mapboxgl;\r\n  }\r\n\r\n  private async fetchDirections(): Promise<GeoJSON.Feature<GeoJSON.LineString> | null> {\r\n    try {\r\n      const url = `https://api.mapbox.com/directions/v5/mapbox/${this.type}/${this.start[0]},${this.start[1]};${this.end[0]},${this.end[1]}?steps=true&geometries=geojson&access_token=${mapboxgl.accessToken}`;\r\n      const response = await fetch(url);\r\n\r\n      if (!response.ok) throw new Error(`HTTP Status: ${response.status}`);\r\n      const data = await response.json();\r\n\r\n      if (!data.routes || data.routes.length === 0)\r\n        throw new Error(\"No routes found.\");\r\n\r\n      return {\r\n        type: \"Feature\",\r\n        properties: {},\r\n        geometry: {\r\n          type: \"LineString\",\r\n          coordinates: data.routes[0].geometry.coordinates,\r\n        },\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching route:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  constructPoint(type: \"start\" | \"end\", coords: GeoPoint): void {\r\n    const pointSourceId = `${type}-point`;\r\n\r\n    const point: GeoJSON.FeatureCollection<GeoJSON.Point> = {\r\n      type: \"FeatureCollection\",\r\n      features: [\r\n        {\r\n          type: \"Feature\",\r\n          properties: {},\r\n          geometry: { type: \"Point\", coordinates: coords },\r\n        },\r\n      ],\r\n    };\r\n\r\n    if (!this.instance.isStyleLoaded()) {\r\n      console.warn(`Waiting for map style before adding ${type} point...`);\r\n      this.instance.once(\"styledata\", () => {\r\n        this.addPointToMap(pointSourceId, point, type);\r\n      });\r\n    } else {\r\n      this.addPointToMap(pointSourceId, point, type);\r\n    }\r\n  }\r\n\r\n  private addPointToMap(\r\n    sourceId: string,\r\n    point: GeoJSON.FeatureCollection<GeoJSON.Point>,\r\n    type: string\r\n  ): void {\r\n    const existingSource = this.instance.getSource(sourceId);\r\n\r\n    if (existingSource) {\r\n      (existingSource as mapboxgl.GeoJSONSource).setData(point);\r\n    } else {\r\n      this.instance.addSource(sourceId, { type: \"geojson\", data: point });\r\n\r\n      this.instance.addLayer({\r\n        id: `${type}-marker`,\r\n        type: \"circle\",\r\n        source: sourceId,\r\n        paint: {\r\n          \"circle-radius\": 10,\r\n          \"circle-color\": type === \"start\" ? \"#34D399\" : \"#F87171\",\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  constructRoute(): void {\r\n    this.fetchDirections()\r\n      .then((geojson) => {\r\n        if (!geojson) return;\r\n\r\n        const existingSource = this.instance.getSource(\"route\");\r\n        if (existingSource) {\r\n          (existingSource as mapboxgl.GeoJSONSource).setData(geojson);\r\n        } else {\r\n          this.instance.addSource(\"route\", { type: \"geojson\", data: geojson });\r\n\r\n          this.instance.addLayer({\r\n            id: \"route\",\r\n            type: \"line\",\r\n            source: \"route\",\r\n            layout: {\r\n              \"line-join\": \"round\",\r\n              \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n              \"line-color\": \"#2563EB\",\r\n              \"line-width\": 10,\r\n              \"line-opacity\": 0.8,\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error constructing route:\", error));\r\n  }\r\n}\r\n\r\nexport default MapRoute;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/src/app/controllers/route-controller.ts"],"sourcesContent":["import MapRoute from \"../map/features/create-route\";\r\nimport Map from \"../map/map/map-instance\";\r\nimport GeoPoint from \"../map/schemas/map\";\r\n\r\nclass RouteController {\r\n  private mapInstance: mapboxgl.Map | null;\r\n\r\n  constructor(mapInstance: Map | null = null) {\r\n    const mapSingleton = mapInstance ?? Map.getInstance();\r\n    this.mapInstance = mapSingleton.getMap();\r\n  }\r\n\r\n  handleRoute(start: GeoPoint, end: GeoPoint) {\r\n    if (!this.mapInstance) {\r\n      console.error(\"Map instance is not initialized.\");\r\n      return;\r\n    }\r\n\r\n    // const start: [number, number] = [-74.006, 40.7128]; // Start: Lower Manhattan\r\n    // const end: [number, number] = [-73.9352, 40.7306]; // End: Brooklyn Bridge Park\r\n\r\n    const route = new MapRoute(this.mapInstance, \"cycling\", start, end);\r\n    route.constructRoute();\r\n    route.constructPoint(\"start\", start);\r\n    route.constructPoint(\"end\", end);\r\n  }\r\n}\r\n\r\nexport default RouteController;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGA,MAAM;IACI,YAAiC;IAEzC,YAAY,cAA0B,IAAI,CAAE;QAC1C,MAAM,eAAe,eAAe,2IAAA,CAAA,UAAG,CAAC,WAAW;QACnD,IAAI,CAAC,WAAW,GAAG,aAAa,MAAM;IACxC;IAEA,YAAY,KAAe,EAAE,GAAa,EAAE;QAC1C,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,gFAAgF;QAChF,kFAAkF;QAElF,MAAM,QAAQ,IAAI,gJAAA,CAAA,UAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,OAAO;QAC/D,MAAM,cAAc;QACpB,MAAM,cAAc,CAAC,SAAS;QAC9B,MAAM,cAAc,CAAC,OAAO;IAC9B;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/src/app/map/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Map from \"./map/map-instance\";\r\nimport RouteController from \"../controllers/route-controller\";\r\n\r\nconst MapComponent = () => {\r\n  const mapContainerRef = useRef<HTMLDivElement | null>(null);\r\n  const [mapInstance, setMapInstance] = useState<mapboxgl.Map | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!mapContainerRef.current) {\r\n      console.error(\"Error: Map container is null.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Initializing map...\");\r\n    const mapInstance = Map.getInstance(); // Get the singleton instance\r\n    mapInstance.setContainer(mapContainerRef.current);\r\n\r\n    const mapboxMap = mapInstance.getMap();\r\n    if (mapboxMap) {\r\n      setMapInstance(mapboxMap);\r\n    }\r\n\r\n    return () => {\r\n      console.log(\"Cleaning up map instance...\");\r\n      mapInstance.removeMap();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (mapInstance) {\r\n      new RouteController().handleRoute();\r\n    }\r\n  }, [mapInstance]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapContainerRef}\r\n      style={{ width: \"100%\", height: \"100vh\", background: \"#ddd\" }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,eAAe;IACnB,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,gBAAgB,OAAO,EAAE;YAC5B,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,cAAc,2IAAA,CAAA,UAAG,CAAC,WAAW,IAAI,6BAA6B;QACpE,YAAY,YAAY,CAAC,gBAAgB,OAAO;QAEhD,MAAM,YAAY,YAAY,MAAM;QACpC,IAAI,WAAW;YACb,eAAe;QACjB;QAEA,OAAO;YACL,QAAQ,GAAG,CAAC;YACZ,YAAY,SAAS;QACvB;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,IAAI,gJAAA,CAAA,UAAe,GAAG,WAAW;QACnC;IACF,GAAG;QAAC;KAAY;IAEhB,qBACE,8OAAC;QACC,KAAK;QACL,OAAO;YAAE,OAAO;YAAQ,QAAQ;YAAS,YAAY;QAAO;;;;;;AAGlE;uCAEe","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport MapView from \"./map/page\";\nimport dynamic from \"next/dynamic\";\n\nconst Menu = dynamic(() => import(\"@/app/components/menu\"), { ssr: false });\n\nexport default function Home() {\n  return (\n    <div>\n      <div className=\"menu\">\n        <Menu />\n      </div>\n      {/* Map */}\n      <div className=\"map-container\">\n        <MapView />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;;AAJA;;;;AAMA,MAAM,OAAO,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE;;;;;;IAAyC,KAAK;;AAEpD,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;;;;;;;;;0BAGH,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0HAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}