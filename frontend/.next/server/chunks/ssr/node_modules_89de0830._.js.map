{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/autofill/constants.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/LngLat.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/LngLatBounds.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/utils/uuid.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/SessionToken.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/MapboxError.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/fetch.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/utils/queryParams.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/autofill/AddressAutofillCore.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/searchbox/constants.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/searchbox/SearchBoxCore.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/validate/constants.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/validate/ValidationCore.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/geocode/constants.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/geocode/GeocodingCore.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/types.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/utils/Evented.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/utils/debounce.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/SearchSession.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-core/src/featureToSuggestion.ts"],"sourcesContent":["export const SEARCH_URL = `https://api.mapbox.com/autofill/v1`;\n\nexport const ENDPOINT_SUGGEST = 'suggest';\nexport const ENDPOINT_RETRIEVE = 'retrieve';\n\nexport const SUGGEST_URL = `${SEARCH_URL}/${ENDPOINT_SUGGEST}`;\nexport const RETRIEVE_URL = `${SEARCH_URL}/${ENDPOINT_RETRIEVE}`;\n","/**\n * A `LngLat` object represents a given longitude and latitude coordinate, measured in degrees.\n * These coordinates use longitude, latitude coordinate order (as opposed to latitude, longitude)\n * to match the [GeoJSON specification](https://datatracker.ietf.org/doc/html/rfc7946#section-4),\n * which is equivalent to the OGC:CRS84 coordinate reference system.\n *\n * Note that any method that accepts a `LngLat` object as an argument or option\n * can also accept an `Array` of two numbers and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatLike}.\n *\n * @class LngLat\n * @param lng - Longitude, measured in degrees.\n * @param lat - Latitude, measured in degrees.\n * @example\n * ```typescript\n * const ll = new LngLat(-123.9749, 40.7736);\n * console.log(ll.lng); // = -123.9749\n * ```\n */\nexport class LngLat {\n  /**\n   * @name lng\n   * @instance\n   * @memberof LngLat\n   */\n  readonly lng: number;\n  /**\n   * @name lat\n   * @instance\n   * @memberof LngLat\n   */\n  readonly lat: number;\n\n  constructor(lng: number, lat: number) {\n    if (isNaN(lng) || isNaN(lat)) {\n      throw new Error(`Invalid LngLat object: (${lng}, ${lat})`);\n    }\n    this.lng = +lng;\n    this.lat = +lat;\n    if (this.lat > 90 || this.lat < -90) {\n      throw new Error(\n        'Invalid LngLat latitude value: must be between -90 and 90'\n      );\n    }\n    if (this.lng > 180 || this.lng < -180) {\n      throw new Error(\n        'Invalid LngLat longitude value: must be between -180 and 180'\n      );\n    }\n  }\n\n  /**\n   * Returns the coordinates represented as an array of two numbers.\n   *\n   * @returns The coordinates represeted as an array of longitude and latitude.\n   * @example\n   * ```typescript\n   * const ll = new LngLat(-73.9749, 40.7736);\n   * ll.toArray(); // = [-73.9749, 40.7736]\n   * ```\n   */\n  toArray(): [number, number] {\n    return [this.lng, this.lat];\n  }\n\n  /**\n   * Returns the coordinates represent as a string.\n   *\n   * @returns The coordinates represented as a string of the format `'LngLat(lng, lat)'`.\n   * @example\n   * ```typescript\n   * const ll = new LngLat(-73.9749, 40.7736);\n   * ll.toString(); // = \"LngLat(-73.9749, 40.7736)\"\n   * ```\n   */\n  toString(): string {\n    return `LngLat(${this.lng}, ${this.lat})`;\n  }\n\n  /**\n   * Converts an array of two numbers or an object with `lng` and `lat` or `lon` and `lat` properties\n   * to a `LngLat` object.\n   *\n   * If a `LngLat` object is passed in, the function returns a copy.\n   *\n   * @param input - An array of two numbers or object to convert, or a `LngLat` object to return.\n   * @returns A new `LngLat` object, if a conversion occurred, or the original `LngLat` object.\n   * @example\n   * ```typescript\n   * const arr = [-73.9749, 40.7736];\n   * const ll = LngLat.convert(arr);\n   * console.log(ll);   // = LngLat {lng: -73.9749, lat: 40.7736}\n   * ```\n   */\n  static convert(\n    input:\n      | LngLat\n      | { lng: number; lat: number }\n      | { lon: number; lat: number }\n      | [number, number]\n  ): LngLat {\n    // Make a copy if already an LngLat.\n    if (input instanceof LngLat) {\n      return new LngLat(input.lng, input.lat);\n    }\n\n    if (Array.isArray(input) && input.length === 2) {\n      return new LngLat(Number(input[0]), Number(input[1]));\n    }\n\n    if (\n      !Array.isArray(input) &&\n      typeof input == 'object' &&\n      input !== null &&\n      ('lng' in input || 'lon' in input) &&\n      'lat' in input\n    ) {\n      return new LngLat(\n        Number('lng' in input ? input.lng : input.lon),\n        Number(input.lat)\n      );\n    }\n\n    throw new Error(\n      '`LngLatLike` argument must be specified as an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]'\n    );\n  }\n}\n\n/**\n * A {@link LngLat} object, an array of two numbers representing longitude and latitude,\n * or an object with `lng` and `lat` or `lon` and `lat` properties.\n *\n * @typedef LngLatLike\n * @type {LngLat | [number, number] | { lng: number, lat: number } | { lon: number, lat: number }}\n * @example\n * ```typescript\n * const v1 = new LngLat(-122.420679, 37.772537);\n * const v2 = [-122.420679, 37.772537];\n * const v3 = {lon: -122.420679, lat: 37.772537};\n * ```\n */\nexport type LngLatLike =\n  | LngLat\n  | { lng: number; lat: number }\n  | { lon: number; lat: number }\n  | [number, number];\n","import { LngLat, LngLatLike } from './LngLat';\n\n/**\n * A `LngLatBounds` object represents a geographical bounding box,\n * defined by its southwest and northeast points in longitude and latitude.\n *\n * Note that any method that accepts a `LngLatBounds` object as an argument or option\n * can also accept an `Array` of two {@link LngLatLike} constructs and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatBoundsLike}.\n *\n * @class LngLatBounds\n */\nexport class LngLatBounds {\n  private _ne: LngLat;\n  private _sw: LngLat;\n\n  /**\n   * @param sw - The southwest corner of the bounding box.\n   * @param ne - The northeast corner of the bounding box.\n   * @example\n   * ```typescript\n   * const sw = new LngLat(-73.9876, 40.7661);\n   * const ne = new LngLat(-73.9397, 40.8002);\n   * const llb = new LngLatBounds(sw, ne);\n   * ```\n   */\n  constructor(sw: LngLatLike, ne: LngLatLike) {\n    this._sw = LngLat.convert(sw);\n    this._ne = LngLat.convert(ne);\n  }\n\n  /**\n   * Returns the southwest corner of the bounding box.\n   *\n   * @returns The southwest corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getSouthWest(); // LngLat {lng: -73.9876, lat: 40.7661}\n   * ```\n   */\n  getSouthWest(): LngLat {\n    return this._sw;\n  }\n\n  /**\n   * Returns the northeast corner of the bounding box.\n   *\n   * @returns The northeast corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getNorthEast(); // LngLat {lng: -73.9397, lat: 40.8002}\n   * ```\n   */\n  getNorthEast(): LngLat {\n    return this._ne;\n  }\n\n  /**\n   * Returns the northwest corner of the bounding box. This is commonly used\n   * as the 'min' point in the bounding box.\n   *\n   * @returns The northwest corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getNorthWest(); // LngLat {lng: -73.9876, lat: 40.8002}\n   * ```\n   */\n  getNorthWest(): LngLat {\n    return new LngLat(this.getWest(), this.getNorth());\n  }\n\n  /**\n   * Returns the southeast corner of the bounding box. This is commonly used\n   * as the 'max' point in the bounding box.\n   *\n   * @returns The southeast corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getSouthEast(); // LngLat {lng: -73.9397, lat: 40.7661}\n   * ```\n   */\n  getSouthEast(): LngLat {\n    return new LngLat(this.getEast(), this.getSouth());\n  }\n\n  /**\n   * Returns the west edge of the bounding box.\n   *\n   * @returns The west edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getWest(); // -73.9876\n   * ```\n   */\n  getWest(): number {\n    return this._sw.lng;\n  }\n\n  /**\n   * Returns the south edge of the bounding box.\n   *\n   * @returns The south edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getSouth(); // 40.7661\n   * ```\n   */\n  getSouth(): number {\n    return this._sw.lat;\n  }\n\n  /**\n   * Returns the east edge of the bounding box.\n   *\n   * @returns The east edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getEast(); // -73.9397\n   * ```\n   */\n  getEast(): number {\n    return this._ne.lng;\n  }\n\n  /**\n   * Returns the north edge of the bounding box.\n   *\n   * @returns The north edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getNorth(); // 40.8002\n   * ```\n   */\n  getNorth(): number {\n    return this._ne.lat;\n  }\n\n  /**\n   * Returns the bounding box represented as an array.\n   *\n   * @returns The bounding box represented as an array, consisting of the\n   *   southwest and northeast coordinates of the bounding represented as arrays of numbers.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.toArray(); // = [[-73.9876, 40.7661], [-73.9397, 40.8002]]\n   * ```\n   */\n  toArray(): [[number, number], [number, number]] {\n    return [this._sw.toArray(), this._ne.toArray()];\n  }\n\n  /**\n   * Returns the bounding box represented as a flattened array.\n   *\n   * @returns The bounding box represented as an array of numbers in [west, south, east, north] order.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.toFlatArray(); // = [-73.9876, 40.7661, -73.9397, 40.8002]\n   * ```\n   */\n  toFlatArray(): [number, number, number, number] {\n    return [this._sw.lng, this._sw.lat, this._ne.lng, this._ne.lat];\n  }\n\n  /**\n   * Return the bounding box represented as a string.\n   *\n   * @returns The bounding box represents as a string of the format\n   *   `'LngLatBounds(LngLat(lng, lat), LngLat(lng, lat))'`.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.toString(); // = \"LngLatBounds(LngLat(-73.9876, 40.7661), LngLat(-73.9397, 40.8002))\"\n   * ```\n   */\n  toString(): string {\n    return `LngLatBounds(${this._sw.toString()}, ${this._ne.toString()})`;\n  }\n\n  /**\n   * Converts an array to a `LngLatBounds` object.\n   *\n   * If a `LngLatBounds` object is passed in, the function returns a copy.\n   *\n   * Internally, the function calls `LngLat#convert` to convert arrays to `LngLat` values.\n   *\n   * @param input - An array of two coordinates to convert, or a `LngLatBounds` object to return.\n   * @returns A new `LngLatBounds` object, if a conversion occurred, or the original `LngLatBounds` object.\n   * @example\n   * ```typescript\n   * const arr = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n   * const llb = LngLatBounds.convert(arr);\n   * console.log(llb);   // = LngLatBounds {_sw: LngLat {lng: -73.9876, lat: 40.7661}, _ne: LngLat {lng: -73.9397, lat: 40.8002}}\n   * ```\n   */\n  static convert(\n    input:\n      | LngLatBounds\n      | [LngLatLike, LngLatLike]\n      | [number, number, number, number]\n  ): LngLatBounds {\n    if (!input) {\n      throw new Error('Invalid LngLatBounds convert value: falsy');\n    }\n\n    // Make a copy if already an LngLatBounds.\n    if (input instanceof LngLatBounds) {\n      return new LngLatBounds(input.getSouthWest(), input.getNorthEast());\n    }\n\n    if (Array.isArray(input) && input.length === 2) {\n      return new LngLatBounds(\n        LngLat.convert(input[0]),\n        LngLat.convert(input[1])\n      );\n    }\n\n    if (Array.isArray(input) && input.length === 4) {\n      return new LngLatBounds(\n        LngLat.convert([input[0], input[1]]),\n        LngLat.convert([input[2], input[3]])\n      );\n    }\n\n    throw new Error(\n      '`LngLatBoundsLike` argument must be specified as an array [<LngLatLike>, <LngLatLike>] or an array [<west>, <south>, <east>, <north>]'\n    );\n  }\n}\n\n/**\n * A {@link LngLatBounds} object, an array of {@link LngLatLike} objects in [sw, ne] order,\n * or an array of numbers in [west, south, east, north] order.\n *\n * @typedef LngLatBoundsLike\n * @type {LngLatBounds | [LngLatLike, LngLatLike] | [number, number, number, number]}\n * @example\n * ```typescript\n * const v1 = new LngLatBounds(\n *   new LngLat(-73.9876, 40.7661),\n *   new LngLat(-73.9397, 40.8002)\n * );\n * const v2 = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n * const v3 = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n * ```\n */\nexport type LngLatBoundsLike =\n  | LngLatBounds\n  | [LngLatLike, LngLatLike]\n  | [number, number, number, number];\n","const UUID_RE =\n  /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\n/**\n * Validates the UUID v4.\n * @param id - UUID value.\n */\nexport function validateUUID(id: string): boolean {\n  return UUID_RE.test(id);\n}\n\n/**\n * Generates a RFC4122 v4 UUID (pseudo-randomly-based)\n *\n * IMPORTANT: THIS IS NOT CRYPTO-GRAPHICALLY SECURE!\n *\n * Since we're using this to generate a random UUID, essentially as an SKU,\n * we don't need to worry about the randomness of the values as much.\n */\nexport function generateUUID(): string {\n  const randomString =\n    Math.random().toString(16) +\n    Date.now().toString(16) +\n    Math.random().toString(16);\n\n  const uuidString = randomString.replace(/\\./g, '');\n\n  const uuid = [\n    uuidString.slice(0, 8),\n    uuidString.slice(8, 12),\n    '4' + uuidString.slice(12, 15) + '-8' + uuidString.slice(15, 18),\n    uuidString.slice(18, 30)\n  ].join('-');\n\n  return uuid;\n}\n","import { generateUUID } from './utils/uuid';\n\n/**\n * A `SessionToken` object is a unique identifier that groups together `suggest` / `retrieve` calls as part of the\n * [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/#retrieve-a-suggested-feature).\n *\n * Session tokens are used for [billing](https://docs.mapbox.com/api/search/search-box/#search-box-api-pricing) and\n * customer-accessible analytics.\n *\n * A [UUIDv4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) value is recommended,\n * and is generated if an `id` is not provided.\n *\n * Note that any method that accepts a `SessionToken` object as an argument or option\n * can also accept a unique `string` and will perform an implicit conversion.\n * This flexible type is documented as {@link SessionTokenLike}.\n *\n * @name SessionToken\n * @example\n * ```typescript\n * const token = new SessionToken();\n * console.log(token.id); // = I am a UUIDv4 value!\n * ```\n */\nexport class SessionToken {\n  /**\n   * The session token in string format.\n   */\n  readonly id: string;\n\n  constructor(id?: string) {\n    this.id = id ?? generateUUID();\n  }\n\n  /**\n   * Returns the session token in string format.\n   *\n   * This is the same as calling `token.id`, and is okay to be used for serialization.\n   */\n  toString(): string {\n    return this.id;\n  }\n\n  /**\n   * Converts a string to a `SessionToken` object.\n   *\n   * If a `SessionToken` object is passed in, the function returns a copy.\n   */\n  static convert(token: SessionToken | string): SessionToken {\n    return new SessionToken(\n      token instanceof SessionToken ? token.id : token.toString()\n    );\n  }\n}\n\n/**\n * A {@link SessionToken} object or string representing a Mapbox Search Box API session token.\n *\n * It's recommended this value is a [UUIDv4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) value.\n *\n * @typedef SessionTokenLike\n * @type {SessionToken | string}\n * @example\n * const v1 = new SessionToken();\n * const v2 = new SessionToken('f06e7531-6373-4d5a-8614-b6f313488050');\n * const v3 = 'f06e7531-6373-4d5a-8614-b6f313488050';\n */\nexport type SessionTokenLike = string | SessionToken;\n","export const UNKNOWN_ERROR = 'Unknown error';\n\n/**\n * Thrown from Search JS Core functions when a network request fails.\n *\n * See common errors here:\n * - [SearchBoxCore](https://docs.mapbox.com/api/search/search-box/#search-box-api-errors)\n * - [AddressAutofillCore](https://docs.mapbox.com/api/search/geocoding-v6/#geocoding-api-errors)\n */\nexport class MapboxError extends Error {\n  readonly statusCode: number;\n\n  constructor(json: Record<string, unknown>, statusCode: number) {\n    super(String(json.message || json.error || UNKNOWN_ERROR));\n    this.name = 'MapboxError';\n    this.statusCode = statusCode;\n  }\n\n  /**\n   * Modified Error toString() method to include the status code.\n   */\n  toString(): string {\n    return `${this.name} (${this.statusCode}): ${this.message}`;\n  }\n}\n\n/**\n * Utility function to see if the result is \"ok\" (in 200 range).\n *\n * If not, throw a {@link MapboxError} filled out by the\n * [JSON error format](https://docs.mapbox.com/api/search/search-box/#search-box-api-errors).\n */\nexport async function handleNonOkRes(res: Response): Promise<void> {\n  if (!res.ok) {\n    const json = await res.json();\n    throw new MapboxError(json, res.status);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// GLOBALS\nlet _fetchImpl: typeof fetch = globalThis.fetch;\nlet _abortControllerImpl: typeof AbortController = globalThis.AbortController;\n\ninterface FetchImplementation {\n  fetch: typeof fetch;\n  AbortController: typeof AbortController;\n}\n\n/**\n * Polyfills {@link fetch} implementation used in Search JS Core.\n *\n * If a `fetch` implementation is already available, the polyfill will be\n * silently ignored.\n *\n * When running Search JS Core in a Node.js environment, fetch must be either\n * polyfilled globally or passed into this function before usage of\n * internal library functionality.\n *\n * @param opts Options for the polyfill.\n * @param {fetch} opts.fetch Required. A custom `fetch` implementation.\n * @param {AbortController} opts.AbortController Required. A custom `AbortController` implementation.\n * @param {boolean} force If `true`, the polyfill will be forced to load. Otherwise, it will only load if `fetch` is not available.\n */\nexport function polyfillFetch(\n  { fetch, AbortController }: FetchImplementation,\n  force = false\n): void {\n  if (!fetch) {\n    throw new Error(\n      'Fetch implementation must include implementations of `fetch`.'\n    );\n  }\n\n  if (_fetchImpl && !force) {\n    return;\n  }\n  _fetchImpl = fetch;\n  _abortControllerImpl = AbortController;\n}\n\n/**\n * Returns the {@link FetchImplementation} used by Search JS Core.\n */\nexport function getFetch(): FetchImplementation {\n  if (!_fetchImpl) {\n    throw new Error(\n      'Fetch implementation not found. Please include a fetch polyfill in your application or use `polyfillFetch` from `@mapbox/search-js-core` to fix this issue.'\n    );\n  }\n\n  return {\n    fetch: _fetchImpl,\n    AbortController: _abortControllerImpl\n  };\n}\n","type Primitive = string | number | boolean | null;\n\n/**\n * tl;dr - [classnames](https://www.npmjs.com/package/classnames) for query parameters.\n *\n * Encodes query parameters into a stringified form, good for use with {@link URL#search}.\n * Objects are key-value pairs, and if a falsy object is passed, it will be omitted.\n *\n * Null and undefined values are ignored.\n * Array values are encoded as comma-separated values.\n *\n * @example\n * ```typescript\n * const limit = 0;\n * const offset = null;\n * const params = queryParams(\n *  {\n *    q: 'pizza',\n *    c: null\n *  },\n *  (limit != null) && { limit },\n *  (offset != null) && { offset }\n * );\n * console.log(params); // = 'q=pizza&limit=0'\n * ```\n */\nexport function queryParams<T extends Record<string, Primitive>>(\n  ...objects: (T | false)[]\n): string {\n  const params = [];\n  for (const obj of objects) {\n    if (!obj) continue;\n\n    const entries = Object.entries(obj);\n    for (const [key, value] of entries) {\n      if (value == null) continue;\n      params.push(`${key}=${encodeURIComponent(String(value))}`);\n    }\n  }\n\n  return params.join('&');\n}\n","import { RETRIEVE_URL, SUGGEST_URL } from './constants';\nimport {\n  AddressAutofillSuggestion,\n  AddressAutofillFeatureSuggestion\n} from './types';\n\nimport { LngLat, LngLatLike } from '../LngLat';\nimport { LngLatBounds, LngLatBoundsLike } from '../LngLatBounds';\nimport { SessionToken, SessionTokenLike } from '../SessionToken';\n\nimport { handleNonOkRes } from '../MapboxError';\nimport { getFetch } from '../fetch';\nimport { queryParams } from '../utils/queryParams';\n\ninterface AccessTokenOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n}\n\ninterface FetchOptions {\n  /**\n   * If specified, the connected {@link AbortController} can be used to\n   * abort the current network request(s).\n   *\n   * This mechanism intentionally works in the same way as the\n   * [`fetch` API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#aborting_a_fetch).\n   *\n   * Reference:\n   * https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal#examples\n   */\n  signal?: AbortSignal;\n}\n\ninterface SessionTokenOptions {\n  /**\n   * A customer-provided session token value, which groups a series of requests together for [billing purposes](https://www.mapbox.com/pricing#autofill-session).\n   *\n   * Reference:\n   * https://www.mapbox.com/pricing#autofill-session\n   */\n  sessionToken: SessionTokenLike;\n}\n\n/**\n * Options used by {@link AddressAutofillCore} and {@link useAddressAutofillCore} to control the location, language, country, and limit of results. All properties are optional.\n *\n * @typedef {Object} AddressAutofillOptions\n * @property {string} language The [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) to be returned. If not specified, `en` will be used.\n * @property {string} country An [ISO 3166 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to be returned. If not specified, results will not be filtered by country.\n * @property {string | LngLatBoundsLike} bbox Limit results to only those contained within the supplied bounding box.\n * @property {string | number} limit The number of results to return, up to `10`.\n * @property {string | LngLatLike} proximity Bias the response to favor results that are closer to this location. Provide a point coordinate provided as a{@link LngLatLike}, or use the string `ip` to use the requester's IP address.\n * @property {string | boolean} streets If enabled, street results may be returned in addition to addresses. Defaults to `true`.\n */\n\nexport interface AddressAutofillOptions {\n  language: string;\n  country: string;\n  bbox: string | LngLatBoundsLike;\n  limit: string | number;\n  proximity: string | LngLatLike;\n  streets: string | boolean;\n}\n\n/**\n * @typedef AddressAutofillSuggestionResponse\n */\nexport interface AddressAutofillSuggestionResponse {\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned suggestion objects.\n   *\n   * @see {@link Suggestion}\n   */\n  suggestions: AddressAutofillSuggestion[];\n  url: string;\n}\n\n/**\n * @typedef AddressAutofillRetrieveResponse\n */\nexport interface AddressAutofillRetrieveResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link FeatureSuggestion}\n   */\n  features: AddressAutofillFeatureSuggestion[];\n  url: string;\n}\n\n/**\n * A `AddressAutofillCore` object is an application's main entrypoint to the\n * Mapbox Address Autofill API. The Mapbox Address Autofill API is an API similar to {@link SearchBoxCore},\n * but targeted towards **address** autocomplete.\n *\n * Only address types are returned by the API.\n *\n * `AddressAutofillCore` is focused on the two-step, interactive search experience. These steps are:\n *   1. {@link AddressAutofillCore#suggest}: The user enters a search term, and a list of suggested results is returned with\n *     address data.\n *   2. {@link AddressAutofillCore#retrieve}: The user selects a result from the list of suggested results, and the\n *     corresponding geographic coordinates are returned.\n *\n * A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) is required to use `AddressAutofillCore`, and\n * other options may be specified either in the constructor or in the {@link AddressAutofillCore#suggest} call.\n *\n * @class AddressAutofillCore\n * @param {AddressAutofillOptions} [options]\n * @param {string} [options.accessToken]\n */\nexport class AddressAutofillCore {\n  static defaults: Partial<AddressAutofillOptions> = {\n    language: 'en',\n    proximity: 'ip',\n    streets: true\n  };\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n\n  /**\n   * Any default options ({@link AddressAutofillOptions}) to be merged into options in the following methods:\n   * - {@link AddressAutofillCore#suggest}\n   *\n   * @type {AddressAutofillOptions}\n   */\n  defaults: Partial<AddressAutofillOptions>;\n\n  #responseHeaders: Headers;\n  get responseHeaders(): Headers {\n    return this.#responseHeaders;\n  }\n\n  constructor(\n    options: Partial<AccessTokenOptions & AddressAutofillOptions> = {}\n  ) {\n    const { accessToken, ...defaults } = options;\n\n    this.accessToken = accessToken;\n\n    // Assign defaults to this.defaults.\n    this.defaults = {\n      ...AddressAutofillCore.defaults,\n      ...defaults\n    };\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * {@link AddressAutofillCore#suggest} is \"part one\" of the two-step autofill experience, and includes\n   * autofill information.\n   *\n   * Suggestion objects **do not include geographic coordinates**. To get the coordinates of the result, use {@link AddressAutofillCore#retrieve}.\n   *\n   * For tracking purposes, it is useful for any follow-up requests based on this suggestion to include same\n   * {@link SessionToken} as the original request.\n   *\n   * If you'd like session tokens to be handled automatically, see {@link SearchSession}.\n   *\n   * @param {AddressAutofillOptions} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async suggest(\n    searchText: string,\n    optionsArg: SessionTokenOptions &\n      Partial<FetchOptions & AddressAutofillOptions>\n  ): Promise<AddressAutofillSuggestionResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n\n    const { sessionToken, signal } = optionsArg;\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      sessionToken\n    };\n\n    const url = new URL(`${SUGGEST_URL}/${encodeURIComponent(searchText)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    this.#responseHeaders = res.headers;\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as AddressAutofillSuggestionResponse;\n\n    // Add 'original_search_text' so we can retrieve.\n    return {\n      ...json,\n      suggestions: json.suggestions.map((suggestion) => {\n        return {\n          ...suggestion,\n          original_search_text: searchText\n        };\n      }),\n      url: url.toString()\n    };\n  }\n\n  /**\n   * {@link AddressAutofillCore#retrieve} is \"part two\" of the two-step autofill experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * {@link suggestion} is usually a {@link AddressAutofillSuggestion} returned from \"part one,\"\n   * {@link AddressAutofillCore#suggest}.\n   *\n   * **Legal terms:**\n   *\n   * Geographic coordinates should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {AddressAutofillOptions} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async retrieve(\n    suggestion: AddressAutofillSuggestion,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions>\n  ): Promise<AddressAutofillRetrieveResponse> {\n    if (!suggestion) {\n      throw new Error('suggestion is required');\n    }\n    if (!this.canRetrieve(suggestion)) {\n      throw new Error('suggestion cannot be retrieved');\n    }\n\n    const { sessionToken: sessionTokenLike, signal } = optionsArg;\n\n    const sessionToken = SessionToken.convert(sessionTokenLike);\n\n    const url = new URL(`${RETRIEVE_URL}/${suggestion.action.id}`);\n    url.search = queryParams({\n      access_token: this.accessToken,\n      session_token: sessionToken.id\n    });\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), { signal });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as AddressAutofillRetrieveResponse;\n    json.url = url.toString();\n    return json;\n  }\n\n  /**\n   * Returns the query parameters used by {@link AddressAutofillCore#suggest}\n   */\n  #getQueryParams(\n    options: Partial<AddressAutofillOptions & SessionTokenOptions>\n  ): string {\n    return queryParams(\n      {\n        types: 'address',\n        access_token: this.accessToken,\n        streets: options.streets,\n        language: options.language,\n        country: options.country,\n        limit: options.limit\n      },\n      options.sessionToken && {\n        session_token: SessionToken.convert(options.sessionToken).id\n      },\n      options.proximity && {\n        proximity:\n          typeof options.proximity === 'string'\n            ? options.proximity\n            : LngLat.convert(options.proximity).toArray().join(',')\n      },\n      options.bbox && {\n        bbox:\n          typeof options.bbox === 'string'\n            ? options.bbox\n            : LngLatBounds.convert(options.bbox).toFlatArray().join(',')\n      }\n    );\n  }\n\n  /**\n   * Returns true if {@link AddressAutofillCore#retrieve} can be called on this suggestion,\n   * false otherwise.\n   */\n  canRetrieve(suggestion: AddressAutofillSuggestion): boolean {\n    const action = suggestion.action;\n\n    return typeof action?.id === 'string';\n  }\n}\n","export const SEARCH_URL = `https://api.mapbox.com/search/searchbox/v1`;\n\nexport const ENDPOINT_SUGGEST = 'suggest';\nexport const ENDPOINT_RETRIEVE = 'retrieve';\nexport const ENDPOINT_CATEGORY = 'category';\nexport const ENDPOINT_REVERSE = 'reverse';\n\nexport const SUGGEST_URL = `${SEARCH_URL}/${ENDPOINT_SUGGEST}`;\nexport const RETRIEVE_URL = `${SEARCH_URL}/${ENDPOINT_RETRIEVE}`;\nexport const CATEGORY_URL = `${SEARCH_URL}/${ENDPOINT_CATEGORY}`;\nexport const REVERSE_URL = `${SEARCH_URL}/${ENDPOINT_REVERSE}`;\n","import {\n  CATEGORY_URL,\n  RETRIEVE_URL,\n  REVERSE_URL,\n  SUGGEST_URL\n} from './constants';\nimport {\n  SearchBoxAdministrativeUnitTypes,\n  SearchBoxSuggestion,\n  SearchBoxFeatureSuggestion,\n  SearchBoxCategorySuggestion\n} from './types';\n\nimport { LngLat, LngLatLike } from '../LngLat';\nimport { LngLatBounds, LngLatBoundsLike } from '../LngLatBounds';\nimport { SessionToken, SessionTokenLike } from '../SessionToken';\n\nimport { handleNonOkRes } from '../MapboxError';\nimport { getFetch } from '../fetch';\nimport { queryParams } from '../utils/queryParams';\n\ninterface AccessTokenOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n}\n\ninterface FetchOptions {\n  /**\n   * If specified, the connected {@link AbortController} can be used to\n   * abort the current network request(s).\n   *\n   * This mechanism works in the same way as the [`fetch` API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#aborting_a_fetch).\n   *\n   * Reference:\n   * https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal#examples\n   */\n  signal?: AbortSignal;\n}\n\ninterface SessionTokenOptions {\n  /**\n   * A customer-provided session token value, which groups a series of requests\n   * together for [billing purposes](https://docs.mapbox.com/api/search/search-box/#search-box-api-pricing).\n   *\n   * Reference:\n   * https://docs.mapbox.com/api/search/search-box/#search-box-api-pricing\n   */\n  sessionToken: SessionTokenLike;\n}\n\ninterface SearchQueryOptions {\n  /**\n   * The user's query string. The query is limited to 256 characters.\n   */\n  q: string;\n}\n\n/**\n * @typedef SearchBoxOptions\n */\nexport interface SearchBoxOptions {\n  /**\n   * The [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) to be returned.\n   *\n   * If not specified, `en` will be used.\n   */\n  language?: string;\n  /**\n   * The number of results to return, up to `10`.\n   */\n  limit?: string | number;\n  /**\n   * Bias the response to favor results that are closer to this location.\n   *\n   * When both {@link SearchBoxOptions#proximity} and {@link SearchBoxOptions#origin} are specified, `origin` is interpreted as the\n   * target of a route, while `proximity` indicates the current user location.\n   */\n  proximity?: string | LngLatLike;\n  /**\n   * The location from which to calculate distance. **This parameter may incur additional latency.**\n   *\n   * When both {@link SearchBoxOptions#proximity} and {@link SearchBoxOptions#origin} are specified, `origin` is interpreted as the\n   * target of a route, while `proximity` indicates the current user location.\n   *\n   * For distance calculations, both {@link SearchBoxOptions#navigation_profile} and\n   * {@link SearchBoxOptions#origin} must be specified.\n   *\n   * For ETA calculations: {@link SearchBoxOptions#navigation_profile},\n   * {@link SearchBoxOptions#origin}, and {@link SearchBoxOptions#eta_type} must be specified.\n   */\n  origin?: string | LngLatLike;\n  /**\n   * Limit results to only those contained within the supplied bounding box.\n   */\n  bbox?: string | LngLatBoundsLike;\n  /**\n   * The navigation routing profile to use for distance/eta calculations.\n   *\n   * For distance calculations, both {@link SearchBoxOptions#navigation_profile} and\n   * {@link SearchBoxOptions#origin} must be specified.\n   *\n   * For ETA calculations: {@link SearchBoxOptions#navigation_profile},\n   * {@link SearchBoxOptions#origin}, and {@link SearchBoxOptions#eta_type} must be specified.\n   */\n  navigation_profile?: 'driving' | 'walking' | 'cycling';\n  /**\n   * A polyline encoded linestring describing the route to be used for searching.\n   *\n   * Both polyline5 and polyline6 precision are accepted, but must be specified using the {@link SearchBoxOptions#route_geometry} parameter.\n   */\n  route?: string;\n  /**\n   * Passed in conjunction with a route polyline describing its precision. Options are polyline or polyline6. If this parameter is not provided with a {@link SearchBoxOptions#route}, the default is polyline.\n   *\n   * Accurate results depend on including the correct route_geometry for the {@link SearchBoxOptions#route} provided.\n   */\n  route_geometry?: string;\n  /**\n   * This indicates that the user intends to perform a higher cost search-along-route request.\n   *\n   * This should be included when {@link SearchBoxOptions#route} is included and should have a value of isochrone.\n   */\n  sar_type?: string;\n  /**\n   * Maximum detour in estimated minutes from route.\n   */\n  time_deviation?: string | number;\n  /**\n   * Used to estimate the time of arrival from the location specified in {@link SearchBoxOptions#origin}.\n   *\n   * The only allowed value for this parameter is navigation. This parameter, along with {@link SearchBoxOptions#origin} and {@link SearchBoxOptions#navigation_profile}, is required for ETA calculations.\n   *\n   * ETA calculations will incur additional latency.\n   */\n  eta_type?: 'navigation';\n  /**\n   * An [ISO 3166 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to be returned.\n   *\n   * If not specified, results will not be filtered by country.\n   */\n  country?: string;\n  /**\n   * Limit results to one or more types of features. If no types are specified, all possible types may be returned.\n   *\n   * Reference:\n   * https://docs.mapbox.com/api/search/search-box/#administrative-unit-types\n   */\n  types?: string | Set<SearchBoxAdministrativeUnitTypes>;\n  /**\n   * Limit results to those that belong to one or more categories, provided as a comma-separated list.\n   */\n  poi_category?: string;\n  /**\n   * A comma-separated list of rich metadata providers to include in a suggestion result.\n   */\n  rich_metadata_provider?: string;\n  /**\n   * A comma-separated list of canonical category names that limits POI results to those that are not part of the given categories.\n   */\n  poi_category_exclusions?: string;\n}\n\n/**\n * @typedef SearchBoxSuggestionResponse\n * Reference:\n * https://docs.mapbox.com/api/search/search-box/#response-get-suggested-results\n */\nexport interface SearchBoxSuggestionResponse {\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned suggestion objects.\n   *\n   * @see {@link SearchBoxSuggestion}\n   */\n  suggestions: SearchBoxSuggestion[];\n  url: string;\n}\n\n/**\n * @typedef SearchBoxRetrieveResponse\n * Reference:\n * https://docs.mapbox.com/api/search/search-box/#response-retrieve-a-suggested-feature\n */\nexport interface SearchBoxRetrieveResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link SearchBoxFeatureSuggestion}\n   */\n  features: SearchBoxFeatureSuggestion[];\n  url: string;\n}\n\n/**\n * @typedef SearchBoxReverseResponse\n * Reference:\n * https://docs.mapbox.com/api/search/search-box/#response-perform-a-reverse-lookup\n */\nexport interface SearchBoxReverseResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link SearchBoxFeatureSuggestion}\n   */\n  features: SearchBoxFeatureSuggestion[];\n  url: string;\n}\n\n/**\n * @typedef SearchBoxCategoryResponse\n * Reference:\n * https://docs.mapbox.com/api/search/search-box/#response-retrieve-pois-by-category\n */\nexport interface SearchBoxCategoryResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link SearchBoxCategorySuggestion}\n   */\n  features: SearchBoxCategorySuggestion[];\n  url: string;\n}\n\n/**\n * A `SearchBoxCore` object is an application's main entrypoint to the [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/).\n *\n * `SearchBoxCore` is focused on the two-step, interactive search experience. These steps are:\n *   1. {@link SearchBoxCore#suggest}: The user enters a search term, and a list of suggested results is returned with\n *      optional data such as: eta, distance calculations, etc.\n *   2. {@link SearchBoxCore#retrieve}: The user selects a result from the list of suggested results, and the\n *     corresponding geographic coordinates are returned for displaying on a map or otherwise manipulating.\n *\n * A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) is required to use `SearchBoxCore`, and\n * other options may be specified either in the constructor or in the {@link SearchBoxCore#suggest} call.\n *\n * @class SearchBoxCore\n * @param {SearchBoxOptions} [options]\n * @param {string} [options.accessToken]\n *\n * @example\n * ```typescript\n * const search = new SearchBoxCore({ accessToken: 'pk.my-mapbox-access-token' });\n *\n * const sessionToken = new SessionToken();\n * const result = await search.suggest('Washington D.C.', { sessionToken });\n * if (result.suggestions.length === 0) return;\n *\n * const suggestion = result.suggestions[0];\n * const { features } = await search.retrieve(suggestion, { sessionToken });\n * doSomethingWithCoordinates(features);\n * ```\n */\nexport class SearchBoxCore {\n  static defaults: Partial<SearchBoxOptions> = {\n    language: 'en'\n  };\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n\n  /**\n   * Any default options ({@link SearchBoxOptions}) to be merged into options in the following methods:\n   * - {@link SearchBoxCore#suggest}\n   * - {@link SearchBoxCore#retrieve}\n   * - {@link SearchBoxCore#reverse}\n   */\n  defaults: Partial<SearchBoxOptions>;\n\n  constructor(options: Partial<AccessTokenOptions & SearchBoxOptions> = {}) {\n    const { accessToken, ...defaults } = options;\n\n    this.accessToken = accessToken;\n\n    // Assign defaults to this.defaults.\n    this.defaults = {\n      ...SearchBoxCore.defaults,\n      ...defaults\n    };\n  }\n\n  /** @section {Interactive search} */\n\n  /**\n   * {@link SearchBoxCore#suggest} is \"part one\" of the two-step interactive search experience, and includes\n   * useful information such as: {@link SearchBoxSuggestion#name}, {@link SearchBoxSuggestion#place_formatted}, and {@link SearchBoxSuggestion#maki}.\n   *\n   * Suggestion objects **do not include geographic coordinates**. To get the coordinates of the result, use {@link SearchBoxCore#retrieve}.\n   *\n   * For tracking purposes, it is useful for any follow-up requests based on this suggestion to include same\n   * {@link SessionToken} as the original request.\n   *\n   * If you'd like session tokens to be handled automatically, see {@link SearchSession}.\n   *\n   * @param {string} searchText\n   * @param {SearchBoxOptions} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async suggest(\n    searchText: string,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions & SearchBoxOptions>\n  ): Promise<SearchBoxSuggestionResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n\n    const { sessionToken, signal } = optionsArg;\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      q: searchText,\n      sessionToken\n    };\n\n    if (options.eta_type && (!options.origin || !options.navigation_profile)) {\n      throw new Error(\n        'to provide eta estimate: eta, navigation_profile, and origin are required'\n      );\n    }\n    if (options.origin && !options.navigation_profile) {\n      throw new Error(\n        'to provide distance estimate: both navigation_profile and origin are required'\n      );\n    }\n\n    const url = new URL(SUGGEST_URL);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as SearchBoxSuggestionResponse;\n    json.url = url.toString();\n    return json;\n  }\n\n  /**\n   * {@link SearchBoxCore#retrieve} is \"part two\" of the two-step interactive search experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * `suggestion` is usually a {@link SearchBoxSuggestion} returned from \"part one,\" {@link SearchBoxCore#suggest}.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * The [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {any} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async retrieve(\n    suggestion: SearchBoxSuggestion,\n    optionsArg: SessionTokenOptions &\n      Partial<FetchOptions & Pick<SearchBoxOptions, 'language'>>\n  ): Promise<SearchBoxRetrieveResponse> {\n    if (!suggestion) {\n      throw new Error('suggestion is required');\n    }\n\n    const { sessionToken: sessionTokenLike, signal, language } = optionsArg;\n\n    const sessionToken = SessionToken.convert(sessionTokenLike);\n\n    const options = {\n      ...this.defaults,\n      ...(language && { language })\n    };\n\n    const url = new URL(\n      `${RETRIEVE_URL}/${encodeURIComponent(suggestion.mapbox_id)}`\n    );\n    url.search = queryParams(\n      {\n        access_token: this.accessToken,\n        session_token: sessionToken.id\n      },\n      { language: options.language }\n    );\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as SearchBoxRetrieveResponse;\n    json.url = url.toString();\n    return json;\n  }\n\n  /** @section {Programmatic search} */\n\n  /**\n   * {@link SearchBoxCore#category} makes it possible to browse entire categories of results,\n   * like coffee shops, hotels, and bookstores around a specific location or along a route and returns feature collection\n   * in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * **Legal terms:**\n   *\n   * The [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {Options} optionsArg\n   * @param {AbortSignal} [optionsArg.signal]\n   * @param {boolean} [optionsArg.permanent]\n   */\n  async category(\n    category: string,\n    optionsArg: Partial<FetchOptions & SearchBoxOptions> = {}\n  ): Promise<SearchBoxCategoryResponse> {\n    if (!category) {\n      throw new Error('category is required');\n    }\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg\n    };\n\n    const url = new URL(`${CATEGORY_URL}/${encodeURIComponent(category)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal: options.signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as SearchBoxCategoryResponse;\n    json.url = url.toString();\n\n    return json;\n  }\n\n  /**\n   * {@link SearchBoxCore#reverse} endpoint allows you to look up a single pair of coordinates and returns the geographic feature or features\n   * that exist at that location. The response to a request is a [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) FeatureCollection.\n   *\n   * Using the limit parameter, you can increase the maximum number of results up to 10. Pagination is not available, but this feature may be added in a later release.\n   * There is not an option to customize the order of search results.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * The [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param lngLat - Either a {@link LngLatLike} object or string in 'lng,lat' comma-separated format.\n   * @param {Options} optionsArg\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async reverse(\n    lngLat: string | LngLatLike,\n    optionsArg: Partial<FetchOptions & SearchBoxOptions> = {}\n  ): Promise<SearchBoxReverseResponse> {\n    if (!lngLat) {\n      throw new Error('lngLat is required');\n    }\n\n    const [lng, lat] =\n      typeof lngLat === 'string'\n        ? lngLat.split(',').map((x) => parseFloat(x))\n        : LngLat.convert(lngLat).toArray();\n\n    if (isNaN(lng) || isNaN(lat)) {\n      throw new Error('lngLat is required');\n    }\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg\n    };\n\n    const url = new URL(REVERSE_URL);\n\n    url.search = queryParams(\n      {\n        access_token: this.accessToken,\n        language: options.language,\n        limit: options.limit,\n        longitude: lng,\n        latitude: lat\n      },\n      options.types && {\n        types:\n          typeof options.types === 'string'\n            ? options.types\n            : [...options.types].join(',')\n      }\n    );\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal: options.signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as SearchBoxReverseResponse;\n    json.url = url.toString();\n\n    return json;\n  }\n\n  /**\n   * Returns the query parameters used by {@link SearchBoxCore#suggest}\n   */\n  #getQueryParams(\n    options: Partial<\n      SearchBoxOptions & SessionTokenOptions & SearchQueryOptions\n    >\n  ): string {\n    return queryParams(\n      {\n        q: options.q,\n        access_token: this.accessToken,\n        language: options.language,\n        limit: options.limit,\n        navigation_profile: options.navigation_profile,\n        route: options.route,\n        route_geometry: options.route_geometry,\n        sar_type: options.sar_type,\n        time_deviation: options.time_deviation,\n        eta_type: options.eta_type,\n        country: options.country,\n        poi_category: options.poi_category,\n        rich_metadata_provider: options.rich_metadata_provider,\n        poi_category_exclusions: options.poi_category_exclusions\n      },\n      options.sessionToken && {\n        session_token: SessionToken.convert(options.sessionToken).id\n      },\n      options.proximity && {\n        proximity:\n          typeof options.proximity === 'string'\n            ? options.proximity\n            : LngLat.convert(options.proximity).toArray().join(',')\n      },\n      options.origin && {\n        origin:\n          typeof options.origin === 'string'\n            ? options.origin\n            : LngLat.convert(options.origin).toArray().join(',')\n      },\n      options.bbox && {\n        bbox:\n          typeof options.bbox === 'string'\n            ? options.bbox\n            : LngLatBounds.convert(options.bbox).toFlatArray().join(',')\n      },\n      options.types && {\n        types:\n          typeof options.types === 'string'\n            ? options.types\n            : [...options.types].join(',')\n      }\n    );\n  }\n}\n","export const SEARCH_URL = `https://api.mapbox.com/autofill/v1`;\n\nexport const ENDPOINT_VALIDATE = 'retrieve';\n\nexport const VALIDATE_URL = `${SEARCH_URL}/${ENDPOINT_VALIDATE}`;\n","import { VALIDATE_URL } from './constants';\nimport { ValidationFeature } from './types';\n\nimport { LngLat, LngLatLike } from '../LngLat';\nimport { LngLatBounds, LngLatBoundsLike } from '../LngLatBounds';\nimport { SessionToken, SessionTokenLike } from '../SessionToken';\n\nimport { handleNonOkRes } from '../MapboxError';\nimport { getFetch } from '../fetch';\nimport { queryParams } from '../utils/queryParams';\n\ninterface AccessTokenOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n}\n\ninterface FetchOptions {\n  /**\n   * If specified, the connected {@link AbortController} can be used to\n   * abort the current network request(s).\n   *\n   * This mechanism intentionally works in the same way as the\n   * [`fetch` API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#aborting_a_fetch).\n   *\n   * Reference:\n   * https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal#examples\n   */\n  signal?: AbortSignal;\n}\n\ninterface SessionTokenOptions {\n  /**\n   * A customer-provided session token value, which groups a series of requests together for [billing purposes](https://docs.mapbox.com/api/search/search-box/#search-box-api-pricing).\n   *\n   * Reference:\n   * https://docs.mapbox.com/api/search/search-box/#session-billing\n   */\n  sessionToken: SessionTokenLike;\n}\n\n/**\n * @typedef ValidationOptions\n */\nexport interface ValidationOptions {\n  /**\n   * The [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) to be returned.\n   *\n   * If not specified, `en` will be used.\n   */\n  language: string;\n  /**\n   * An [ISO 3166 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to be returned.\n   *\n   * If not specified, results will not be filtered by country.\n   */\n  country: string;\n  /**\n   * Limit results to only those contained within the supplied bounding box.\n   */\n  bbox: string | LngLatBoundsLike;\n  /**\n   * Bias the response to favor results that are closer to this location.\n   *\n   * When both {@link ValidationOptions#proximity} and {@link ValidationOptions#origin} are specified, `origin` is interpreted as the\n   * target of a route, while `proximity` indicates the current user location.\n   */\n  proximity: string | LngLatLike;\n}\n\n/**\n * @typedef ValidationResponse\n */\nexport interface ValidationResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link FeatureSuggestion}\n   */\n  features: ValidationFeature[];\n  url: string;\n}\n\n/**\n * A `ValidationCore` object is an application's main entrypoint to the\n * Mapbox Validation API. The Mapbox Validation API is an API similar to {@link AddressAutofillCore},\n * but targeted at checking **address**.\n *\n * A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) is required to use `ValidationCore`, and\n * other options may be specified either in the constructor or in the {@link ValidationCore#validate} call.\n *\n * @class ValidationCore\n * @param {ValidationOptions} [options]\n * @param {string} [options.accessToken]\n */\nexport class ValidationCore {\n  static defaults: Partial<ValidationOptions> = {\n    language: 'en',\n    proximity: 'ip'\n  };\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n\n  /**\n   * Any default options ({@link ValidationOptions}) to be merged into options in the following methods:\n   * - {@link ValidationOptions#validate}\n   *\n   * @type {ValidationOptions}\n   */\n  defaults: Partial<ValidationOptions>;\n\n  constructor(options: Partial<AccessTokenOptions & ValidationOptions> = {}) {\n    const { accessToken, ...defaults } = options;\n\n    this.accessToken = accessToken;\n\n    // Assign defaults to this.defaults.\n    this.defaults = {\n      ...ValidationCore.defaults,\n      ...defaults\n    };\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * {@link ValidationCore#validate} allows you to validate an address\n   * and returns the feature(s) in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * **Legal terms:**\n   *\n   * Geographic coordinates should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {String} searchText\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async validate(\n    searchText: string,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions>\n  ): Promise<ValidationResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n\n    const { sessionToken, signal } = optionsArg;\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      sessionToken\n    };\n\n    const url = new URL(`${VALIDATE_URL}/${encodeURIComponent(searchText)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as ValidationResponse;\n    json.url = url.toString();\n\n    if (json.features.length > 0) {\n      json.features = [json.features[0]];\n    }\n\n    return json;\n  }\n\n  /**\n   * Returns the query parameters used by {@link ValidationCore#validate}\n   */\n  #getQueryParams(\n    options: Partial<ValidationOptions & SessionTokenOptions>\n  ): string {\n    return queryParams(\n      {\n        access_token: this.accessToken,\n        language: options.language,\n        country: options.country\n      },\n      options.sessionToken && {\n        session_token: SessionToken.convert(options.sessionToken).id\n      },\n      options.proximity && {\n        proximity:\n          typeof options.proximity === 'string'\n            ? options.proximity\n            : LngLat.convert(options.proximity).toArray().join(',')\n      },\n      options.bbox && {\n        bbox:\n          typeof options.bbox === 'string'\n            ? options.bbox\n            : LngLatBounds.convert(options.bbox).toFlatArray().join(',')\n      }\n    );\n  }\n}\n","const BASE_URL = `https://api.mapbox.com/search/geocode/v6`;\n\nexport const FORWARD_URL = `${BASE_URL}/forward`;\nexport const REVERSE_URL = `${BASE_URL}/reverse`;\nexport const BATCH_URL = `${BASE_URL}/batch`;\n","import { getFetch } from '../fetch';\nimport { LngLat, LngLatLike } from '../LngLat';\nimport { LngLatBounds, LngLatBoundsLike } from '../LngLatBounds';\nimport { handleNonOkRes } from '../MapboxError';\nimport { SessionToken, SessionTokenLike } from '../SessionToken';\nimport { queryParams } from '../utils/queryParams';\nimport { FORWARD_URL, REVERSE_URL } from './constants';\nimport { FeatureTypes, GeocodingFeature } from './types';\n\nconst REVERSE_GEOCODE_COORD_REGEX =\n  /^[ ]*(-?\\d{1,3}(\\.\\d{0,256})?)[, ]+(-?\\d{1,3}(\\.\\d{0,256})?)[ ]*$/;\nconst SPACES_OR_COMMA_REGEX = /[\\s,]+/;\n\ninterface AccessTokenOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n}\n\ninterface FetchOptions {\n  /**\n   * If specified, the connected {@link AbortController} can be used to\n   * abort the current network request(s).\n   *\n   * This mechanism intentionally works in the same way as the\n   * [`fetch` API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#aborting_a_fetch).\n   *\n   * Reference:\n   * https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal#examples\n   */\n  signal?: AbortSignal;\n}\n\ninterface SessionTokenOptions {\n  /**\n   * A customer-provided session token value, which groups a series of requests together for [billing purposes](https://www.mapbox.com/pricing#autofill-session).\n   *\n   * Reference:\n   * https://www.mapbox.com/pricing#autofill-session\n   */\n  sessionToken: SessionTokenLike;\n}\n\ninterface GeocodingQueryOptions {\n  /**\n   * (Forward queries only) The user's query string. The query is limited to 256 characters.\n   */\n  q: string;\n  /**\n   * (Reverse queries only) The longitude component of a coordinate, in decimal degrees.\n   */\n  longitude: string | number;\n  /**\n   * (Reverse queries only) The latitude component of a coordinate, in decimal degrees.\n   */\n  latitude: string | number;\n}\n\n/**\n * @typedef GeocodingOptions\n */\nexport interface GeocodingOptions {\n  /**\n   * When autocomplete is enabled, results will be included that start with the requested string, rather than just responses that match it exactly.\n   *\n   * Defaults to true.\n   */\n  autocomplete?: boolean;\n  /**\n   * Limit results to only those contained within the supplied bounding box.\n   */\n  bbox?: string | LngLatBoundsLike;\n  /**\n   * Limit results to one or more countries. Permitted values are [ISO 3166 alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes separated by commas.\n   */\n  country?: string;\n  /**\n   * An [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) that controls the language of the text supplied in responses, and also affects result scoring.\n   */\n  language?: string;\n  /**\n   * The number of results to return, up to `10`.\n   *\n   * Defaults to 5.\n   */\n  limit?: number;\n  /**\n   * Bias the response to favor results that are closer to this location.\n   *\n   * Provided as two comma-separated coordinates in longitude,latitude order, or the string `ip` to bias based on reverse IP lookup.\n   */\n  proximity?: string | LngLatLike;\n  /**\n   * Filter results to include only a subset (one or more) of the available feature types. Multiple options can be comma-separated.\n   */\n  types?: string | Set<FeatureTypes>;\n  /**\n   * Available worldviews are: `cn`, `in`, `jp`, `us`. If a worldview is not set, `us` worldview boundaries will be returned.\n   */\n  worldview?: string;\n  /**\n   * Permanent geocodes are used for use cases that require storing\n   * data indefinitely. If 'true', requests will be made with permanent enabled.\n   * Separate billing for permanent geocoding will apply.\n   *\n   * If undefined or 'false', the geocoder will default to use temporary geocoding.\n   * Temporary geocoding results are not allowed to be cached.\n   *\n   * For questions related to permanent resource usage and billing, contact\n   * [Mapbox sales](https://www.mapbox.com/contact/sales/).\n   */\n  permanent?: boolean;\n}\n\n/**\n * A `GeocodingResponse` object represents a returned data object from the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/geocoding-v6/#geocoding-response-object).\n *\n * @typedef GeocodingResponse\n */\nexport interface GeocodingResponse {\n  /**\n   * `\"FeatureCollection\"`, a GeoJSON type from the [GeoJSON specification](https://tools.ietf.org/html/rfc7946).\n   */\n  type: 'FeatureCollection';\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link GeocodingFeature}\n   */\n  features: GeocodingFeature[];\n  /**\n   * Attributes the results of the Mapbox Geocoding API to Mapbox.\n   */\n  attribution: string;\n  url: string;\n}\n\n/**\n * A `GeocodingCore` object is an application's main entrypoint to the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/geocoding-v6/).\n * The Geocoding API allows forward (location to coordinates) and reverse (coordinates to location) queries, enabled by corresponding\n * methods from the `GeocodingCore` object.\n *\n * A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) is required to use `GeocodingCore`, and\n * other options may be specified either in the constructor or in the {@link GeocodingCore#forward} or {@link GeocodingCore#reverse} calls.\n *\n * @class GeocodingCore\n * @param {GeocodingOptions} [options]\n * @param {string} [options.accessToken]\n *\n * @example\n * ```typescript\n * const geocode = new GeocodingCore({ accessToken: 'pk.my-mapbox-access-token' });\n *\n * const results = await geocode.forward('Washington D.C.');\n * if (results.features.length === 0) return;\n *\n * const feature = results.features[0];\n * doSomethingWithCoordinates(feature);\n * ```\n */\nexport class GeocodingCore {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n\n  /**\n   * Any default options ({@link GeocodingOptions}) to be merged into options in the following methods:\n   * - {@link GeocodingCore#forward}\n   * - {@link GeocodingCore#reverse}\n   */\n  defaults: Partial<GeocodingOptions>;\n\n  #responseHeaders: Headers;\n  get responseHeaders(): Headers {\n    return this.#responseHeaders;\n  }\n\n  constructor(options: Partial<AccessTokenOptions & GeocodingOptions> = {}) {\n    const { accessToken, ...defaults } = options;\n\n    this.accessToken = accessToken;\n\n    // Assign defaults to this.defaults.\n    this.defaults = {\n      ...defaults\n    };\n  }\n\n  /** @section {Programmatic search} */\n\n  /**\n   * {@link GeocodingCore#forward} allows you to look up a feature by name\n   * and returns the feature(s) and corresponding geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, geographic coordinates should be used ephemerally and not persisted.\n   * If the results are to be cached/stored in a customer database,\n   * calls to {@link GeocodingCore#forward} should specify `permanent: true` within the method options argument.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {String} searchText\n   * @param {GeocodingOptions} [optionsArg]\n   * @param {AbortSignal} [optionsArg.signal]\n   *\n   * @example\n   * ```typescript\n   * const results = await geocode.forward('Washington D.C.');\n   * if (results.features.length === 0) return;\n   *\n   * const feature = results.features[0];\n   * doSomethingWithCoordinates(feature);\n   * ```\n   */\n  async forward(\n    searchText: string, // TODO: enable structured input alternative arguments (e.g. `searchText: string | StructuredInput`)\n    optionsArg?: Partial<FetchOptions & GeocodingOptions & SessionTokenOptions>\n  ): Promise<GeocodingResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n\n    let signal: AbortSignal;\n    if (optionsArg) {\n      ({ signal } = optionsArg);\n    }\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      q: searchText\n    };\n\n    const url = new URL(`${FORWARD_URL}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const fetchInit = signal ? { signal } : {};\n    const res = await fetch(url.toString(), fetchInit);\n\n    this.#responseHeaders = res.headers;\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as GeocodingResponse;\n    json.url = url.toString();\n    return json;\n  }\n\n  /**\n   * {@link GeocodingCore#reverse} allows you to look up a single pair of coordinates and returns the\n   * geographic feature or features that exist at that location in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, geographic coordinates should be used ephemerally and not persisted.\n   * If the results are to be cached/stored in a customer database,\n   * calls to {@link GeocodingCore#reverse} should specify `permanent: true` within the method options argument.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {String | LngLatLike} lngLat\n   * @param {GeocodingOptions} [optionsArg]\n   * @param {AbortSignal} [optionsArg.signal]\n   *\n   * @example\n   * ```typescript\n   * const results = await geocode.reverse({ lat: 40.7736, lng: -73.9749 });\n   * if (results.features.length === 0) return;\n   *\n   * const feature = results.features[0];\n   * doSomethingWithFeature(feature);\n   * ```\n   */\n  async reverse(\n    lngLat: string | LngLatLike,\n    optionsArg?: Partial<FetchOptions & GeocodingOptions & SessionTokenOptions>\n  ): Promise<GeocodingResponse> {\n    if (!lngLat) {\n      throw new Error('lngLat is required');\n    }\n\n    let signal: AbortSignal;\n    if (optionsArg) {\n      ({ signal } = optionsArg);\n    }\n\n    let lngLatObj: LngLat;\n    if (typeof lngLat === 'string') {\n      const [lng, lat] = lngLat.split(',');\n      lngLatObj = new LngLat(Number(lng), Number(lat));\n    } else {\n      lngLatObj = LngLat.convert(lngLat);\n    }\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      longitude: lngLatObj.lng,\n      latitude: lngLatObj.lat\n    };\n\n    const url = new URL(`${REVERSE_URL}`);\n    url.search = this.#getQueryParams(options, true);\n\n    const { fetch } = getFetch();\n    const fetchInit = signal ? { signal } : {};\n    const res = await fetch(url.toString(), fetchInit);\n\n    this.#responseHeaders = res.headers;\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as GeocodingResponse;\n    json.url = url.toString();\n    return json;\n  }\n\n  /** @section {Interactive search} */\n\n  /**\n   * {@link GeocodingCore#suggest} is a managed endpoint for an interactive {@link SearchSession}, such as one operated\n   * through a web or React component. It accepts a search text string for either a {@link GeocodingCore#forward} or\n   * {@link GeocodingCore#reverse} geocoding query and returns a {@link GeocodingResponse} object.\n   *\n   * @param {String} searchText\n   * @param {GeocodingOptions} [optionsArg]\n   * @param {AbortSignal} [optionsArg.signal]\n   *\n   * @example\n   * ```typescript\n   * const result = await geocode.suggest('123 Main St');\n   * if (results.features.length === 0) return;\n   *\n   * const feature = results.features[0];\n   * doSomethingWithCoordinates(feature);\n   * ```\n   */\n  async suggest(\n    searchText: string,\n    optionsArg?: Partial<FetchOptions & GeocodingOptions & SessionTokenOptions>\n  ): Promise<GeocodingResponse> {\n    const isReverseQuery = REVERSE_GEOCODE_COORD_REGEX.test(searchText);\n    if (isReverseQuery) {\n      const coordinates = searchText\n        .trim()\n        .split(SPACES_OR_COMMA_REGEX)\n        .map((part) => part.trim())\n        .join(',');\n      // TODO: add option allowing reverse coordinate order (lat, lng)\n      return this.reverse(coordinates, optionsArg);\n    } else {\n      return this.forward(searchText, optionsArg);\n    }\n  }\n\n  /**\n   * {@link GeocodingCore#retrieve} is a managed endpoint for an interactive {@link SearchSession}, such as one operated\n   * through a web or React component. It accepts a {@link GeocodingFeature} object and returns the same object. It is used\n   * in a SearchSession to respond to a user's selection of a feature suggestion. Unlike the Search Box API, the Geocoding API\n   * returns all feature data in the initial response, so this method does not perform any further data retrieval.\n   *\n   * @param {GeocodingFeature} suggestion\n   */\n  async retrieve(suggestion: GeocodingFeature): Promise<GeocodingFeature> {\n    return suggestion;\n  }\n\n  /**\n   * Returns the query parameters used by {@link <GeocodingCore>#forward} and {@link <GeocodingCore>#reverse}\n   */\n  #getQueryParams(\n    options: Partial<\n      GeocodingOptions & GeocodingQueryOptions & SessionTokenOptions\n    >,\n    isReverse = false\n  ): string {\n    // Remove query parameters that don't apply to forward or reverse\n    if (isReverse) {\n      ['proximity', 'autocomplete', 'bbox'].forEach((key) => {\n        if (key in options) {\n          delete options[key];\n        }\n      });\n    }\n    return queryParams(\n      {\n        q: options.q,\n        longitude: options.longitude,\n        latitude: options.latitude,\n        access_token: this.accessToken,\n        permanent: options.permanent,\n        language: options.language,\n        country: options.country,\n        limit: options.limit,\n        autocomplete: options.autocomplete,\n        worldview: options.worldview\n      },\n      options.sessionToken && {\n        session_token: SessionToken.convert(options.sessionToken).id\n      },\n      options.proximity && {\n        proximity:\n          typeof options.proximity === 'string'\n            ? options.proximity\n            : LngLat.convert(options.proximity).toArray().join(',')\n      },\n      options.bbox && {\n        bbox:\n          typeof options.bbox === 'string'\n            ? options.bbox\n            : LngLatBounds.convert(options.bbox).toFlatArray().join(',')\n      },\n      options.types && {\n        types:\n          typeof options.types === 'string'\n            ? options.types\n            : [...options.types].join(',')\n      }\n    );\n  }\n}\n","/**\n * An indication of how well a context component of the feature matches the query.\n *\n * @typedef MatchCodeType\n */\nexport const enum MatchCodeType {\n  /**\n   * The component value matches the user's input.\n   */\n  matched = 'matched',\n  /**\n   * The component value doesn't match the user's input, or the user didn't submit this component type as part of the query.\n   */\n  unmatched = 'unmatched',\n  /**\n   * Only relevant for the `address_number` and `secondary_address` components.\n   * In the case of `address_number`, this means the address accuracy is interpolated.\n   * In the case of `secondary_address`, this means the secondary address was extrapolated, i.e. the primary address is known to have secondary addresses, but the geocoder did not find a specific matching secondary address in our data.\n   */\n  plausible = 'plausible',\n  /**\n   * The component is not used in the postal address string representation of the feature.\n   */\n  not_applicable = 'not_applicable',\n  /**\n   * The component type wasn't submitted as part of the query, but we were able to confidently fill in the value. Only returned for the `country` component.\n   */\n  inferred = 'inferred'\n}\n\n/**\n * An overall confidence level for how well the feature matches the query.\n *\n * @typedef MatchCodeConfidence\n */\nexport const enum MatchCodeConfidence {\n  /**\n   * An exact match.\n   */\n  exact = 'exact',\n  /**\n   * High confidence of a match.\n   */\n  high = 'high',\n  /**\n   * Medium confidence of a match.\n   */\n  medium = 'medium',\n  /**\n   * Low confidence of a match.\n   */\n  low = 'low'\n}\n\n/**\n * An object describing the level of confidence that the given response feature matches the address intended by the request query.\n *\n * @typedef MatchCode\n */\nexport interface MatchCode {\n  /**\n   * An indication of how well the `secondary_address` component of the feature matches the query.\n   */\n  secondary_address?: MatchCodeType;\n  /**\n   * An indication of how well the `address_number` component of the feature matches the query.\n   */\n  address_number: MatchCodeType;\n  /**\n   * An indication of how well the `street` component of the feature matches the query.\n   */\n  street: MatchCodeType;\n  /**\n   * An indication of how well the `postcode` component of the feature matches the query.\n   */\n  postcode: MatchCodeType;\n  /**\n   * An indication of how well the `place` component of the feature matches the query.\n   */\n  place: MatchCodeType;\n  /**\n   * An indication of how well the `region` component of the feature matches the query.\n   */\n  region: MatchCodeType;\n  /**\n   * An indication of how well the `locality` component of the feature matches the query.\n   */\n  locality: MatchCodeType;\n  /**\n   * An indication of how well the `country` component of the feature matches the query.\n   */\n  country: MatchCodeType;\n  /**\n   * An overall confidence level for how well the feature matches the query.\n   */\n  confidence: MatchCodeConfidence;\n}\n","/**\n * `Evented` mixes methods into other classes for event capabilities.\n *\n * If you are an end-user, you will most likely use these methods through\n * classes like {@link SearchSession}.\n *\n * For lists of events you can listen for, see API documentation for\n * specific classes.\n *\n * @class Evented\n */\nexport class Evented<T> {\n  #listeners: Partial<{\n    [key in keyof T]: ((arg0: T[key]) => void)[];\n  }> = {};\n\n  /**\n   * Adds a listener to a specified event type.\n   *\n   * @param type - The event type to add a listen for.\n   * @param listener - The function to be called when the event is fired.\n   */\n  addEventListener<K extends keyof T>(\n    type: K,\n    listener: (arg0: T[K]) => void\n  ): void {\n    const listenersArr = this.#listeners;\n\n    // Create listener if doesn't already exist.\n    if (!listenersArr[type]) {\n      listenersArr[type] = [];\n    }\n\n    listenersArr[type].push(listener);\n  }\n\n  /**\n   * Removes a previously registered event listener.\n   *\n   * @param type - The event type to remove listeners for.\n   * @param listener - The listener function to remove.\n   */\n  removeEventListener<K extends keyof T>(\n    type: K,\n    listener: (arg0: T[K]) => void\n  ): void {\n    const listenersArr = this.#listeners;\n\n    // If a type doesn't exist, return early.\n    if (!listenersArr[type]) {\n      return;\n    }\n\n    const listeners = listenersArr[type];\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  fire<K extends keyof T>(type: K, arg0: T[K]): void {\n    const listenersArr = this.#listeners;\n\n    // If a type doesn't exist, return early.\n    if (!listenersArr[type]) {\n      return;\n    }\n\n    const listeners = listenersArr[type];\n    for (const listener of listeners) {\n      listener(arg0);\n    }\n  }\n}\n","/**\n * Version of the classic `debounce` function that accepts a `signalFn`\n * argument, which can return an {@link AbortSignal}.\n */\nexport function debounce<F extends (...args: unknown[]) => unknown>(\n  func: F,\n  wait: number,\n  signalFn?: () => AbortSignal\n): F {\n  let timeout = null;\n\n  return ((...args: Parameters<F>) => {\n    if (timeout !== null) {\n      clearTimeout(timeout);\n    }\n\n    const signal = signalFn && signalFn();\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (signal?.aborted) {\n        return;\n      }\n      func(...args);\n    }, wait);\n  }) as F;\n}\n","/* eslint-disable prefer-const */\nimport { SessionToken, SessionTokenLike } from './SessionToken';\n\nimport { getFetch } from './fetch';\n\nimport { Evented } from './utils/Evented';\nimport { debounce } from './utils/debounce';\nimport { AddressAutofillCore } from './autofill/AddressAutofillCore';\n\n/**\n * Shortcut function to create a new AbortController from the polyfill.\n */\nfunction createAbortController(): AbortController {\n  const { AbortController } = getFetch();\n  return new AbortController();\n}\n\ninterface EventTypes<SuggestionResponse, RetrieveResponse> {\n  suggest: SuggestionResponse;\n  suggesterror: Error;\n  retrieve: RetrieveResponse;\n}\n\n/**\n * TypeScript magic section: what is this?\n *\n * Despite the name {@link SearchSession}, in Search JS Web we use it to control\n * both {@link SearchBoxCore} **and** {@link AddressAutofillCore} instances. Both\n * of these have similar workflows, but are separate APIs with different options\n * and responses.\n *\n * In order to make TypeScript happy, this type is an \"approximation\" of what\n * {@link SearchSession} uses. When you construct a new {@link SearchSession},\n * because of this type [Options, Suggestion, SuggestionResponse, RetrieveResponse]\n * are automatically inferred.\n *\n * @internal\n * @example\n * ```typescript\n * const autofill = new AddressAutofillCore({\n *  accessToken: 'pk.my-fancy-token',\n * });\n *\n * const session = new SearchSession(autofill);\n *\n * `session` has inferred type = SearchSession<\n *   AddressAutofillOptions,\n *   AddressAutofillSuggestion,\n *   AddressAutofillSuggestionResponse,\n *   AddressAutofillRetrieveResponse\n * >\n * ```\n */\ntype SuggestSearch<Options, Suggestion, SuggestionResponse, RetrieveResponse> =\n  {\n    suggest: (\n      text: string,\n      options: Partial<Options> & {\n        sessionToken: SessionTokenLike;\n        signal: AbortSignal;\n      }\n    ) => Promise<SuggestionResponse>;\n    retrieve: (\n      suggestion: Suggestion,\n      options: Partial<Options> & {\n        sessionToken: SessionTokenLike;\n      }\n    ) => Promise<RetrieveResponse>;\n    canRetrieve?: (suggestion: Suggestion) => boolean;\n    canSuggest?: (suggestion: Suggestion) => boolean;\n  };\n\n/**\n * A `SearchSession` object is a managed entrypoint to the [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/)\n * or Mapbox Address Autofill API.\n *\n * `SearchSession` abstracts the suggest/retrieve flow of the two-step interactive search experience.\n *\n * Compared to using these APIs directly, you can use a `SearchSession` to:\n * 1. Automatically manage the session token lifecycle.\n * 2. Debounce calls to {@link SearchSession#suggest}.\n * 2. Abort in-flight requests with an imperative API.\n *\n * @class SearchSession\n * @example\n * ```typescript\n * const search = new SearchBoxCore({ accessToken: 'pk.my-mapbox-access-token' });\n * const session = new SearchSession(search);\n *\n * session.addEventListener('suggest', (res) => {\n *   presentResultsToUser(res.suggestions);\n * });\n *\n * session.addEventListener('retrieve', (res) => {\n *   doSomethingWithFeatureCollection(res);\n * });\n *\n * document.querySelector('button').addEventListener('click', (event) => {\n *   const suggestions = session.suggestions?.suggestions;\n *   if (!suggestions || !suggestions.length) {\n *     return;\n *   }\n *\n *   const suggestion = suggestions[0];\n *   if (session.canRetrieve(suggestion)) {\n *     session.retrieve(suggestion);\n *   } else if (session.canSuggest(suggestion)) {\n *     // .. go through suggest flow again ..\n *     session.suggest(suggestion.text);\n *   }\n * });\n *\n * session.suggest('Washington D.C.');\n * ```\n * @param {SearchBoxCore | AddressAutofillCore} search - The search interface to wrap.\n * @param {number} wait - The time in milliseconds to wait before sending a new request to the {@link SearchSession#suggest} call.\n */\nexport class SearchSession<\n  Options,\n  Suggestion,\n  SuggestionResponse,\n  RetrieveResponse\n> extends Evented<EventTypes<SuggestionResponse, RetrieveResponse>> {\n  readonly search: SuggestSearch<\n    Options,\n    Suggestion,\n    SuggestionResponse,\n    RetrieveResponse\n  >;\n\n  /**\n   * The time in milliseconds to wait before sending a new request to the\n   * {@link SearchSession#suggest} call.\n   */\n  readonly debounce: number;\n\n  #sessionTokenBase = new SessionToken();\n  /**\n   * Counter that is incremented each time a new search is started\n   * (e.g. when the search text is cleared).\n   */\n  #sessionIncrementer = 0;\n  /**\n   * If true, the session token is an explicitly-set value and should not be incremented.\n   */\n  #sessionTokenCustom = false;\n\n  /**\n   * The session token is an SKU (billing token) used to identify the current\n   * search session and provide analytics to the customer.\n   *\n   * As per {@link SessionToken}, this is a UUIDv4 value.\n   *\n   */\n  get sessionToken(): string {\n    if (this.#sessionTokenCustom) {\n      return this.#sessionTokenBase.id;\n    }\n    return `${this.#sessionTokenBase.id}.${this.#sessionIncrementer}`;\n  }\n  set sessionToken(token: string) {\n    this.#sessionTokenCustom = true;\n    this.#sessionTokenBase = new SessionToken(token);\n  }\n\n  #suggestions: SuggestionResponse | null;\n\n  /**\n   * The suggestions from the last successful suggest call, if any.\n   */\n  get suggestions(): SuggestionResponse | null {\n    return this.#suggestions;\n  }\n\n  constructor(\n    search: SuggestSearch<\n      Options,\n      Suggestion,\n      SuggestionResponse,\n      RetrieveResponse\n    >,\n    wait = 0\n  ) {\n    super();\n\n    // Set 'suggest' method using debounce.\n    this.#suggestDebounce = debounce(\n      async (\n        searchText: string,\n        options: Partial<Options> = {}\n      ): Promise<void> => {\n        // Refresh abort controller.\n        this.#abort.abort();\n        this.#abort = createAbortController();\n\n        if (!searchText) {\n          this.#suggestions = null;\n          this.fire('suggest', this.#suggestions);\n          return;\n        }\n\n        try {\n          const res = await this.search.suggest(searchText, {\n            sessionToken: this.sessionToken,\n            ...options,\n            signal: this.#abort.signal\n          });\n\n          this.#suggestions = res;\n          this.fire('suggest', res);\n        } catch (err) {\n          if (err.name === 'AbortError') {\n            return;\n          }\n\n          this.fire('suggesterror', err);\n        }\n      },\n      wait,\n      () => this.#abort.signal\n    );\n\n    /**\n     * Define properties using {@link Object#defineProperties} so they are readonly during runtime,\n     * not just in TypeScript.\n     */\n    Object.defineProperties(this, {\n      search: {\n        value: search,\n        writable: false\n      },\n      debounce: {\n        value: wait,\n        writable: false\n      }\n    });\n  }\n\n  /**\n   * The {@link AbortController} is used to abort the current suggest, either\n   * because of a new {@link SearchSession#suggest} call, or because\n   * of {@link SearchSession#abort}.\n   *\n   * In both of these cases, a new {@link AbortController} is created,\n   * and the old one is aborted.\n   */\n  #abort = createAbortController();\n\n  #suggestDebounce: (searchText: string, options?: Partial<Options>) => void;\n\n  /** @section {Methods} */\n\n  /**\n   * {@link SearchSession#suggest} is \"part one\" of the two-step interactive search experience,\n   * and each suggestion includes metadata to present to the user.\n   *\n   * Suggestion objects **do not include geographic coordinates**. To get the coordinates of the result, use {@link SearchSession#retrieve}.\n   *\n   * It may be useful to call {@link SearchSession#canRetrieve} before calling this method, as the suggestion may be a reference to\n   * another suggest query. This can also be tested with {@link SearchSession#canSuggest}, and further calls to {@link SearchSession#suggest}.\n   *\n   * Results can be retrieved with the \"suggest\" event.\n   *\n   * @example\n   * ```typescript\n   * const search = new SearchBoxCore({ accessToken: 'pk.my-mapbox-access-token' });\n   * const session = new SearchSession(search);\n   *\n   * session.addEventListener('suggest', (res) => {\n   *   presentResultsToUser(res.suggestions);\n   * });\n   *\n   * session.suggest('Washington D.C.');\n   * ```\n   */\n  suggest(\n    searchText: string,\n    options?: Partial<Options>\n  ): Promise<SuggestionResponse> {\n    this.#suggestDebounce(searchText, options);\n\n    return new Promise((resolve, reject) => {\n      let suggestFn: (val: SuggestionResponse) => void;\n      let suggestErrorFn: (val: Error) => void;\n\n      suggestFn = (res) => {\n        this.removeEventListener('suggest', suggestFn);\n        this.removeEventListener('suggesterror', suggestErrorFn);\n        resolve(res);\n      };\n      suggestErrorFn = (err) => {\n        this.removeEventListener('suggest', suggestFn);\n        this.removeEventListener('suggesterror', suggestErrorFn);\n        reject(err);\n      };\n\n      this.addEventListener('suggest', suggestFn);\n      this.addEventListener('suggesterror', suggestErrorFn);\n    });\n  }\n\n  /**\n   * Clears the current suggestions.\n   */\n  clear(): void {\n    this.suggest('');\n  }\n\n  /**\n   * {@link SearchSession#retrieve} is \"part two\" of the two-step interactive search experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * {@link suggestion} is usually a {@link Suggestion} returned from \"part one,\" {@link SearchSession#suggest}.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, results should not be stored in a customer database.\n   * Results should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   */\n  async retrieve(\n    suggestion: Suggestion,\n    options?: Partial<Options>\n  ): Promise<RetrieveResponse> {\n    const res = await this.search.retrieve(suggestion, {\n      sessionToken: this.sessionToken,\n      ...options\n    });\n\n    this.fire('retrieve', res);\n    return res;\n  }\n\n  /**\n   * Returns true if {@link SearchSession#retrieve} can be called on this suggestion,\n   * false otherwise.\n   *\n   * This indicates the [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/) has geographic coordinates\n   * for this suggestion.\n   *\n   * This method is mutually exclusive with {@link SearchSession#canSuggest}.\n   */\n  canRetrieve(suggestion: Suggestion): boolean {\n    if (!this.search.canRetrieve) {\n      return true;\n    }\n\n    return this.search.canRetrieve(suggestion);\n  }\n\n  /**\n   * Returns true if {@link SearchSession#suggest} can be called on this suggestion,\n   * false otherwise.\n   *\n   * This indicates the [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/) wants to do another\n   * suggestion search on this result, and does not have geographic coordinates.\n   *\n   * This method is mutually exclusive with {@link SearchSession#canRetrieve}.\n   */\n  canSuggest(suggestion: Suggestion): boolean {\n    if (!this.search.canSuggest) {\n      return true;\n    }\n\n    return this.search.canSuggest(suggestion);\n  }\n\n  /**\n   * Aborts the current {@link SearchSession#suggest} request.\n   */\n  abort(): void {\n    this.#abort.abort();\n    this.#abort = createAbortController();\n  }\n\n  /**\n   * Increments the session counter.\n   */\n  incrementSession(): void {\n    this.#sessionIncrementer++;\n  }\n}\n","import {\n  SearchBoxFeatureSuggestion,\n  SearchBoxFeatureProperties\n} from './searchbox/types';\nimport {\n  AddressAutofillFeatureSuggestion,\n  AddressAutofillSuggestion\n} from './autofill/types';\n\nfunction featureToSuggestion(\n  feature: SearchBoxFeatureSuggestion\n): SearchBoxFeatureProperties;\n\nfunction featureToSuggestion(\n  feature: AddressAutofillFeatureSuggestion\n): AddressAutofillSuggestion;\n\n/**\n * Utility function to convert the {@link SearchBoxFeatureSuggestion} properties to a\n * {@link SearchBoxFeatureProperties} object.\n */\nfunction featureToSuggestion(\n  feature: SearchBoxFeatureSuggestion | AddressAutofillFeatureSuggestion\n):\n  | SearchBoxFeatureProperties\n  | Omit<AddressAutofillSuggestion, 'original_search_text' | 'action'> {\n  const { properties } = feature;\n  return {\n    ...properties\n  };\n}\n\nexport { featureToSuggestion };\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40floating-ui/core/dist/floating-ui.core.mjs"],"sourcesContent":["function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]);\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      const prevDimensions = await platform.getDimensions(elements.floating);\n      apply == null ? void 0 : apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1877, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || // @ts-ignore (TS 4.1 compat)\n  css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (['html', 'body', '#document'].includes(getNodeName(parentNode))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingParent, strategy) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingAncestors(element) {\n  const clippingAncestors = getOverflowAncestors(element);\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingAncestors.filter(clippingAncestors => isElement(clippingAncestors) && contains(clippingAncestors, clipperElement) && getNodeName(clippingAncestors) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const mainClippingAncestors = boundary === 'clippingAncestors' ? getClippingAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...mainClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize: _ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestorResize = _ancestorResize && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2387, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/no-scroll/index.js"],"sourcesContent":["(function(root) {\n  var isOn = false;\n  var scrollbarSize;\n  var scrollTop;\n\n  function getScrollbarSize() {\n    if (typeof scrollbarSize !== 'undefined') return scrollbarSize;\n\n    var doc = document.documentElement;\n    var dummyScroller = document.createElement('div');\n    dummyScroller.setAttribute('style', 'width:99px;height:99px;' + 'position:absolute;top:-9999px;overflow:scroll;');\n    doc.appendChild(dummyScroller);\n    scrollbarSize = dummyScroller.offsetWidth - dummyScroller.clientWidth;\n    doc.removeChild(dummyScroller);\n    return scrollbarSize;\n  }\n\n  function hasScrollbar() {\n    return document.documentElement.scrollHeight > window.innerHeight;\n  }\n\n  function on(options) {\n    if (typeof document === 'undefined' || isOn) return;\n    var doc = document.documentElement;\n    scrollTop = window.pageYOffset;\n    if (hasScrollbar()) {\n      doc.style.width = 'calc(100% - '+ getScrollbarSize() +'px)';\n    } else {\n      doc.style.width = '100%';\n    }\n    doc.style.position = 'fixed';\n    doc.style.top = -scrollTop + 'px';\n    doc.style.overflow = 'hidden';\n    isOn = true;\n  }\n\n  function off() {\n    if (typeof document === 'undefined' || !isOn) return;\n    var doc = document.documentElement;\n    doc.style.width = '';\n    doc.style.position = '';\n    doc.style.top = '';\n    doc.style.overflow = '';\n    window.scroll(0, scrollTop);\n    isOn = false;\n  }\n\n  function toggle() {\n    if (isOn) {\n      off();\n      return;\n    }\n    on();\n  }\n\n  var noScroll = {\n    on: on,\n    off: off,\n    toggle: toggle,\n  };\n\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = noScroll;\n  } else {\n    root.noScroll = noScroll;\n  }\n})(this);\n"],"names":[],"mappings":"AAAA,CAAC,SAAS,IAAI;IACZ,IAAI,OAAO;IACX,IAAI;IACJ,IAAI;IAEJ,SAAS;QACP,IAAI,OAAO,kBAAkB,aAAa,OAAO;QAEjD,IAAI,MAAM,SAAS,eAAe;QAClC,IAAI,gBAAgB,SAAS,aAAa,CAAC;QAC3C,cAAc,YAAY,CAAC,SAAS,4BAA4B;QAChE,IAAI,WAAW,CAAC;QAChB,gBAAgB,cAAc,WAAW,GAAG,cAAc,WAAW;QACrE,IAAI,WAAW,CAAC;QAChB,OAAO;IACT;IAEA,SAAS;QACP,OAAO,SAAS,eAAe,CAAC,YAAY,GAAG,OAAO,WAAW;IACnE;IAEA,SAAS,GAAG,OAAO;QACjB,IAAI,OAAO,aAAa,eAAe,MAAM;QAC7C,IAAI,MAAM,SAAS,eAAe;QAClC,YAAY,OAAO,WAAW;QAC9B,IAAI,gBAAgB;YAClB,IAAI,KAAK,CAAC,KAAK,GAAG,iBAAgB,qBAAoB;QACxD,OAAO;YACL,IAAI,KAAK,CAAC,KAAK,GAAG;QACpB;QACA,IAAI,KAAK,CAAC,QAAQ,GAAG;QACrB,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,YAAY;QAC7B,IAAI,KAAK,CAAC,QAAQ,GAAG;QACrB,OAAO;IACT;IAEA,SAAS;QACP,IAAI,OAAO,aAAa,eAAe,CAAC,MAAM;QAC9C,IAAI,MAAM,SAAS,eAAe;QAClC,IAAI,KAAK,CAAC,KAAK,GAAG;QAClB,IAAI,KAAK,CAAC,QAAQ,GAAG;QACrB,IAAI,KAAK,CAAC,GAAG,GAAG;QAChB,IAAI,KAAK,CAAC,QAAQ,GAAG;QACrB,OAAO,MAAM,CAAC,GAAG;QACjB,OAAO;IACT;IAEA,SAAS;QACP,IAAI,MAAM;YACR;YACA;QACF;QACA;IACF;IAEA,IAAI,WAAW;QACb,IAAI;QACJ,KAAK;QACL,QAAQ;IACV;IAEA,IAAI,+CAAkB,eAAe,OAAO,OAAO,OAAO,KAAK,aAAa;QAC1E,OAAO,OAAO,GAAG;IACnB,OAAO;QACL,KAAK,QAAQ,GAAG;IAClB;AACF,CAAC,EAAE,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2452, "column": 0}, "map": {"version":3,"file":"index.esm.js","sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/tabbable/src/index.js"],"sourcesContent":["const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]:not(slot)',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n  'details>summary:first-of-type',\n  'details',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element.getRootNode()\n    : (element) => element.ownerDocument;\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidatesScope\n * @property {Element} scope contains inner candidates\n * @property {Element[]} candidates\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidatesScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidatesScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scope: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      const validShadowRoot =\n        !options.shadowRootFilter || options.shadowRootFilter(element);\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scope: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\nconst getTabindex = function (node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if (\n      (isScope ||\n        /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        node.isContentEditable) &&\n      isNaN(parseInt(node.getAttribute('tabindex'), 10))\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  const nodeRootHost = getRootNode(node).host;\n  const nodeIsAttached =\n    nodeRootHost?.ownerDocument.contains(nodeRootHost) ||\n    node.ownerDocument.contains(node);\n\n  if (!displayCheck || displayCheck === 'full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (nodeIsAttached) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck` mode\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabindex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidatesScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scope;\n    const element = isScope ? item.scope : item;\n    const candidateTabindex = getTabindex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable };\n"],"names":["candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","ownerDocument","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scope","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","getTabindex","node","isScope","tabIndex","test","isContentEditable","isNaN","parseInt","getAttribute","sortOrderedTabbables","a","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioScope","queryRadios","radioSet","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isZeroArea","getBoundingClientRect","width","height","isHidden","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","nodeRootHost","host","nodeIsAttached","contains","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","parentNode","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","bind","focusable","isTabbable","Error","focusableCandidateSelector","isFocusable"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2870, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2876, "column": 0}, "map": {"version":3,"file":"focus-trap.esm.js","sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/focus-trap/index.js"],"sourcesContent":["import { tabbable, focusable, isFocusable, isTabbable } from 'tabbable';\n\nconst activeFocusTraps = (function () {\n  const trapQueue = [];\n  return {\n    activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        const activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap(trap) {\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    },\n  };\n})();\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nconst findIndex = function (arr, fn) {\n  let idx = -1;\n\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    ...userOptions,\n  };\n\n  const state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [], // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  const findContainerIndex = function (element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) =>\n        container.contains(element) ||\n        // fall back to explicit tabbable search which will take into consideration any\n        //  web components if the `tabbableOptions.getShadowRoot` option was used for\n        //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n        //  look inside web components even if open)\n        tabbableNodes.find((node) => node === element)\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  const getNodeForOption = function (optionName, ...params) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\n          `\\`${optionName}\\` as selector refers to no known node`\n        );\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.containerGroups = state.containers.map((container) => {\n      const tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n      const focusableNodes = focusable(container, config.tabbableOptions);\n\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode:\n          tabbableNodes.length > 0\n            ? tabbableNodes[tabbableNodes.length - 1]\n            : null,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode(node, forward = true) {\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          const nodeIdx = focusableNodes.findIndex((n) => n === node);\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n\n          if (forward) {\n            return focusableNodes\n              .slice(nodeIdx + 1)\n              .find((n) => isTabbable(n, config.tabbableOptions));\n          }\n\n          return focusableNodes\n            .slice(0, nodeIdx)\n            .reverse()\n            .find((n) => isTabbable(n, config.tabbableOptions));\n        },\n      };\n    });\n\n    state.tabbableGroups = state.containerGroups.filter(\n      (group) => group.tabbableNodes.length > 0\n    );\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus:\n          config.returnFocusOnDeactivate &&\n          !isFocusable(target, config.tabbableOptions),\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  const checkFocusIn = function (e) {\n    const target = getActualTarget(e);\n    const targetContained = findContainerIndex(target) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkTab = function (e) {\n    const target = getActualTarget(e);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findContainerIndex(target);\n      const containerGroup =\n        containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkKey = function (e) {\n    if (\n      isEscapeEvent(e) &&\n      valueOrHandler(config.escapeDeactivates, e) !== false\n    ) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  const checkClick = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false,\n    });\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      const options = {\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus,\n        ...deactivateOptions,\n      };\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n\n      activeFocusTraps.deactivateTrap(trap);\n\n      const onDeactivate = getOption(options, 'onDeactivate');\n      const onPostDeactivate = getOption(options, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      const returnFocus = getOption(\n        options,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n\n      return this;\n    },\n\n    unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n\n      return this;\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    },\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n"],"names":["activeFocusTraps","trapQueue","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","push","splice","deactivateTrap","unpause","isSelectableInput","node","tagName","toLowerCase","select","isEscapeEvent","e","key","keyCode","isTabEvent","delay","fn","setTimeout","findIndex","arr","idx","every","value","i","valueOrHandler","params","getActualTarget","event","target","shadowRoot","composedPath","createFocusTrap","elements","userOptions","doc","document","config","_objectSpread","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","undefined","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","element","container","tabbableNodes","contains","find","getNodeForOption","optionValue","Error","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbable","tabbableOptions","focusableNodes","focusable","lastTabbableNode","nextTabbableNode","forward","nodeIdx","n","slice","isTabbable","reverse","filter","group","tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","isFocusable","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkTab","destinationNode","containerIndex","containerGroup","shiftKey","startOfGroupIndex","destinationGroupIndex","destinationGroup","lastOfGroupIndex","checkKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","concat","then","deactivateOptions","options","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3514, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/subtag/subtag.js"],"sourcesContent":["!function(root, name, make) {\r\n  if (typeof module != 'undefined' && module.exports) module.exports = make()\r\n  else root[name] = make()\r\n}(this, 'subtag', function() {\r\n\r\n  var empty = ''\r\n  var pattern = /^([a-zA-Z]{2,3})(?:[_-]+([a-zA-Z]{3})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{4})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{2}|[0-9]{3})(?=$|[_-]+))?/\r\n\r\n  function match(tag) {\r\n    return tag.match(pattern) || []\r\n  }\r\n\r\n  function split(tag) {\r\n    return match(tag).filter(function(v, i) { return v && i })\r\n  }\r\n\r\n  function api(tag) {\r\n    tag = match(tag)\r\n    return {\r\n      language: tag[1] || empty,\r\n      extlang: tag[2] || empty,\r\n      script: tag[3] || empty,\r\n      region: tag[4] || empty\r\n    }\r\n  }\r\n\r\n  function expose(target, key, value) {\r\n    Object.defineProperty(target, key, {\r\n      value: value,\r\n      enumerable: true\r\n    })\r\n  }\r\n\r\n  function part(position, pattern, type) {\r\n    function method(tag) {\r\n      return match(tag)[position] || empty\r\n    }\r\n    expose(method, 'pattern', pattern)\r\n    expose(api, type, method)\r\n  }\r\n\r\n  part(1, /^[a-zA-Z]{2,3}$/, 'language')\r\n  part(2, /^[a-zA-Z]{3}$/, 'extlang')\r\n  part(3, /^[a-zA-Z]{4}$/, 'script')\r\n  part(4, /^[a-zA-Z]{2}$|^[0-9]{3}$/, 'region')\r\n\r\n  expose(api, 'split', split)\r\n\r\n  return api\r\n});\r\n"],"names":[],"mappings":"AAAA,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI;IACxB,IAAI,8CAAiB,eAAe,OAAO,OAAO,EAAE,OAAO,OAAO,GAAG;SAChE,IAAI,CAAC,KAAK,GAAG;AACpB,EAAE,IAAI,EAAE,UAAU;IAEhB,IAAI,QAAQ;IACZ,IAAI,UAAU;IAEd,SAAS,MAAM,GAAG;QAChB,OAAO,IAAI,KAAK,CAAC,YAAY,EAAE;IACjC;IAEA,SAAS,MAAM,GAAG;QAChB,OAAO,MAAM,KAAK,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;YAAI,OAAO,KAAK;QAAE;IAC1D;IAEA,SAAS,IAAI,GAAG;QACd,MAAM,MAAM;QACZ,OAAO;YACL,UAAU,GAAG,CAAC,EAAE,IAAI;YACpB,SAAS,GAAG,CAAC,EAAE,IAAI;YACnB,QAAQ,GAAG,CAAC,EAAE,IAAI;YAClB,QAAQ,GAAG,CAAC,EAAE,IAAI;QACpB;IACF;IAEA,SAAS,OAAO,MAAM,EAAE,GAAG,EAAE,KAAK;QAChC,OAAO,cAAc,CAAC,QAAQ,KAAK;YACjC,OAAO;YACP,YAAY;QACd;IACF;IAEA,SAAS,KAAK,QAAQ,EAAE,OAAO,EAAE,IAAI;QACnC,SAAS,OAAO,GAAG;YACjB,OAAO,MAAM,IAAI,CAAC,SAAS,IAAI;QACjC;QACA,OAAO,QAAQ,WAAW;QAC1B,OAAO,KAAK,MAAM;IACpB;IAEA,KAAK,GAAG,mBAAmB;IAC3B,KAAK,GAAG,iBAAiB;IACzB,KAAK,GAAG,iBAAiB;IACzB,KAAK,GAAG,4BAA4B;IAEpC,OAAO,KAAK,SAAS;IAErB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3562, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/sphericalmercator/sphericalmercator.js"],"sourcesContent":["var SphericalMercator = (function(){\n\n// Closures including constants and other precalculated values.\nvar cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n\nfunction isFloat(n){\n    return Number(n) === n && n % 1 !== 0;\n}\n\n// SphericalMercator constructor: precaches calculations\n// for fast tile lookups.\nfunction SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    this.expansion = (options.antimeridian === true) ? 2 : 1;\n    if (!cache[this.size]) {\n        var size = this.size;\n        var c = cache[this.size] = {};\n        c.Bc = [];\n        c.Cc = [];\n        c.zc = [];\n        c.Ac = [];\n        for (var d = 0; d < 30; d++) {\n            c.Bc.push(size / 360);\n            c.Cc.push(size / (2 * Math.PI));\n            c.zc.push(size / 2);\n            c.Ac.push(size);\n            size *= 2;\n        }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n};\n\n// Convert lon lat to screen pixel value\n//\n// - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.px = function(ll, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var d = size / 2;\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var ac = size;\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = d + ll[0] * bc;\n    var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n    (x > ac * this.expansion) && (x = ac * this.expansion);\n    (y > ac) && (y = ac);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  } else {\n    var d = this.zc[zoom];\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = Math.round(d + ll[0] * this.Bc[zoom]);\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]));\n    (x > this.Ac[zoom] * this.expansion) && (x = this.Ac[zoom] * this.expansion);\n    (y > this.Ac[zoom]) && (y = this.Ac[zoom]);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  }\n};\n\n// Convert screen pixel value to lon lat\n//\n// - `px` {Array} `[x, y]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.ll = function(px, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var zc = size / 2;\n    var g = (px[1] - zc) / -cc;\n    var lon = (px[0] - zc) / bc;\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  } else {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom]);\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  }\n};\n\n// Convert tile xyz value to bbox of the form `[w, s, e, n]`\n//\n// - `x` {Number} x (longitude) number.\n// - `y` {Number} y (latitude) number.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection for resulting bbox (WGS84|900913).\n// - `return` {Array} bbox array of values in form `[w, s, e, n]`.\nSphericalMercator.prototype.bbox = function(x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n        y = (Math.pow(2, zoom) - 1) - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n        return this.convert(bbox, '900913');\n    } else {\n        return bbox;\n    }\n};\n\n// Convert bbox to xyx bounds\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection of input bbox (WGS84|900913).\n// - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\nSphericalMercator.prototype.xyz = function(bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n        bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [ Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size) ];\n    var y = [ Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size) ];\n    var bounds = {\n        minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n        minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n        maxX: Math.max.apply(Math, x),\n        maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n        var tms = {\n            minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n            maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n        };\n        bounds.minY = tms.minY;\n        bounds.maxY = tms.maxY;\n    }\n    return bounds;\n};\n\n// Convert projection of given bbox.\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n//   assumed to be the \"other\" projection.\n// - `@return` {Object} bbox with reprojected coordinates.\nSphericalMercator.prototype.convert = function(bbox, to) {\n    if (to === '900913') {\n        return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2,4)));\n    } else {\n        return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2,4)));\n    }\n};\n\n// Convert lon/lat values to 900913 x/y.\nSphericalMercator.prototype.forward = function(ll) {\n    var xy = [\n        A * ll[0] * D2R,\n        A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * ll[1] * D2R)))\n    ];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    (xy[0] > MAXEXTENT) && (xy[0] = MAXEXTENT);\n    (xy[0] < -MAXEXTENT) && (xy[0] = -MAXEXTENT);\n    (xy[1] > MAXEXTENT) && (xy[1] = MAXEXTENT);\n    (xy[1] < -MAXEXTENT) && (xy[1] = -MAXEXTENT);\n    return xy;\n};\n\n// Convert 900913 x/y values to lon/lat.\nSphericalMercator.prototype.inverse = function(xy) {\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI*0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n};\n\nreturn SphericalMercator;\n\n})();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = exports = SphericalMercator;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3782, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/dom.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/class_name_transformers.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/index.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/map.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/constants.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/HTMLScopedElement.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/theme.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/popover.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/MapboxHTMLEvent.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/aria/messages.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/aria/index.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/listbox.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxSearchListbox.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/autofill.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/confirmAddress.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxAddressConfirmation.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/config.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/confirmation.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/contribute.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxAddressConfirmationFeature.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxAddressConfirmationNoFeature.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxAddressAutofill.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/detect_browser_autofill.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/events/utils.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/events/MapboxEventManager.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxSearchBox.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/localization.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxGeocoder.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/components/MapboxAddressMinimap.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/utils/minimap.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-web/src/autofill.ts"],"sourcesContent":["/**\n * Used below in {@link createCSSStyleSheet}.\n */\nconst subdoc = document.implementation.createHTMLDocument();\n\nexport function bindElements<\n  Binding extends { [key: string | symbol | number]: Element }\n>(root: Element, elements: { [key in keyof Binding]: string }): Binding {\n  const binding: Binding = {} as Binding;\n  for (const [key, selector] of Object.entries(elements)) {\n    binding[key as keyof Binding] = root.querySelector(selector);\n  }\n\n  return binding;\n}\n\n/**\n * Gets all child elements for a given node.\n */\nexport function getChildElements(node: Node): HTMLElement[] {\n  return Array.from(node.childNodes || []).filter(\n    (el) => el.nodeType === Node.ELEMENT_NODE\n  ) as HTMLElement[];\n}\n\n/**\n * Creates an HTML element from a string and returns it.\n */\nexport function createElementFromString<T extends Element>(\n  innerHTML: string\n): T {\n  const template = document.createElement('template');\n  template.innerHTML = innerHTML;\n  return template.content.firstElementChild as T;\n}\n\n/**\n * Returns a {@link CSSStyleSheet} that can be used to traverse a\n * CSS file.\n *\n * NOTE: We need to use a sub-document to avoid the styles being\n * applied to the current page.\n */\nexport function createCSSStyleSheet(text: string): CSSStyleSheet {\n  const style = subdoc.createElement('style');\n  style.textContent = text;\n  subdoc.head.appendChild(style);\n  return style.sheet;\n}\n\n/**\n * Returns if the property has \"display: none\" set on itself.\n *\n * Reference: https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n */\nexport function isVisible(element: HTMLElement): boolean {\n  const style = window.getComputedStyle(element);\n  return style.display !== 'none';\n}\n\nexport type InputFormElement =\n  | HTMLInputElement\n  | HTMLSelectElement\n  | HTMLTextAreaElement;\n\ntype ReactInputEvent = Event & {\n  simulated: boolean;\n};\n\ntype ReactInputWrapperState = InputFormElement & {\n  _valueTracker?: {\n    getValue: () => string;\n    setValue: (value: string) => void;\n    stopTracking: () => void;\n  };\n};\n\n/**\n * Sets the value of the given input element and triggers an `input` event.\n *\n * This should also work for React, which overrides the `value` setter with\n * a custom tracker. Due to this, a naive `input.value = value` will not\n * work correctly in React.\n *\n * Reference: https://github.com/facebook/react/blob/c88fb49d37fd01024e0a254a37b7810d107bdd1d/packages/react-dom/src/client/inputValueTracking.js#L53\n * Reference: https://github.com/facebook/react/issues/11488\n */\nexport function setValue(\n  input: InputFormElement | undefined,\n  value: string\n): void {\n  if (!input) {\n    return;\n  }\n\n  const set = Object.getOwnPropertyDescriptor(\n    input.constructor.prototype,\n    'value'\n  ).set;\n  set.call(input, value);\n\n  // Make this work in React 16+.\n  const wrapperState = input as ReactInputWrapperState;\n  if (wrapperState._valueTracker) {\n    wrapperState._valueTracker.setValue('');\n  }\n\n  const onInputEvent = new Event('input', {\n    bubbles: true\n  }) as ReactInputEvent;\n  onInputEvent.simulated = true;\n\n  input.dispatchEvent(onInputEvent);\n\n  const onChangeEvent = new Event('change', {\n    bubbles: true\n  }) as ReactInputEvent;\n  onChangeEvent.simulated = true;\n\n  input.dispatchEvent(onChangeEvent);\n}\n\n/**\n * Pre-calculate the size of an element, handling cases where the element is not yet rendered\n * @param element - The element to measure\n * @param deep - If true, include node's descendents in calculation. Defaults to false.\n * @returns Object with height and width properties as numbers\n */\nexport function getElementSize(\n  element: HTMLElement,\n  deep = false\n): {\n  height: number;\n  width: number;\n} {\n  let width: number;\n  let height: number;\n  const elementRect = element.getBoundingClientRect();\n  if (\n    element.style.display === 'none' ||\n    (elementRect.height === 0 && elementRect.width === 0)\n  ) {\n    const clone = element.cloneNode(deep) as HTMLElement;\n    element.parentElement.appendChild(clone);\n    clone.style.setProperty('display', 'block', 'important');\n    const cloneRect = clone.getBoundingClientRect();\n    width = cloneRect.width;\n    height = cloneRect.height;\n    clone.style.setProperty('display', 'none');\n    clone.remove();\n  } else {\n    width = elementRect.width;\n    height = elementRect.height;\n  }\n  return {\n    height: Math.floor(height),\n    width: Math.floor(width)\n  };\n}\n\n/**\n * Adds a style to the current page document for the root CSS from the Mapbox search-js-web package.\n */\nexport function addDocumentStyle(css: string): void {\n  const style = document.createElement('style');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n}\n","import { createCSSStyleSheet } from './dom';\n\n/**\n * W3C spec:\n *\n * In CSS, identifiers (including element names, classes, and IDs in selectors)\n * can contain only the characters [a-z0-9] and ISO 10646 characters U+00A0 and\n * higher, plus the hyphen (-) and the underscore (_); they cannot start with a\n * digit, or a hyphen followed by a digit. Identifiers can also contain escaped\n * characters and any ISO 10646 character as a numeric code (see next item).\n *\n * For instance, the identifier \"B&W?\" may be written as \"B&W?\" or \"B\\26 W\\3F\".\n *\n * Reference: https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors\n */\nconst IDENTIFIER_REGEX = new RegExp('[_a-zA-Z]+[_a-zA-Z0-9-]*', 'g');\nconst CLASS_NAME_REGEX = new RegExp(`\\\\.${IDENTIFIER_REGEX.source}`, 'g');\n\n/**\n * Of the format @IDENFIFIER (RULE) { }\n *\n * Only catches the media and supports identifiers.\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n */\nconst CONDITION_RULE_REGEX = new RegExp(\n  `^\\\\s*(@(?:media|supports)[^{]*){(.*)}\\\\s*$`\n);\n\nexport function transformClassSelectors(\n  css: string,\n  transform: (className: string) => string\n): string {\n  return css.replace(CLASS_NAME_REGEX, (className: string) => {\n    return '.' + transform(className.slice(1));\n  });\n}\n\n/**\n * Returns a version of the CSS string with each class name transformed\n * by {@link transform}.\n *\n * The main reason why this function exists is to allow for CSS class\n * encapsulation without Shadow DOM.\n */\nexport function transformCSSClassRules(\n  text: string,\n  transform: (className: string) => string\n): string {\n  // Create a CSSStyleSheet so we can traverse the CSS rules,\n  // without having to parse ourselves.\n  const sheet = createCSSStyleSheet(text);\n  const rules = sheet.cssRules;\n\n  /**\n   * No guarantees of in-place mutation.\n   */\n  function transformCSSRule(rule: CSSRule): string {\n    /**\n     * [CSSStyleRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule)\n     * represents a single CSS declaration block, like `h1 { color: red; }`.\n     *\n     * Make sure to transform the \"selector\", which in the example above is \"h1\".\n     */\n    if (rule instanceof CSSStyleRule) {\n      const selector = transformClassSelectors(rule.selectorText, transform);\n      return `${selector} { ${rule.style.cssText} }`;\n    }\n\n    /**\n     * Condition-rules are like `@media print { ... }`, or `@supports (display: grid) { ... }`.\n     *\n     * This should be covered by [CSSConditionRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSConditionRule)\n     * however browser support for CSSConditionRule is not great: namely, Safari\n     * versions earlier than 14.1 (early 2021) do not support it.\n     *\n     * Because of this, we need to traverse the text of the at-rule with\n     * a regular expression.\n     *\n     * Useful helper: https://regexr.com/\n     */\n    const atRule = CONDITION_RULE_REGEX.exec(rule.cssText.split('\\n').join(''));\n    if (atRule && atRule.length > 2) {\n      const rule = atRule[1];\n      const contents = atRule[2];\n\n      // Recursively transform the contents of the at-rule.\n      return `${rule} { ${transformCSSClassRules(contents, transform)} }`;\n    }\n\n    /**\n     * Otherwise, just pass through fonts, animations, etc...\n     */\n    return rule.cssText;\n  }\n\n  // Construct a new CSS string by traversing the rules and serializing\n  // them to a string.\n  let style = '';\n  for (const rule of Array.from(rules)) {\n    style += transformCSSRule(rule) + '\\n\\n';\n  }\n\n  return style.trim();\n}\n\n/**\n * Manipulates {@param content} in place, with each class attribute transformed\n * by {@link transform}.\n *\n * The main reason why this function exists is to allow for CSS class\n * encapsulation without Shadow DOM.\n */\nexport function transformDOMClassAttributes(\n  content: HTMLElement,\n  transform: (className: string) => string\n): HTMLElement {\n  // Perform the transformation on each class attribute in-place,\n  // on the clone.\n  const elements = Array.from(content.querySelectorAll('[class]'));\n  // Add the current node!\n  elements.push(content);\n\n  for (const element of elements) {\n    const { classList } = element;\n    for (const className of Array.from(classList)) {\n      classList.remove(className);\n      classList.add(transform(className));\n    }\n  }\n\n  // Return the element.\n  return content;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { SessionToken } from '@mapbox/search-js-core';\nimport { MAPBOX_DOMAINS } from '../constants';\n\n/**\n * Returns a random ID that is valid as a CSS identifier.\n *\n * CSS identifiers cannot start with a number, so we prefix the ID with `mbx`.\n */\nexport function randomValidID(): string {\n  return `mbx` + new SessionToken().id.slice(0, 8);\n}\n\n/**\n * Try to parse as a JSON object, returning `null` if it fails.\n */\nexport function tryParseJSON<T>(json: string): T | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function deepEquals<T>(a: T, b: T): boolean {\n  if (a == null || b == null) {\n    return a === b;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (const key of aKeys) {\n    if (!deepEquals(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Round a number to a given number of digits after the decimal\n * @param num - Number to round\n * @param decimalPlaces - Number of places after the decimal to round to\n * @returns Rounded decimal number\n */\nexport function round(num: number, decimalPlaces: number): number {\n  const factorOfTen = Math.pow(10, decimalPlaces);\n  return Math.round(num * factorOfTen) / factorOfTen;\n}\n\n/**\n * Returns true if a hostname matches a local server protocol\n * @param hostname - A string representing window.location.hostname\n * @returns A boolean value\n */\nexport function isLocalServer(hostname: string): boolean {\n  return Boolean(\n    hostname.match(\n      /localhost|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|::1|\\.local|^$/gi\n    )\n  );\n}\n\n/**\n * Returns true if a hostname matches a Mapbox domain\n * @param hostname - A string representing window.location.hostname\n * @returns A boolean value\n */\nexport function isMapboxDomain(hostname: string): boolean {\n  return Boolean(MAPBOX_DOMAINS.some((domain) => hostname.includes(domain)));\n}\n","import mapboxgl from 'mapbox-gl';\n\n/**\n * This is slightly higher than the default value of 1.2.\n * https://docs.mapbox.com/mapbox-gl-js/api/map/#map#flyto\n * We use a high speed value for cypress tests to increase test speed and improve test stability.\n */\nexport const FLY_TO_SPEED = 1.4;\n\n/**\n * Gets the center/zoom for a given bounding box.\n *\n * @param delta - Subtracted from the zoom level so users can fully see\n * the bounding box. This is a hack to add padding.\n */\nexport function bboxViewport(\n  map: mapboxgl.Map,\n  bounds: mapboxgl.LngLatBoundsLike,\n  delta = 0.5\n): mapboxgl.FlyToOptions {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { center, zoom } = map.cameraForBounds(bounds)!;\n  const transformedZoom = Math.max(zoom - delta, 0);\n\n  return {\n    center,\n    zoom: transformedZoom,\n    speed: FLY_TO_SPEED\n  };\n}\n\n/**\n * Gets the maximum zoom level for a [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/)\n * or [Mapbox Geocoding API](https://docs.mapbox.com/api/search/geocoding-v6/) place type.\n *\n * @returns The maximum zoom level for the given place type, `16` if the type is not supported.\n */\nexport function getMaxZoom(placeType: string): number {\n  switch (placeType) {\n    case 'street':\n      return 15;\n    case 'neighborhood':\n    case 'postcode':\n    case 'locality':\n    case 'oaza':\n      return 14;\n    case 'place':\n    case 'city':\n      return 13;\n    case 'district':\n      return 9;\n    case 'region':\n    case 'prefecture':\n      return 6;\n    case 'country':\n      return 4;\n    default:\n      return 16;\n  }\n}\n\n/**\n * Gets the base URL for the Static Images API for a given user style\n * {@link https://docs.mapbox.com/api/maps/static-images/}\n * @param username The username of the account to which the style belongs\n * @param styleId The ID of the style from which to create a static map\n * @returns\n */\nexport function getStaticBaseUrl(username: string, styleId: string): string {\n  return `https://api.mapbox.com/styles/v1/${username}/${styleId}/static/`;\n}\n","import { createElementFromString } from './utils/dom';\nimport { getStaticBaseUrl } from './utils/map';\nimport closeIcon from './icons/close.svg';\nimport loadingIcon from './icons/loading.svg';\n\nexport const STATIC_BASE_URL_SATELLITE = getStaticBaseUrl(\n  'mapbox',\n  'satellite-streets-v11'\n);\n\nexport const AUTOFILL_SKU_TOKEN_PREFIX = '20d01';\n\nexport const MAPBOX_DOMAINS = ['mapbox.com', 'mapbox.cn', 'tilestream.net'];\n\nexport const LISTBOX_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MapboxSearch\">\n    <div class=\"Label\" role=\"label\" aria-live=\"polite\" aria-atomic=\"true\">\n    </div>\n    <div class=\"Results\" aria-hidden=\"true\">\n      <div class=\"ResultsList\" role=\"listbox\">\n      </div>\n      <div class=\"ResultsAttribution\" aria-hidden=\"true\">\n        <a href=\"https://www.mapbox.com/search-service\" target=\"_blank\" tabindex=\"-1\">\n          Powered by Mapbox\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\nexport const LISTBOX_SUGGESTION_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"Suggestion\" role=\"option\" tabindex=\"-1\">\n    <div class=\"SuggestionIcon\" aria-hidden=\"true\"></div>\n    <div class=\"SuggestionText\">\n      <div class=\"SuggestionName\"></div>\n      <div class=\"SuggestionDesc\"></div>\n    </div>\n  </div>\n</template>\n`);\n\nexport const SEARCHBOX_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"SearchBox\">\n    <div class=\"SearchIcon\"></div>\n    <input class=\"Input\" type=\"text\" />\n    <div class=\"ActionIcon\">\n      <button aria-label=\"Clear\" class=\"ClearBtn\" type=\"button\">${closeIcon}</button>\n      <div class=\"LoadingIcon\">${loadingIcon}</div>\n    </div>\n  </div>\n</template>\n`);\n\nexport const GEOCODER_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"Geocoder\">\n    <div class=\"SearchIcon\"></div>\n    <input class=\"Input\" type=\"text\" />\n    <div class=\"ActionIcon\">\n      <button aria-label=\"Clear\" class=\"ClearBtn\" type=\"button\">${closeIcon}</button>\n      <div class=\"LoadingIcon\">${loadingIcon}</div>\n    </div>\n  </div>\n</template>\n`);\n","/* eslint-disable custom-elements/expose-class-on-global */\n/* eslint-disable custom-elements/define-tag-after-class-definition */\nimport {\n  transformClassSelectors,\n  transformCSSClassRules,\n  transformDOMClassAttributes\n} from '../utils/class_name_transformers';\n\nimport { randomValidID } from '../utils';\n\n/**\n * Custom HTML element that uses the \"Scoped DOM\" approach,\n * which is not really Shadow DOM, but a way to encapsulate CSS classes\n * without Shadow DOM.\n *\n * This is a workaround for the fact that ARIA attributes are identified by\n * IDs, and cannot be shared between Shadow DOM and non-Shadow DOM (Light DOM)\n * elements due to encapsulation.\n *\n * Examples are an <input> element and its corresponding popover.\n *\n * The \"Scoped DOM\" approach is to encapsulate CSS classes by transforming\n * the class attribute of each element, prefixing each class with a\n * random UUID.\n *\n * Goals of the \"Scoped DOM\":\n *\n * - Once the [Accessibility Object Model (AOM)](https://wicg.github.io/aom/explainer.html) is finalized,\n *   replace all uses of {@link MapboxHTMLScopedElement} with {@link MapboxHTMLShadowElement}, and use\n *   AOM instead of IDREFs for ARIA attributes.\n *\n * - The Scoped DOM should be self-contained and work well enough that we don't\n *   need to constantly work around it.\n *\n * - The Scoped DOM should have extensive testing.\n */\nexport class HTMLScopedElement<\n  Events extends { [key: number | string | symbol]: Event } = Record<\n    string,\n    Event\n  >\n> extends HTMLElement {\n  // Seed to use for class name prefixing.\n  #seed = randomValidID();\n\n  protected get template(): HTMLTemplateElement {\n    return null;\n  }\n\n  protected get templateStyle(): string {\n    return null;\n  }\n\n  protected get templateUserStyle(): string {\n    return null;\n  }\n\n  #templateUserStyleElement: HTMLStyleElement;\n\n  /**\n   * `clonedCallback` should be a part of the Web Components spec, but sadly\n   * it is not.\n   *\n   * This is detected in {@link connectedCallback} below if the seed has changed.\n   */\n  clonedCallback(oldSeed: string, newSeed: string): void {\n    // New transform function that replaces any instances of the old\n    // seed with the new one.\n    const seedTransform = (className: string) =>\n      className.replace(oldSeed, newSeed);\n\n    transformDOMClassAttributes(this, seedTransform);\n\n    const styles = Array.from(this.querySelectorAll<HTMLStyleElement>('style'));\n    for (const style of styles) {\n      style.textContent = transformClassSelectors(\n        style.textContent,\n        seedTransform\n      );\n    }\n\n    // Find and repopulate #templateUserStyleElement.\n    if (styles.length) {\n      this.#templateUserStyleElement = styles[styles.length - 1];\n    }\n\n    // Replace id prefix for all sub-nodes\n    const nodesWithId = Array.from(this.querySelectorAll(`[id^=\"${oldSeed}\"]`));\n    for (const node of nodesWithId) {\n      node.id = node.id.replace(oldSeed, newSeed);\n    }\n  }\n\n  connectedCallback(): void {\n    // Return if we already have children.\n    if (this.childElementCount > 0) {\n      const oldSeed = this.dataset.seed;\n      const newSeed = this.#seed;\n\n      // If we have a different seed than before, say from a clone,\n      // then we need to update any templates and styles.\n      if (oldSeed && oldSeed !== newSeed) {\n        this.clonedCallback(oldSeed, newSeed);\n\n        // Finally, make sure the dataset has the new seed.\n        this.dataset.seed = newSeed;\n      }\n\n      return;\n    }\n\n    this.dataset.seed = this.#seed;\n\n    // Use the Light DOM to contain our inner elements,\n    // and do CSS class obfuscation in the \"Scoped DOM.\"\n    const template = this.template;\n    if (template) {\n      const element = this.prepareTemplate(template);\n      this.appendChild(element);\n    }\n\n    const templateStyle = this.templateStyle;\n    if (templateStyle) {\n      const style = document.createElement('style');\n      style.textContent = this.prepareCSS(templateStyle);\n      this.appendChild(style);\n    }\n\n    const userStyle = document.createElement('style');\n    if (this.templateUserStyle) {\n      userStyle.textContent = this.prepareCSS(this.templateUserStyle);\n    }\n    this.appendChild(userStyle);\n    this.#templateUserStyleElement = userStyle;\n  }\n\n  /**\n   * Transform function for {@link transformCSSClassRules} and\n   * {@link transformDOMClassAttributes}.\n   */\n  #transform = (className: string): string => {\n    return `${this.#seed}--${className}`;\n  };\n\n  prepareTemplate(template: HTMLTemplateElement): HTMLElement {\n    const element = template.content.firstElementChild;\n    return transformDOMClassAttributes(\n      element.cloneNode(true) as HTMLElement,\n      this.#transform\n    );\n  }\n\n  prepareCSS(css: string): string {\n    return transformCSSClassRules(css, this.#transform);\n  }\n\n  updateTemplateUserStyle(style: string): void {\n    if (!this.#templateUserStyleElement) {\n      return;\n    }\n    this.#templateUserStyleElement.textContent = this.prepareCSS(style);\n  }\n\n  querySelector<E extends Element = Element>(selectors: string): E {\n    return super.querySelector(\n      transformClassSelectors(selectors, this.#transform)\n    );\n  }\n\n  querySelectorAll<E extends Element = Element>(\n    selectors: string\n  ): NodeListOf<E> {\n    return super.querySelectorAll(\n      transformClassSelectors(selectors, this.#transform)\n    );\n  }\n\n  addEventListener<K extends keyof Events>(\n    type: K,\n    listener: (this: HTMLFormElement, ev: Events[K]) => unknown,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    super.addEventListener(type, listener, options);\n  }\n\n  removeEventListener<K extends keyof Events>(\n    type: K,\n    listener: (this: HTMLFormElement, ev: Events[K]) => unknown,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void {\n    super.removeEventListener(type, listener, options);\n  }\n\n  dispatchEvent<K extends keyof Events>(event: Events[K]): boolean {\n    return super.dispatchEvent(event);\n  }\n}\n","import closeIcon from './icons/close.svg';\nimport questionIcon from './icons/question.svg';\nimport markerIcon from './icons/marker.svg';\nimport streetIcon from './icons/street.svg';\nimport addressMarkerIcon from './icons/addressMarker.svg';\nimport searchIcon from './icons/search.svg';\n\nimport { version } from '../package.json';\nconst styleToggleSatelliteImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-satellite.jpg`;\nconst styleToggleDefaultImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-default.jpg`;\n\n/**\n * Reference:\n * https://getbootstrap.com/docs/5.0/layout/breakpoints/\n */\nexport const MOBILE_BREAKPOINT = 768 - 1;\nconst MOBILE_MEDIA_QUERY = `@media only screen and (max-width: ${MOBILE_BREAKPOINT}px)`;\n\n/**\n * Currently, the only expression supported is\n * `['mobile', mobile_value, tablet_and_desktop_value]`.\n *\n * @typedef Expression\n */\ntype Expression = ['mobile', string, string];\n\n/**\n * `ThemeVariables` are a collection of CSS variables that style Control Theme API\n * elements.\n *\n * @typedef ThemeVariables\n */\nexport interface ThemeVariables {\n  /** @section {Sizing} */\n\n  /**\n   * Unit is the base font size and can be referenced in other variables as multiples of `1em`.\n   *\n   * Analogous to [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n   */\n  unit?: string | Expression;\n  /**\n   * Unit header is a derivative of `unit` and is used for modal headers.\n   *\n   * Analogous to [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n   */\n  unitHeader?: string | Expression;\n\n  /**\n   * Minimum width of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  minWidth?: string;\n  /**\n   * Spacing between items in an element.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  spacing?: string;\n  /**\n   * Padding of items in an element.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  padding?: string;\n  /**\n   * Padding of powered by mapbox label in footer of search listbox.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  paddingFooterLabel?: string;\n  /**\n   * Padding for contents of modal elements.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  paddingModal?: string;\n\n  /** @section {Colors} */\n\n  /**\n   * Color of the primary text.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: dark gray\n   */\n  colorText?: string;\n  /**\n   * Color of the primary accent color.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: variant of blue\n   */\n  colorPrimary?: string;\n  /**\n   * Color of the secondary accent color.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: blue-gray\n   */\n  colorSecondary?: string;\n\n  /**\n   * Background color for elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: white\n   */\n  colorBackground?: string;\n  /**\n   * Background color for items on hover.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: light gray\n   */\n  colorBackgroundHover?: string;\n  /**\n   * Background color for items on press.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: dark gray\n   */\n  colorBackgroundActive?: string;\n\n  /**\n   * Backdrop color of body content behind modals.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: black with alpha value\n   */\n  colorBackdrop?: string;\n\n  /** @section {Borders and box shadows} */\n\n  /**\n   * Border color of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border).\n   */\n  border?: string;\n  /**\n   * Border radius of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius).\n   */\n  borderRadius?: string;\n  /**\n   * Box shadow of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`box-shadow`](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow).\n   */\n  boxShadow?: string;\n\n  /** @section {Typography} */\n\n  /**\n   * Line height.\n   *\n   * Analogous to CSS [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height).\n   * **Default**: 1.2\n   */\n  lineHeight?: string;\n  /**\n   * Font family.\n   *\n   * Analogous to CSS [`font-family`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family).\n   * **Default**: Sans-serif [system font stack](https://systemfontstack.com/)\n   */\n  fontFamily?: string;\n  /**\n   * Font weight for body text.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: normal\n   */\n  fontWeight?: string;\n  /**\n   * Font weight for subheadings.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: 600\n   */\n  fontWeightSemibold?: string;\n  /**\n   * Font weight for headings and item titles.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: bold\n   */\n  fontWeightBold?: string;\n\n  /** @section {Transitions} */\n\n  /**\n   * The duration to use for listbox animations.\n   *\n   * Analogous to CSS [`<time>`](https://developer.mozilla.org/en-US/docs/Web/CSS/time).\n   * **Default**: `150ms`\n   */\n  duration?: string;\n  /**\n   * The timing function to use for listbox animations.\n   *\n   * Analogous to CSS [`<easing-function>`](https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function).\n   * **Default**: `ease-out`\n   */\n  curve?: string;\n}\n\n/**\n * `ThemeIcons` are [SVG icons](https://developer.mozilla.org/en-US/docs/Web/SVG)\n * that are used in Control Theme API elements.\n *\n * Roughly, icon names and their defaults are the same as\n * [Mapbox's Assembly](https://labs.mapbox.com/assembly/icons/).\n *\n * Values must be valid SVG plain-text. Unless otherwise noted,\n * icons should be 18px in size and have appropriate dimensions set.\n *\n * Icons can also be filled with 'currentColor'.\n *\n * @typedef ThemeIcons\n * @example\n * ```typescript\n * const icons = {\n *   close: `\n * <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n * <svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n *   <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.79289 3.79289C4.18342 3.40237 4.81658 3.40237 5.20711 3.79289L9 7.58579L12.7929 3.79289C13.1834 3.40237 13.8166 3.40237 14.2071 3.79289C14.5976 4.18342 14.5976 4.81658 14.2071 5.20711L10.4142 9L14.2071 12.7929C14.5976 13.1834 14.5976 13.8166 14.2071 14.2071C13.8166 14.5976 13.1834 14.5976 12.7929 14.2071L9 10.4142L5.20711 14.2071C4.81658 14.5976 4.18342 14.5976 3.79289 14.2071C3.40237 13.8166 3.40237 13.1834 3.79289 12.7929L7.58579 9L3.79289 5.20711C3.40237 4.81658 3.40237 4.18342 3.79289 3.79289Z\" fill=\"currentColor\"/>\n * </svg>\n * `\n * }\n * ```\n */\nexport interface ThemeIcons {\n  /**\n   * Close icon.\n   */\n  close?: string;\n  /**\n   * Question mark icon.\n   */\n  question?: string;\n\n  /**\n   * Icon for map markers. Can be any size.\n   */\n  marker?: string;\n\n  /**\n   * Icon for streets results in search list box.\n   */\n  street?: string;\n\n  /**\n   * Icon for address results in search list box.\n   */\n  addressMarker?: string;\n\n  /**\n   * Icon for Search Box input.\n   */\n  search?: string;\n}\n\n/**\n * `ThemeImages` are raster images that are used in Control Theme API elements.\n *\n * There are currently only two images, \"toggle default\" and \"toggle satellite,\"\n * which specify images for a Map/Satellite toggle button.\n *\n * Values must be valid URLs accessible by the expected browser environment. [Data URLs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs)\n * and [Blob URLs](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL) are also supported.\n *\n * @typedef ThemeImages\n */\nexport interface ThemeImages {\n  /**\n   * Image for the \"Map\" of the Map/Satellite toggle button.\n   */\n  styleToggleDefault?: string;\n  /**\n   * Image for the \"Satellite\" of the Map/Satellite toggle button.\n   */\n  styleToggleSatellite?: string;\n}\n\n/**\n * The Control Theme API is a way to apply your own design system to\n * Mapbox Search JS Web elements.\n *\n * Control themes use a combination of CSS variables, custom scoped CSS, and\n * SVG icons.\n *\n * @typedef Theme\n * @example\n * ```typescript\n * const theme = {\n *   variables: {\n *     fontFamily: 'Avenir, sans-serif',\n *     unit: '14px',\n *     padding: '0.5em',\n *     borderRadius: '0',\n *     boxShadow: '0 0 0 1px silver',\n *   }\n * };\n *\n * autofill({ theme });\n * ```\n */\nexport interface Theme {\n  /**\n   * CSS variables to be applied to the control.\n   */\n  variables?: ThemeVariables;\n  /**\n   * SVG icon overrides to be applied to the control.\n   */\n  icons?: ThemeIcons;\n  /**\n   * Raster image URLs to be applied to the control.\n   */\n  images?: ThemeImages;\n  /**\n   * Optional CSS text to be inserted into Scoped CSS elements. As such, any\n   * CSS will not interact with the rest of the page.\n   *\n   * TODO: Class names are element-specific and have yet to be standardized. Breaking\n   * changes are likely and will be flagged in CHANGELOG.md.\n   */\n  cssText?: string;\n}\n\nconst DEFAULT_THEME: Theme = {\n  variables: {\n    // Added as font size on container, so em references this value.\n    unit: ['mobile', '16px', '14px'],\n    unitHeader: ['mobile', '24px', '18px'],\n\n    minWidth: 'min(300px, 100vw)',\n    spacing: '0.75em',\n    padding: '0.5em 0.75em',\n    paddingFooterLabel: '0.5em 0.75em',\n    paddingModal: '1.25em',\n\n    colorText: 'rgba(0, 0, 0, 0.75)',\n    colorPrimary: '#4264FB',\n    colorSecondary: '#667F91',\n\n    colorBackground: '#fff',\n    colorBackgroundHover: '#f5f5f5',\n    colorBackgroundActive: '#f0f0f0',\n\n    colorBackdrop: 'rgba(102, 127, 145, 0.3)',\n\n    border: 'none',\n\n    borderRadius: '4px',\n    boxShadow: `\n      0 0 10px 2px rgba(0, 0, 0, 0.05),\n      0 0 6px 1px rgba(0, 0, 0, 0.1),\n      0 0 0 1px rgba(0, 0, 0, 0.1)\n    `,\n\n    lineHeight: '1.2em',\n    /**\n     * Reference:\n     * https://systemfontstack.com/\n     */\n    fontFamily: `\n      -apple-system, BlinkMacSystemFont,\n      avenir next, avenir,\n      segoe ui,\n      helvetica neue, helvetica,\n      Ubuntu, roboto, noto, arial, sans-serif\n    `,\n    fontWeight: 'normal',\n    fontWeightSemibold: '600',\n    fontWeightBold: 'bold',\n\n    duration: '150ms',\n    curve: 'ease-out'\n  },\n  icons: {\n    close: closeIcon,\n    question: questionIcon,\n    marker: markerIcon,\n    street: streetIcon,\n    addressMarker: addressMarkerIcon,\n    search: searchIcon\n  },\n  images: {\n    styleToggleDefault: styleToggleDefaultImg,\n    styleToggleSatellite: styleToggleSatelliteImg\n  }\n};\n\ntype CSSText = string;\n\n/**\n * Applies {@link Theme} to the given HTML element as CSS variables\n * in the style attribute.\n */\nexport function getThemeCSS(rootSelector: string, theme: Theme = {}): CSSText {\n  const variables = {\n    // Make sure to shallow apply default variables.\n    ...DEFAULT_THEME.variables,\n    ...(theme.variables || {})\n  };\n\n  let cssText = theme.cssText || '';\n  let rootVariables = '';\n\n  for (const [key, value] of Object.entries(variables)) {\n    // Is a literal, not an expression.\n    if (!Array.isArray(value)) {\n      rootVariables += `--${key}: ${value};`;\n      continue;\n    }\n\n    // Is an expression; only support \"mobile\" for now.\n    if (value[0] !== 'mobile') {\n      const valueStr = JSON.stringify(value);\n      throw new Error(\n        `Unsupported expression in theme variables: ${key} ${valueStr}`\n      );\n    }\n\n    const [, mobileValue, desktopValue] = value;\n\n    // On mobile, force the mobile value.\n    cssText += `${MOBILE_MEDIA_QUERY} { ${rootSelector} { --${key}: ${mobileValue} !important; } }`;\n    // Our default is still the desktop value.\n    rootVariables += `--${key}: ${desktopValue};`;\n  }\n\n  return cssText + `${rootSelector} { ${rootVariables} }`;\n}\n\nexport function getIcon<I extends keyof Theme['icons']>(\n  iconName: I,\n  theme: Theme = {}\n): string | undefined {\n  const icons = {\n    ...DEFAULT_THEME.icons,\n    ...(theme.icons || {})\n  };\n\n  const svgString = icons[iconName];\n  return svgString;\n}\n\nexport function getImage<I extends keyof Theme['images']>(\n  imageName: I,\n  theme: Theme = {}\n): string | undefined {\n  const images = {\n    ...DEFAULT_THEME.images,\n    ...(theme.images || {})\n  };\n\n  const imgString = images[imageName];\n  return imgString;\n}\n","import {\n  computePosition,\n  autoUpdate,\n  ComputePositionConfig,\n  flip,\n  offset\n} from '@floating-ui/dom';\n\n/**\n * @typedef PopoverOptions\n */\nexport interface PopoverOptions {\n  /**\n   * Positions the popover above or below the reference element. Defaults to 'bottom-start'.\n   */\n  placement: 'top-start' | 'bottom-start';\n  /**\n   * If true, the popover will flip to the opposite side of the reference element to try to keep it in view when scrolling out of frame. Defaults to false.\n   */\n  flip: boolean;\n  /**\n   * The distance gap between the popover and the reference element. Defaults to 5px.\n   */\n  offset: number;\n}\n\n/**\n * Wrapper around floating-ui controls to manage popover positioning and lifecycle.\n */\nexport class Popover {\n  /**\n   * The element around which the popover is positioned, e.g. the `<input>` search box\n   */\n  referenceEl: HTMLElement;\n  /**\n   * The floating popover element, e.g. the results box\n   */\n  floatingEl: HTMLElement;\n\n  #options: PopoverOptions;\n\n  /**\n   * Cleans up the popover instance and any side effects\n   */\n  destroy: () => void;\n\n  #defaultOptions: PopoverOptions = {\n    placement: 'bottom-start',\n    flip: false,\n    offset: 10\n  };\n\n  constructor(\n    referenceEl: HTMLElement,\n    floatingEl: HTMLElement,\n    options?: Partial<PopoverOptions>\n  ) {\n    this.referenceEl = referenceEl;\n    this.floatingEl = floatingEl;\n    this.#options = { ...this.#defaultOptions, ...options };\n    this.destroy = autoUpdate(this.referenceEl, this.floatingEl, this.update);\n  }\n\n  /**\n   * Positioning options for the popover element.\n   */\n  get options(): PopoverOptions {\n    return this.#options;\n  }\n  set options(newOptions: Partial<PopoverOptions>) {\n    this.#options = { ...this.#options, ...newOptions };\n  }\n\n  /**\n   * Recomputes the popover position one time\n   */\n  update = async (): Promise<void> => {\n    const config: Partial<ComputePositionConfig> = {\n      placement: this.options.placement,\n      middleware: [\n        offset(this.options.offset),\n        this.options.flip && flip()\n      ].filter(Boolean)\n    };\n    const { x, y } = await computePosition(\n      this.referenceEl,\n      this.floatingEl,\n      config\n    );\n    Object.assign(this.floatingEl.style, {\n      left: `${x}px`,\n      top: `${y}px`\n    });\n  };\n}\n","/**\n * `MapboxHTMLEvent` is an event dispatched by the Search Box and Address Autofill\n * components.\n *\n * @example\n * ```\n * const search = new MapboxSearchBox();\n * search.addEventListener('retrieve', (event: MapboxHTMLEvent<Suggestion>) => {\n *  console.log(event.detail);\n * });\n */\nexport class MapboxHTMLEvent<T> extends CustomEvent<T> {\n  constructor(type: string, detail?: T) {\n    super(type, {\n      composed: true,\n      detail\n    });\n  }\n\n  /**\n   * Returns a shallow copy of the event. This method is useful for\n   * manually bubbling events from a connected component.\n   *\n   * @param newTarget - Optional event target to assign to the clone\n   *\n   * @example\n   * `MapboxSearchBox` will call `event.clone()` on the `retrieve`\n   * event from `MapboxSearchListbox`, and then dispatch the cloned event.\n   */\n  clone(newTarget?: EventTarget): MapboxHTMLEvent<T> {\n    const eventClone = new MapboxHTMLEvent(this.type, this.detail);\n    if (newTarget) {\n      Object.defineProperty(eventClone, 'target', { value: newTarget });\n    }\n    return eventClone;\n  }\n}\n","export const LENGTH_MESSAGE = 'Type in 2 or more characters for results.';\n\nexport const KEYBOARD_NAVIGATION_GUIDE_MESSAGE =\n  'When autocomplete results are available use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.';\n\nexport const NO_SEARCH_RESULTS_MESSAGE = 'No search results.';\n\nexport const getSuggestionSelectedMessage = (\n  address: string,\n  numberOfResults: number,\n  currentIndex: number\n): string =>\n  `${numberOfResults} ${\n    numberOfResults === 1 ? 'result is' : 'results are'\n  } available. ${address}. ${currentIndex} of ${numberOfResults} is selected.`;\n\nexport const getSuggestionsReadyMessage = (numberOfResults: number): string =>\n  `${numberOfResults} ${\n    numberOfResults === 1 ? 'result is' : 'results are'\n  } available. Use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.`;\n","import {\n  AddressAutofillSuggestion,\n  GeocodingFeature,\n  SearchBoxSuggestion\n} from '@mapbox/search-js-core';\nimport {\n  getSuggestionSelectedMessage,\n  getSuggestionsReadyMessage,\n  KEYBOARD_NAVIGATION_GUIDE_MESSAGE,\n  LENGTH_MESSAGE,\n  NO_SEARCH_RESULTS_MESSAGE\n} from './messages';\n/**\n * This is to make sure our custom \"buttons\" have appropriate\n * keyboard controls for WAI-ARIA.\n *\n * Reference: https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-3\n */\nexport function ariaButtonKeyDown(e: KeyboardEvent): void {\n  const el = e.currentTarget as HTMLElement;\n\n  if (e.key === ' ' || e.key === 'Enter') {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Simulate a click event.\n    el.dispatchEvent(\n      new MouseEvent('click', {\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n}\n\nconst ARIA_DESCRIPTION_ID = 'search-listbox__description';\n\n/**\n * Builds element that may contain different messages for VoiceOver utilities.\n * The element has necessary aria-* specific attributes and visually hidden.\n */\nexport const createAriaLiveElement = (seed: string): HTMLDivElement => {\n  const container = document.createElement('div');\n  container.setAttribute('aria-live', 'polite');\n  container.setAttribute('aria-atomic', 'true');\n  container.setAttribute('role', 'status');\n  container.setAttribute(\n    'style',\n    'border: 0px;clip: rect(0px, 0px, 0px, 0px);height: 1px;margin-bottom: -1px;margin-right: -1px;overflow: hidden;padding: 0px;position: absolute;white-space: nowrap;width: 1px;'\n  );\n\n  const description = document.createElement('div');\n  description.setAttribute('id', `${seed}--${ARIA_DESCRIPTION_ID}`);\n\n  container.appendChild(description);\n\n  return container;\n};\n\nexport const setLiveRegionMessage = (message: string, seed: string): void => {\n  const description: HTMLInputElement =\n    document.body.querySelector(`[id=\"${seed}--${ARIA_DESCRIPTION_ID}\"]`) ??\n    null;\n  if (description) {\n    description.textContent = message;\n  }\n};\n\n/**\n * Adds special parameters to form input to avoid password managers from trigger it's autocompletion on our field.\n * @param input\n */\nexport const suppressExtensionsAutocomplete = (\n  input: HTMLInputElement\n): void => {\n  // 1Password password manager fix https://1password.community/discussion/comment/606453/#Comment_606453\n  input.name = input.name + ' address-search';\n  // LastPass password manager fix https://support.lastpass.com/help/how-do-i-prevent-fields-from-being-filled-automatically\n  input.setAttribute('data-lpignore', 'true');\n};\n\n/**\n * Calculates the message for autofill component to be announced by VoiceOver utilities depending on its state.\n * @example\n * \"Type in 2 or more characters for results.\" (When input text length is less than 2 characters)\n */\nexport const getAriaMessage = (\n  searchValue: string,\n  suggestions: (\n    | SearchBoxSuggestion\n    | AddressAutofillSuggestion\n    | GeocodingFeature\n  )[],\n  selectedIndex: number | undefined\n): string => {\n  let ariaMessage = null;\n\n  const noResults = !suggestions || suggestions.length === 0;\n\n  if (searchValue?.length < 2) {\n    ariaMessage = LENGTH_MESSAGE + ' ' + KEYBOARD_NAVIGATION_GUIDE_MESSAGE;\n  } else if (noResults) {\n    ariaMessage = NO_SEARCH_RESULTS_MESSAGE;\n  } else if (selectedIndex !== undefined) {\n    const suggestion = suggestions[selectedIndex];\n    const placeName =\n      (suggestion as SearchBoxSuggestion).name ||\n      (suggestion as AddressAutofillSuggestion).feature_name ||\n      (suggestion as GeocodingFeature).properties.name;\n\n    ariaMessage = getSuggestionSelectedMessage(\n      placeName,\n      suggestions.length,\n      selectedIndex + 1\n    );\n  } else {\n    ariaMessage = getSuggestionsReadyMessage(suggestions.length);\n  }\n\n  return ariaMessage;\n};\n","import {\n  AddressAutofillSuggestion,\n  GeocodingFeature,\n  SearchBoxSuggestion\n} from '@mapbox/search-js-core';\nimport { SEARCH_SERVICE } from './services';\n\n/**\n * Returns the string from suggestions that meant to be used as first stroke\n * title in search results list for that particular suggestion.\n */\nexport const getSuggestionTitle = (\n  item: SearchBoxSuggestion | AddressAutofillSuggestion | GeocodingFeature,\n  service: SEARCH_SERVICE\n): string => {\n  switch (service) {\n    case SEARCH_SERVICE.AddressAutofill:\n      return (\n        (item as AddressAutofillSuggestion).matching_name ||\n        (item as AddressAutofillSuggestion).feature_name ||\n        (item as AddressAutofillSuggestion).address_line1\n      );\n    case SEARCH_SERVICE.SearchBox:\n      return (item as SearchBoxSuggestion).name;\n    case SEARCH_SERVICE.Geocoding:\n      return (item as GeocodingFeature).properties.name;\n    default:\n      return '';\n  }\n};\n\n/**\n * Returns parsed/formatted description text to show in the second line of an autofill suggestion element\n */\nexport const buildSuggestionDescription = (\n  item: SearchBoxSuggestion | AddressAutofillSuggestion | GeocodingFeature,\n  service: SEARCH_SERVICE\n): string => {\n  switch (service) {\n    case SEARCH_SERVICE.AddressAutofill:\n      return (item as AddressAutofillSuggestion).description;\n    case SEARCH_SERVICE.SearchBox:\n      if ((item as SearchBoxSuggestion).feature_type === 'poi') {\n        // TODO: update this to be street name + place_formatted, once API response is updated\n        return (item as SearchBoxSuggestion).full_address;\n      }\n      return (item as SearchBoxSuggestion).place_formatted;\n    case SEARCH_SERVICE.Geocoding:\n      return (item as GeocodingFeature).properties.place_formatted;\n    default:\n      return '';\n  }\n};\n\n/**\n * Event detail object for the 'input' event.\n */\nexport interface InputEventDetail {\n  /**\n   * The last character (or characters if pasted) that was inputted into the input field.\n   */\n  lastInput: string;\n  /**\n   * The current value of the input field.\n   */\n  inputText: string;\n}\n","import {\n  SearchBoxSuggestion,\n  AddressAutofillSuggestion,\n  GeocodingFeature\n} from '@mapbox/search-js-core';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { Theme, getThemeCSS, getIcon } from '../theme';\nimport { bindElements, getChildElements } from '../utils/dom';\nimport { Popover, PopoverOptions } from '../utils/popover';\n\nimport style from '../style.css';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { MapboxAddressAutofill } from './MapboxAddressAutofill';\nimport { AddressAutofillInstance } from '../autofill';\nimport { getAriaMessage, setLiveRegionMessage } from '../utils/aria';\nimport { LISTBOX_TEMPLATE, LISTBOX_SUGGESTION_TEMPLATE } from '../constants';\nimport {\n  InputEventDetail,\n  buildSuggestionDescription,\n  getSuggestionTitle\n} from '../utils/listbox';\nimport { SEARCH_SERVICE } from '../utils/services';\n\nfunction getAriaIdForSuggestion(resultListId: string, i: number): string {\n  return `${resultListId}-${i}`;\n}\n\ntype Binding = {\n  /**\n   * Wrapper around the entire component.\n   */\n  MapboxSearch: HTMLElement;\n  /**\n   * Results container, which contains:\n   * - {@link ResultsList}\n   * - {@link Label}\n   * - Attribution.\n   */\n  Results: HTMLDivElement;\n  /**\n   * Exposed as a listbox to assistive technologies.\n   */\n  ResultsList: HTMLUListElement;\n  /**\n   * Exposed as a label.\n   *\n   * Visually hidden but can \"announce\" the current selection to\n   * assistive technologies.\n   */\n  Label: HTMLDivElement;\n};\n\n/**\n * Event detail object for the `select` event.\n */\nexport type SelectionEventDetail<Suggestion> = {\n  suggestion: Suggestion;\n  selectedIndex: number;\n};\n\ntype ListboxEventTypes<Suggestion> = {\n  /**\n   * Triggered on `input` events, i.e. typing  in the `<input>` element.\n   */\n  input: MapboxHTMLEvent<InputEventDetail>;\n  /**\n   * Triggered on selection events, i.e. clicking on an item in the results list\n   * or hitting `Enter` with an item highlighted.\n   */\n  select: MapboxHTMLEvent<SelectionEventDetail<Suggestion>>;\n  /**\n   * Triggered on `blur` event, i.e. focus moves away from the `<input>` element.\n   */\n  blur: MapboxHTMLEvent<unknown>;\n  /**\n   * Triggered on `focus` evenet, i.e. focus moves onto the `<input>` element.\n   */\n  focus: MapboxHTMLEvent<unknown>;\n};\n\nexport class MapboxSearchListbox<\n  Suggestion extends\n    | SearchBoxSuggestion\n    | AddressAutofillSuggestion\n    | GeocodingFeature\n> extends HTMLScopedElement<ListboxEventTypes<Suggestion>> {\n  protected override get template(): HTMLTemplateElement {\n    return LISTBOX_TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected get templateUserStyle(): string {\n    return getThemeCSS('.MapboxSearch', this.theme);\n  }\n\n  /**\n   * The current list of suggestions to be rendered in the results box.\n   */\n  suggestions: Suggestion[] | null = null;\n\n  /**\n   * The Address Autofill instance driving the listbox.\n   * Can be either the custom element or function.\n   */\n  autofillHost?: MapboxAddressAutofill | AddressAutofillInstance;\n\n  #popover: Popover | null = null;\n\n  #binding: Binding;\n\n  #labelID: string;\n  #resultListID: string;\n\n  #inputInternal: HTMLInputElement | null;\n\n  dataSeed: string;\n\n  get input(): HTMLInputElement | null {\n    return this.#inputInternal;\n  }\n\n  set input(newInput: HTMLInputElement | null) {\n    const oldInput = this.#inputInternal;\n\n    if (oldInput) {\n      oldInput.removeEventListener('input', this.#handleInput);\n      oldInput.removeEventListener('focus', this.#handleFocus);\n      oldInput.removeEventListener('blur', this.#handleBlur);\n      oldInput.removeEventListener('keydown', this.#handleKeyDown);\n\n      if (this.#popover) {\n        this.#popover.destroy();\n      }\n    }\n\n    if (newInput) {\n      newInput.addEventListener('input', this.#handleInput);\n      newInput.addEventListener('focus', this.#handleFocus);\n      newInput.addEventListener('blur', this.#handleBlur);\n      newInput.addEventListener('keydown', this.#handleKeyDown);\n\n      // Set ARIA role and attributes.\n      newInput.setAttribute('role', 'combobox');\n      newInput.setAttribute('aria-autocomplete', 'list');\n      newInput.setAttribute('aria-controls', this.#resultListID);\n\n      if (this.isConnected) {\n        this.#popover = new Popover(\n          newInput,\n          this.#binding.Results,\n          this.popoverOptions\n        );\n      }\n    }\n\n    this.#inputInternal = newInput;\n  }\n\n  #searchService = null;\n\n  get searchService(): SEARCH_SERVICE | null {\n    return this.#searchService;\n  }\n\n  set searchService(service: SEARCH_SERVICE) {\n    this.#searchService = service;\n  }\n\n  #selectedIndexInternal = undefined;\n\n  get selectedIndex(): number | undefined {\n    return this.#selectedIndexInternal;\n  }\n\n  set selectedIndex(newIndex: number) {\n    const oldIndex = this.#selectedIndexInternal;\n    this.#selectedIndexInternal = newIndex;\n\n    // Update accessibility flags.\n    const { ResultsList } = this.#binding;\n\n    const id = getAriaIdForSuggestion(this.#resultListID, newIndex);\n\n    if (newIndex !== undefined) {\n      this.input.setAttribute('aria-activedescendant', id);\n      ResultsList.setAttribute('aria-activedescendant', id);\n    } else {\n      this.input.removeAttribute('aria-activedescendant');\n      ResultsList.removeAttribute('aria-activedescendant');\n    }\n\n    // Update the selected suggestion.\n    if (oldIndex !== newIndex) {\n      const oldId = getAriaIdForSuggestion(this.#resultListID, oldIndex);\n      const oldEl = ResultsList.querySelector(`#${oldId}`);\n      oldEl?.removeAttribute('aria-selected');\n      oldEl?.setAttribute('tabindex', '-1');\n\n      if (newIndex !== undefined) {\n        const el = ResultsList.querySelector(`#${id}`) as HTMLElement;\n        el?.setAttribute('aria-selected', 'true');\n        el?.setAttribute('tabindex', '0');\n        // TODO: uncomment after moving hideResults logic out from handleBlur and delete aria-activedescendant logic\n        // el?.focus();\n      }\n    }\n\n    this.renderAriaMessage();\n  }\n\n  #showResults(): void {\n    if (!this.suggestions || !this.suggestions.length) {\n      return;\n    }\n\n    const { Results, MapboxSearch } = this.#binding;\n\n    // Calculate width, enable display\n    const rect = this.input.getBoundingClientRect();\n    MapboxSearch.style.setProperty('--width', `${rect.width}px`);\n    MapboxSearch.style.setProperty('display', 'block');\n\n    // Update accessibility flags.\n    this.input.setAttribute('aria-expanded', 'true');\n    Results.removeAttribute('aria-hidden');\n    // Reset selected index.\n    this.selectedIndex = undefined;\n  }\n\n  hideResults(): void {\n    const { Results, ResultsList } = this.#binding;\n\n    // Update accessibility flags.\n    Results.setAttribute('aria-hidden', 'true');\n    this.input.setAttribute('aria-expanded', 'false');\n    ResultsList.removeAttribute('aria-activedescendant');\n    this.input.removeAttribute('aria-activedescendant');\n  }\n\n  renderItem(i: number): HTMLElement {\n    const element = this.prepareTemplate(LISTBOX_SUGGESTION_TEMPLATE);\n    element.id = getAriaIdForSuggestion(this.#resultListID, i);\n\n    return element;\n  }\n\n  fillItem(\n    el: Element,\n    item: Suggestion,\n    i: number,\n    totalLength: number\n  ): void {\n    const iconEl = el.querySelector('[class$=\"SuggestionIcon\"]');\n    const nameEl = el.querySelector('[class$=\"SuggestionName\"]');\n    const descriptionEl = el.querySelector('[class$=\"SuggestionDesc\"]');\n\n    // For Autofill suggestions, use 'accuracy' property to generate icon\n    if (this.searchService === SEARCH_SERVICE.AddressAutofill) {\n      iconEl.innerHTML = getIcon(\n        (item as AddressAutofillSuggestion).accuracy === 'street'\n          ? 'street'\n          : 'addressMarker',\n        this.theme\n      );\n      iconEl.removeAttribute('aria-hidden');\n    } else {\n      iconEl.setAttribute('aria-hidden', 'true');\n    }\n\n    // reset previous values\n    nameEl.textContent = descriptionEl.textContent = '';\n\n    nameEl.textContent = getSuggestionTitle(item, this.searchService);\n\n    descriptionEl.textContent = buildSuggestionDescription(\n      item,\n      this.searchService\n    );\n\n    if (i === this.selectedIndex) {\n      el.setAttribute('aria-selected', 'true');\n    } else {\n      el.removeAttribute('aria-selected');\n    }\n\n    el.setAttribute('aria-posinset', (i + 1).toString());\n    el.setAttribute('aria-setsize', totalLength.toString());\n  }\n\n  #renderResultsList(): void {\n    const { ResultsList } = this.#binding;\n\n    if (!this.suggestions || !this.suggestions.length) {\n      // Speed optimization?\n      ResultsList.innerHTML = '';\n      this.hideResults();\n      return;\n    }\n\n    /**\n     * Make sure we have the correct number of nodes.\n     */\n    const elements = getChildElements(ResultsList);\n    // Too few, add any we're missing.\n    if (this.suggestions.length > elements.length) {\n      for (let i = elements.length; i < this.suggestions.length; i++) {\n        const item = this.renderItem(i);\n        elements.push(item);\n\n        // Setup selected index listener.\n        item.onmouseenter = () => {\n          this.selectedIndex = i;\n        };\n        item.onmouseleave = () => {\n          this.selectedIndex = undefined;\n        };\n\n        ResultsList.appendChild(item);\n      }\n    }\n\n    // Too many, remove any we're not using anymore.\n    if (this.suggestions.length < elements.length) {\n      for (let i = this.suggestions.length; i < elements.length; i++) {\n        elements[i].remove();\n      }\n    }\n\n    /**\n     * Fill out DOM nodes with our data.\n     */\n    for (let i = 0; i < this.suggestions.length; i++) {\n      const suggestion = this.suggestions[i];\n      const element = elements[i];\n\n      this.fillItem(element, suggestion, i, this.suggestions.length);\n      // Override 'onclick' for autofill.\n      element.onclick = () => {\n        this.#handleSelect(suggestion, i);\n      };\n    }\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.MapboxSearch', theme));\n  }\n\n  #popoverOptions: Partial<PopoverOptions> = {};\n\n  get popoverOptions(): Partial<PopoverOptions> {\n    return this.#popoverOptions;\n  }\n\n  set popoverOptions(newOptions: Partial<PopoverOptions>) {\n    this.#popoverOptions = newOptions;\n    if (this.#popover) {\n      this.#popover.options = newOptions;\n      this.#popover.update();\n    }\n  }\n\n  #handleInput = (e: InputEvent): void => {\n    // Prevent duping requests.\n    const { Results } = this.#binding;\n    const input = e.target as HTMLInputElement;\n\n    if (input.dataset['mapboxSuccess']) {\n      delete input.dataset['mapboxSuccess'];\n      return;\n    }\n\n    const searchText = input.value;\n\n    this.renderAriaMessage();\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'true');\n\n    this.dispatchEvent(\n      new MapboxHTMLEvent<InputEventDetail>('input', {\n        lastInput: e.data,\n        inputText: searchText\n      })\n    );\n  };\n\n  renderAriaMessage = (): void => {\n    const message = getAriaMessage(\n      this.input?.value,\n      this.suggestions,\n      this.selectedIndex\n    );\n    setLiveRegionMessage(message, this.dataset.seed);\n  };\n\n  clearAriaMessage = (): void => {\n    setLiveRegionMessage('', this.dataset.seed);\n  };\n\n  /**\n   * Handles the rendering of suggestion items returned from the input text search.\n   * @param suggestions Array of suggestions or features returned from the search\n   */\n  handleSuggest = (suggestions: Suggestion[]): void => {\n    this.suggestions = suggestions;\n\n    if (!suggestions || suggestions.length === 0) {\n      this.renderAriaMessage();\n    }\n\n    if (!suggestions) {\n      this.hideResults();\n      return;\n    }\n\n    this.#renderResultsList();\n    if (suggestions.length) {\n      this.#showResults();\n    }\n\n    const { Results } = this.#binding;\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'false');\n  };\n\n  /**\n   * Handles the results box rendering when an error has occurred.\n   */\n  handleError = (): void => {\n    const { Results } = this.#binding;\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'false');\n\n    this.hideResults();\n  };\n\n  #handleSelect = async (\n    suggestion: Suggestion,\n    selectedIndex: number\n  ): Promise<void> => {\n    // set mapboxSuccess to 'true'\n    const input = this.input;\n    if (input) {\n      input.dataset['mapboxSuccess'] = 'true';\n    }\n\n    const payload: SelectionEventDetail<Suggestion> = {\n      suggestion,\n      selectedIndex\n    };\n\n    this.dispatchEvent(new MapboxHTMLEvent('select', payload));\n\n    this.hideResults();\n  };\n\n  #handleFocus = (): void => {\n    const input = this.input;\n    delete input.dataset['mapboxSuccess'];\n\n    this.dispatchEvent(new MapboxHTMLEvent('focus'));\n    this.renderAriaMessage();\n    this.#showResults();\n  };\n\n  #handleBlur = (): void => {\n    // See if we're the target.\n    if (document.activeElement === this.input) {\n      return;\n    }\n\n    this.dispatchEvent(new MapboxHTMLEvent('blur'));\n    this.clearAriaMessage();\n    this.hideResults();\n  };\n\n  handleArrowUp = (): void => {\n    if (this.selectedIndex === undefined) {\n      this.selectedIndex = this.suggestions.length - 1;\n    } else if (this.selectedIndex === 0) {\n      this.selectedIndex = undefined;\n    } else {\n      this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n    }\n  };\n\n  handleArrowDown = (): void => {\n    if (this.selectedIndex === undefined) {\n      this.selectedIndex = 0;\n    } else if (this.selectedIndex === this.suggestions.length - 1) {\n      this.selectedIndex = undefined;\n    } else {\n      this.selectedIndex = Math.min(\n        this.selectedIndex + 1,\n        this.suggestions.length - 1\n      );\n    }\n  };\n\n  #handleKeyDown = (e: KeyboardEvent): void => {\n    if (!this.suggestions?.length) return;\n\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      this.handleArrowDown();\n      return;\n    }\n\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      this.handleArrowUp();\n      return;\n    }\n\n    if (e.key === 'Escape') {\n      this.hideResults();\n      return;\n    }\n\n    if (this.selectedIndex === undefined) {\n      return;\n    }\n\n    if (e.key === 'Tab') {\n      this.#handleSelect(\n        this.suggestions[this.selectedIndex],\n        this.selectedIndex\n      );\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.#handleSelect(\n        this.suggestions[this.selectedIndex],\n        this.selectedIndex\n      );\n      return;\n    }\n  };\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.dataSeed = this.dataset.seed;\n\n    this.#labelID = this.dataset.seed + '-Label';\n    this.#resultListID = this.dataset.seed + '-ResultsList';\n\n    if (this.input) {\n      this.input.setAttribute('aria-controls', this.#resultListID);\n    }\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxSearch: '.MapboxSearch',\n      Results: '.Results',\n      ResultsList: '.ResultsList',\n      Label: '.Label'\n    });\n\n    const { Results, ResultsList, Label } = this.#binding;\n\n    Label.id = this.#labelID;\n    ResultsList.id = this.#resultListID;\n    ResultsList.setAttribute('aria-labelledby', this.#labelID);\n\n    Results.addEventListener('blur', this.#handleBlur);\n\n    if (!this.#popover && this.input) {\n      this.#popover = new Popover(\n        this.input,\n        this.#binding.Results,\n        this.popoverOptions\n      );\n    }\n\n    // Update popover on next frame.\n    requestAnimationFrame(() => {\n      if (this.#popover) {\n        this.#popover.update();\n      }\n    });\n  }\n\n  disconnectedCallback(): void {\n    // Make sure to unbind input listeners.\n    this.input = null;\n\n    const { Results } = this.#binding;\n    Results.removeEventListener('blur', this.#handleBlur);\n\n    if (this.#popover) this.#popover.destroy();\n  }\n\n  focus(): void {\n    // Refire the event internally, in case we missed it\n    // and the end user is trying to replay it.\n    if (document.activeElement === this.input) {\n      this.#handleFocus();\n    } else {\n      this.input.focus();\n    }\n  }\n\n  blur(): void {\n    this.input.blur();\n  }\n\n  updatePopover(): void {\n    if (this.#popover) {\n      this.#popover.update();\n    }\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxSearchListbox: typeof MapboxSearchListbox;\n  }\n}\n\nwindow.MapboxSearchListbox = MapboxSearchListbox;\n\nif (!window.customElements.get('mapbox-search-listbox')) {\n  customElements.define('mapbox-search-listbox', MapboxSearchListbox);\n}\n","import {\n  AddressAutofillFeatureSuggestion,\n  AddressAutofillSuggestion,\n  GeocodingFeature,\n  SearchBoxSuggestion,\n  featureToSuggestion\n} from '@mapbox/search-js-core';\nimport { InputFormElement, isVisible, setValue } from './dom';\nimport { SEARCH_SERVICE } from './services';\nimport { getSuggestionTitle } from './listbox';\n\n/**\n * A list of WHATWG autofill tokens relevant to addresses. These will be used to\n * set the `autocomplete` attribute on the input element.\n *\n * Reference: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute\n */\ntype AutofillTokens =\n  | 'street-address'\n  | 'address-line1'\n  | 'address-line2'\n  | 'address-line3'\n  | 'address-level4'\n  | 'address-level3'\n  | 'address-level2'\n  | 'address-level1'\n  | 'country'\n  | 'country-name'\n  | 'postal-code';\n\nexport const AUTOFILL_TOKENS = new Set<AutofillTokens>([\n  'street-address',\n  'address-line1',\n  'address-line2',\n  'address-line3',\n  'address-level4',\n  'address-level3',\n  'address-level2',\n  'address-level1',\n  'country',\n  'country-name',\n  'postal-code'\n]);\n\n/**\n * A list of WHATWG autofill tokens we can safely ignore when traversing\n * `autocomplete` attributes.\n */\nconst AUTOFILL_SKIP_TOKENS = new Set(['off', 'on', 'true', 'false']);\n\n/**\n * Finds the parent form element of the given element, if any.\n *\n * @returns The parent form element, or `null` if none was found.\n */\nexport function findParentForm(el: Element): HTMLFormElement | null {\n  let node = el.parentNode;\n  while (node) {\n    if (node instanceof HTMLFormElement) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n\n  return null;\n}\n\n/**\n * Finds input elements that are eligible to be used for Address Autofill.\n * Eligible inputs include those with standard WHATWG autocomplete attribute values, either 'address-line1' or 'street-address'\n * @param form - If specified, searches within the given form instead of the whole document\n * @returns Array of input elements\n */\nexport function findAddressInputs(form?: HTMLFormElement): HTMLInputElement[] {\n  const parent = form || document;\n  return Array.from(\n    parent.querySelectorAll<HTMLInputElement>(\n      'input[autocomplete~=\"address-line1\"], input[autocomplete~=\"street-address\"]'\n    )\n  );\n}\n\nconst SECTION = 'section-';\n\nconst SECTION_DEFAULT = 'section-default';\nconst SECTION_SHIPPING = 'section-shipping';\nconst SECTION_BILLING = 'section-billing';\n\ntype FormStructure = {\n  input: InputFormElement;\n  section: string;\n  field: AutofillTokens;\n}[];\n\n/**\n * Implementation of \"autocomplete\" {@link FormStructure} that matches the\n * WHATWG spec and somewhat Chromium.\n *\n * `billing` and `shipping` are treated as special sections. The {@link SECTION_SHIPPING}\n * and {@link SECTION_BILLING} symbols are used to identify them.\n *\n * Any inputs without an `autocomplete` attribute are skipped.\n *\n * Reference: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n * Reference: https://github.com/chromium/chromium/blob/18a1302acbf920bc692ec6bd986cacd41ae9c25c/components/autofill/core/browser/form_structure.cc#L1503\n */\nexport function parseFormStructure(form: HTMLFormElement): FormStructure {\n  const inputs = Array.from(\n    form.querySelectorAll<InputFormElement>('[autocomplete]')\n  ).filter((el) => {\n    const tagName = el.tagName.toLowerCase();\n    return (\n      tagName === 'input' || tagName === 'select' || tagName === 'textarea'\n    );\n  });\n\n  const res: FormStructure = [];\n\n  for (const input of inputs) {\n    if (!isVisible(input)) {\n      continue;\n    }\n\n    // Note: HTML <input> element has an HTMLInputElement.autocomplete reflection\n    // property, but <select> elements do not.\n    //\n    // This does **not** mean that autocomplete properties are not valid on\n    // selects. I verified this on a popular e-commerce checkout page.\n    const autocomplete = input.getAttribute('autocomplete') || '';\n    if (!autocomplete || AUTOFILL_SKIP_TOKENS.has(autocomplete)) {\n      continue;\n    }\n\n    const tokens = autocomplete.toLowerCase().split(' ');\n\n    // The tokens are parsed in reverse order. The expected pattern is:\n    // [section-*] [shipping|billing] [type_hint] field_type\n\n    // Address tokens can be a maximum length of 3. We don't need to check [type_hint].\n    if (tokens.length > 3) {\n      continue;\n    }\n\n    // The last token should be a part of our scheme.\n    const field = tokens[tokens.length - 1] as AutofillTokens;\n    if (!AUTOFILL_TOKENS.has(field)) {\n      continue;\n    }\n    tokens.pop();\n\n    let section: symbol | string = SECTION_DEFAULT;\n\n    // The second to last token /could/ be 'shipping' or 'billing'.\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n\n      if (sectionToken === 'shipping') {\n        section = SECTION_SHIPPING;\n        tokens.pop();\n      }\n\n      if (sectionToken === 'billing') {\n        section = SECTION_BILLING;\n        tokens.pop();\n      }\n    }\n\n    // The remaining tokens could be a section.\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n      if (sectionToken.startsWith(SECTION)) {\n        section = sectionToken;\n      }\n    }\n\n    res.push({\n      input,\n      section,\n      field\n    });\n  }\n\n  return res;\n}\n\nexport type AutofillInputMap = { [key in AutofillTokens]?: InputFormElement };\n/**\n * Object mapping WHATWG autocomplete attribute values to corresponding address component strings.\n *\n * @typedef AutofillValueMap\n * @example\n * ```typescript\n * {\n *   \"street-address\"?: string;\n *   \"address-line1\"?: string;\n *   \"address-line2\"?: string;\n *   \"address-line3\"?: string;\n *   \"address-level4\"?: string;\n *   \"address-level3\"?: string;\n *   \"address-level2\"?: string;\n *   \"address-level1\"?: string;\n *   country?: string;\n *   \"country-name\"?: string;\n *   \"postal-code\"?: string;\n * }\n * ```\n */\nexport type AutofillValueMap = { [key in AutofillTokens]?: string };\n\n/**\n * Reference: [chromium.md](../../../../docs/search_js_web/chromium.md)\n *\n * Implementation of autofill that closely matches Chromium, with a few noted differences:\n *\n * 1. There is no hueristic for inferring a match, so the\n *    WHATWG \"autocomplete\" attribute is required.\n * 2. This parser, unlike Chromium, doesn't allow more than one token type per\n *    section. Chromium **only** allows this if they are in the same order.\n */\nexport function findAddressAutofillInputs(\n  form: HTMLFormElement,\n  ref: HTMLInputElement\n): AutofillInputMap {\n  // Use an array-of-structs to improve performance.\n  // Reference: https://en.wikipedia.org/wiki/AoS_and_SoA#:~:text=Structure%20of%20arrays%20(SoA)%20is,one%20parallel%20array%20per%20field.\n  const logicalSections: AutofillInputMap[] = [];\n  const logicalSectionSections: (string | symbol)[] = [];\n\n  // Parse the form structure, then go through each node to create\n  // logical sections.\n  const formStructure = parseFormStructure(form);\n\n  // When we traverse through the form structure, we can check the input against\n  // ref to find the logical section we actually want.\n  let foundSection: AutofillInputMap = null;\n\n  for (const { input, section, field } of formStructure) {\n    let lastIndex = logicalSections.length - 1;\n\n    // 1. If we have no logical sections, create a new section.\n    // 2. If the current section is different from the last section, create a new section.\n    // 3. If the current field already exists in the last section, create a new section.\n    let createNewSection = false;\n    if (!logicalSections.length) {\n      createNewSection = true;\n    } else if (logicalSectionSections[lastIndex] !== section) {\n      createNewSection = true;\n    } else if (logicalSections[lastIndex][field]) {\n      createNewSection = true;\n    }\n\n    if (createNewSection) {\n      // If we have already found a logical section, creating new sections\n      // just wastes time.\n      if (foundSection) {\n        break;\n      }\n\n      logicalSections.push({\n        [field]: input\n      });\n\n      logicalSectionSections.push(section);\n      // Make sure to update lastIndex.\n      lastIndex++;\n    } else {\n      logicalSections[lastIndex][field] = input;\n    }\n\n    if (input === ref) {\n      foundSection = logicalSections[lastIndex];\n    }\n  }\n\n  return foundSection ?? {};\n}\n\n/**\n * Fills in the address form using HTML autocomplete attributes.\n *\n * This does a mapping from {@link SearchBoxAdministrativeUnitTypes} to corresponding WHATWG autocomplete types.\n *\n * Reference:\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values\n * https://docs.mapbox.com/api/search/search-box/#administrative-unit-types\n */\nexport function setFormAutofillValues(\n  form: HTMLFormElement,\n  ref: HTMLInputElement,\n  suggestion: AddressAutofillSuggestion\n): void {\n  // Find the inputs that we should fill in.\n  const map = findAddressAutofillInputs(form, ref);\n\n  const streetAddress = [\n    suggestion.address_line1,\n    suggestion.address_line2,\n    suggestion.address_line3\n  ]\n    .filter((part) => Boolean(part))\n    .join(', ');\n\n  setValue(\n    map['street-address'],\n    map['address-line2'] ? suggestion.address_line1 || '' : streetAddress\n  );\n  setValue(map['address-line1'], suggestion.address_line1 || '');\n  setValue(map['address-line2'], suggestion.address_line2 || '');\n\n  setValue(map['address-level1'], suggestion.address_level1 || '');\n  setValue(map['address-level2'], suggestion.address_level2 || '');\n  setValue(map['address-level3'], suggestion.address_level3 || '');\n\n  // Country in WHATWG refers to the country code, not the name.\n  // Example: 'jp' instead of 'Japan'.\n\n  // Note: Make sure to match case here. The country code is lower-case.\n  const countryCode =\n    suggestion.country_code || suggestion.metadata?.iso_3166_1 || '';\n  if (map.country && map.country instanceof HTMLSelectElement) {\n    let firstOption = map.country.querySelector(`option`).value;\n    if (firstOption === '') {\n      // First option was an empty string placeholder, use the second option\n      firstOption = map.country.querySelectorAll(`option`)[1].value;\n    }\n    const isUpperCase = firstOption === firstOption.toUpperCase();\n\n    setValue(\n      map['country'],\n      isUpperCase ? countryCode.toUpperCase() : countryCode\n    );\n  } else {\n    setValue(map['country'], countryCode);\n  }\n\n  setValue(map['country-name'], suggestion.country || '');\n  setValue(map['postal-code'], suggestion.postcode || '');\n}\n\n/**\n * Gets the current input values for address fields given a form and a reference input.\n *\n * @param form - HTML form that includes the autocomplete-compliant input fields\n * @param ref - An input element within the desired form address section\n * @returns A object mapping WHATWG autocomplete properties to their respective form field values\n *\n * @example\n * ```typescript\n * const form = document.querySelector(form);\n * const input = form.querySelector('input[autocomplete~=\"street-address\"]')\n * const valueMap = getFormAutofillValues(form, input);\n * console.log(valueMap);\n * // {\n * //   \"street-address\": \"123 Main\",\n * //   \"address-level2\": \"Boston\",\n * //   \"address-level1\": \"MA\",\n * //   \"postal-code\": \"02129\"\n * // }\n * ```\n */\nexport function getFormAutofillValues(\n  form: HTMLFormElement,\n  ref: HTMLInputElement\n): AutofillValueMap {\n  const map = findAddressAutofillInputs(form, ref);\n  const values: AutofillValueMap = {};\n  for (const [key, input] of Object.entries(map)) {\n    if (input?.value) {\n      values[key] = input.value;\n    }\n  }\n\n  return values;\n}\n\n/**\n * Converts an {@link AutofillValueMap} to a single line, suitable for\n * display in a text field.\n *\n * @param snapshot - An object mapping WHATWG autocomplete attribute values to their corresponding input field values\n * @returns A concatenated address string\n *\n * @example\n * ```typescript\n * const values = {\n *   'street-address': '123 Main St',\n *   'address-level1': 'CA',\n *   'address-level2': 'San Francisco',\n *   'address-level3': '',\n * };\n *\n * const searchText = getAutofillSearchText(values);\n * console.log(searchText); // '123 Main St, San Francisco, CA'\n * ```\n */\nexport function getAutofillSearchText(snapshot: AutofillValueMap): string {\n  const searchText = [];\n\n  if (snapshot['street-address']) {\n    searchText.push(snapshot['street-address']);\n  } else {\n    searchText.push(snapshot['address-line1'] || '');\n  }\n\n  searchText.push(snapshot['address-line2'] || '');\n  searchText.push(snapshot['address-line3'] || '');\n\n  searchText.push(snapshot['address-level3'] || '');\n  searchText.push(snapshot['address-level2'] || '');\n  searchText.push(snapshot['address-level1'] || '');\n  searchText.push(snapshot['postal-code'] || '');\n\n  if (snapshot['country-name']) {\n    searchText.push(snapshot['country-name']);\n  } else {\n    searchText.push(snapshot['country'] || '');\n  }\n\n  return searchText\n    .filter((part) => Boolean(part))\n    .map((part) => part.trim())\n    .join(', ');\n}\n\nexport function fillFormWithFeature(\n  feature: AddressAutofillFeatureSuggestion,\n  input: HTMLInputElement\n): void {\n  const form = findParentForm(input);\n  if (!form) {\n    return;\n  }\n\n  const suggestion = featureToSuggestion(feature);\n  setFormAutofillValues(form, input, suggestion);\n\n  const inputMap = findAddressAutofillInputs(form, input);\n  // TODO: check if suggestion has \"missing_unit\" property true\n  if (inputMap['address-line2'] && !suggestion.address_line2) {\n    inputMap['address-line2'].focus();\n  }\n}\n\n/**\n * Gets address property values from an Autofill feature.\n *\n * @param feature - A {@link AddressAutofillFeatureSuggestion} object.\n * @returns A object mapping WHATWG autocomplete properties to their respective feature values\n */\nexport function featureToAutofillValueMap(\n  feature: AddressAutofillFeatureSuggestion\n): AutofillValueMap {\n  const values: AutofillValueMap = {};\n\n  const streetAddress = [\n    feature.properties.address_line1,\n    feature.properties.address_line2,\n    feature.properties.address_line3\n  ]\n    .filter((part) => Boolean(part))\n    .join(', ');\n\n  values['street-address'] = streetAddress;\n  values['address-line1'] = feature.properties.address_line1;\n  values['address-line2'] = feature.properties.address_line2;\n  values['address-line3'] = feature.properties.address_line3;\n  values['address-level1'] = feature.properties.address_level1;\n  values['address-level2'] = feature.properties.address_level2;\n  values['address-level3'] = feature.properties.address_level3;\n  values['country'] = feature.properties.metadata?.iso_3166_1;\n  values['country-name'] = feature.properties.country;\n  values['postal-code'] = feature.properties.postcode;\n\n  return values;\n}\n\n/**\n * Checks if WHATWG address values from one object match those from another.\n *\n * Can be used to compare an HTML form state against the most recently retrieved Autofill feature\n * to determine if a form has been manually edited after a previous Autofill event.\n *\n * @param targetMap - An {@link AutofillValueMap} object.\n * @param referenceMap - An {@link AutofillValueMap} object.\n * @returns False if all values from the target map are equal to their corresponding value from the reference map.\n */\nexport function checkAutofillValuesChanged(\n  targetMap: AutofillValueMap,\n  referenceMap: AutofillValueMap\n): boolean {\n  for (const [key, value] of Object.entries(targetMap)) {\n    if (referenceMap[key] !== value) return true;\n  }\n  return false;\n}\n\n/**\n * Takes the suggestions array and filters streets inside it to leave only unique ones\n */\nexport const distinctExactStreetResults = (\n  suggestions: AddressAutofillSuggestion[]\n): AddressAutofillSuggestion[] => {\n  return suggestions.filter((item1, idx, arr) => {\n    const title = getSuggestionTitle(item1, SEARCH_SERVICE.AddressAutofill);\n    return (\n      item1.accuracy !== 'street' ||\n      arr.findIndex(\n        (item2) =>\n          title === getSuggestionTitle(item2, SEARCH_SERVICE.AddressAutofill)\n      ) === idx\n    );\n  });\n};\n\nexport const toggleAutocompletion = (\n  input: HTMLInputElement,\n  initialAutocompleteValue: string,\n  enableBrowserAutocomplete: boolean\n): void => {\n  /**\n   * 'new-password' prevents some browsers from suggestion autocompetion including saved addresses, passwords and etc.\n   * https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#preventing_autofilling_with_autocompletenew-password\n   */\n  const disableValue = 'new-password';\n  const defaultFallbackValue = 'address-line1';\n\n  const autocompleteValue = enableBrowserAutocomplete\n    ? initialAutocompleteValue || defaultFallbackValue\n    : disableValue;\n\n  if (input) {\n    input.autocomplete = autocompleteValue;\n  }\n};\n\nexport const handleStreetSelection = (\n  input: HTMLInputElement,\n  initialAutocompleteValue: string,\n  suggestion: AddressAutofillSuggestion\n): void => {\n  if (!input || !suggestion) {\n    return;\n  }\n\n  // autocomplete attribute is required by fillFormWithFeature method.\n  toggleAutocompletion(input, initialAutocompleteValue, true);\n\n  const feature: AddressAutofillFeatureSuggestion = {\n    properties: {\n      ...suggestion,\n      address_line1: suggestion.address_line1 + ' ',\n      postcode: null\n    }\n  } as any;\n\n  fillFormWithFeature(feature, input);\n\n  // turn off browser autocomplete back\n  toggleAutocompletion(input, initialAutocompleteValue, false);\n\n  input?.focus();\n};\n","import {\n  AddressAutofillFeatureSuggestion,\n  featureToSuggestion\n} from '@mapbox/search-js-core';\nimport { MapboxSearchListboxAutofillType } from './components/MapboxAddressAutofill';\nimport {\n  AddressConfirmOptions,\n  MapboxAddressConfirmation\n} from './components/MapboxAddressConfirmation';\nimport { config } from './config';\n\nimport {\n  featureToAutofillValueMap,\n  findAddressInputs,\n  getFormAutofillValues,\n  checkAutofillValuesChanged,\n  parseFormStructure,\n  setFormAutofillValues,\n  findAddressAutofillInputs\n} from './utils/autofill';\nimport { AddressConfirmShowResult } from './utils/confirmation';\n\nconst confirmation = new MapboxAddressConfirmation();\n\n/**\n * A utility that can be run prior to form submission that allows a user to correct or confirm an address.\n *\n * This parses and compares an address entered into form fields with the closest address suggestion from the Mapbox Address Autofill API.\n * Unless an exact match or a custom comparison callback evaluates to true, the user will be shown a modal dialog\n * asking if they would like to use the suggested address.\n *\n * When a suggested address is accepted, the values are automatically updated in the form fields.\n * @param form - HTML form that includes the autocomplete-compliant input fields\n * @param optionsArg - {@link AddressConfirmOptions} Object defining options for Address Autofill API, UI, form parsing, and address comparison\n * @returns A promise resolving with a result object indicating the decision made by the user\n * @example\n * ```typescript\n * form.addEventListener(\"submit\", async (e) => {\n *   e.preventDefault();\n *   const result = await confirmAddress(form, {\n *     minimap: true,\n *     skipConfirmModal: (feature) =>\n *       ['exact', 'high'].includes(\n *         feature.properties.match_code.confidence\n *       )\n *   });\n *   if (result.type === 'nochange') submitForm();\n * });\n * ```\n */\nexport async function confirmAddress(\n  form: HTMLFormElement,\n  optionsArg: AddressConfirmOptions = {}\n): Promise<AddressConfirmShowResult> {\n  const { sections = [] } = optionsArg;\n\n  if (!confirmation.parentNode) {\n    document.body.appendChild(confirmation);\n  }\n\n  let collectedResult: AddressConfirmShowResult = { type: 'nochange' };\n\n  const inputs = findAddressInputs(form);\n  const structure = parseFormStructure(form);\n\n  const listboxComponents = Array.from(\n    document.querySelectorAll<MapboxSearchListboxAutofillType>(\n      'mapbox-search-listbox'\n    )\n  );\n\n  for (const input of inputs) {\n    // If we have sections, filter by the form structure.\n    if (sections.length) {\n      const structureRef = structure.find((s) => s.input === input);\n      if (!structureRef) {\n        continue;\n      }\n\n      if (!sections.includes(structureRef.section)) {\n        continue;\n      }\n    }\n\n    // Get the form's new autofill values to compare against.\n    const autofillValues = getFormAutofillValues(form, input);\n\n    // Compare form values against the latest Address Autofill snapshot (if any);\n    // If form values have not changed since last snapshot, skip showing confirmation.\n    const listbox = listboxComponents.find((lb) => lb.input === input);\n    const autofill = listbox?.autofillHost;\n    if (autofill) {\n      const lastRetrievedFeature =\n        autofill.retrieveFeature as AddressAutofillFeatureSuggestion;\n      if (lastRetrievedFeature) {\n        const snapshot = featureToAutofillValueMap(lastRetrievedFeature);\n        if (!checkAutofillValuesChanged(autofillValues, snapshot)) {\n          continue;\n        }\n      }\n    }\n\n    // Show the confirmation with the first feature.\n    const accessToken = optionsArg.accessToken || config.accessToken;\n    const result = await confirmation.tryShow(autofillValues, {\n      ...optionsArg,\n      accessToken\n    });\n\n    // If changed, autofill the form.\n    if (result.type === 'change') {\n      const inputMap = findAddressAutofillInputs(form, input);\n      if (inputMap['address-line2']?.value) {\n        // carry over address-line2 if it exists on the form\n        result.feature.properties.address_line2 =\n          inputMap['address-line2'].value;\n      }\n      if (listbox) {\n        // Simulate the feature as if it were retrieved by Address Autofill\n        autofill.simulateRetrieve(result.feature);\n      } else {\n        input.dataset['mapboxSuccess'] = 'true';\n        const suggestion = featureToSuggestion(result.feature);\n        setFormAutofillValues(form, input, suggestion);\n      }\n    }\n\n    // Set to changed if changed and not cancelled.\n    if (result.type === 'change' && collectedResult.type !== 'cancel') {\n      collectedResult = result;\n    }\n\n    // Set to cancelled if cancelled.\n    if (result.type === 'cancel') {\n      collectedResult = result;\n    }\n  }\n\n  return collectedResult;\n}\n","import {\n  MatchCodeConfidence,\n  ValidationOptions,\n  ValidationCore,\n  AddressAutofillFeatureSuggestion\n} from '@mapbox/search-js-core';\nimport noScroll from 'no-scroll';\nimport { createFocusTrap, FocusTrap } from 'focus-trap';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\nimport { MapboxAddressConfirmationFeature } from './MapboxAddressConfirmationFeature';\nimport { MapboxAddressConfirmationNoFeature } from './MapboxAddressConfirmationNoFeature';\n\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { AutofillValueMap, getAutofillSearchText } from '../utils/autofill';\nimport { AddressConfirmShowResult } from '../utils/confirmation';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\nimport { config } from '../config';\nimport { MapboxAddressMinimap } from './MapboxAddressMinimap';\n\n/**\n * Styling and theming options for a {@link MapboxAddressMinimap} embedded inside a confirmation dialog.\n *\n * @typedef ConfirmationMinimapOptions\n * @example\n * ```typescript\n * const result = await confirmAddress(form, {\n *   accessToken: 'abc-123',\n *   minimap: {\n *     defaultMapStyle: ['mapbox', 'outdoors-v11'],\n *     theme: { icons: { marker: MARKER_SVG } },\n *     mapStyleMode: 'default',\n *     satelliteToggle: true\n *   }\n * });\n * ```\n */\nexport type ConfirmationMinimapOptions = Partial<\n  Pick<\n    MapboxAddressMinimap,\n    'defaultMapStyle' | 'theme' | 'mapStyleMode' | 'satelliteToggle'\n  >\n>;\n\n/**\n * @typedef AddressConfirmOptions\n */\nexport interface AddressConfirmOptions {\n  /**\n   * Mapbox access token used for the Address Autofill and Static Image APIs\n   */\n  accessToken?: string;\n  /**\n   * CSS variables and icons\n   */\n  theme?: Theme;\n  /**\n   * Address Autofill API configuration options\n   * {@link ValidationOptions}\n   */\n  options?: Partial<ValidationOptions>;\n  /**\n   * If true, a static minimap showing the suggested address location will be displayed in the modal dialog.\n   * If an object, a minimap will be displayed with the specified styling and theming configuration.\n   * Defaults to false.\n   */\n  minimap?: boolean | ConfirmationMinimapOptions;\n  /**\n   * An array of section names used within form element `autocomplete` attributes to identify and group one address section from another, e.g. \"section-shipping\" or \"section-billing\".\n   * These are often used when a single <form> contains multiple logical sections.\n   * If left undefined, all discoverable sections will be processed.\n   */\n  sections?: string[];\n  /**\n   * A callback used to pre-confirm an address and skip the UI modal.\n   * The feature argument contains all address components, as well as an {@link MatchCode} object,\n   * which are used to express the confidence of an address match.\n   * The callback must return a boolean, with `true` indicating that the address has been pre-confirmed,\n   * and the UI modal will be skipped and will not be presented to the end-user.\n   * If left undefined, this defaults to skipping showing the modal when the validated feature's match code\n   * returns an \"exact\" match.\n   */\n  skipConfirmModal?: (feature: AddressAutofillFeatureSuggestion) => boolean;\n  /**\n   * Custom footer text appearing at the bottom of the confirmation modal dialog.\n   * If `true` or left undefined, the default footer text will be used.\n   * If `false`, the footer will not be shown.\n   */\n  footer?: boolean | string;\n}\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MapboxAddressConfirmation\" aria-hidden=\"true\">\n    <mapbox-address-confirmation-feature class=\"ContentFeature\"></mapbox-address-confirmation-feature>\n    <mapbox-address-confirmation-no-feature class=\"ContentNoFeature\"></mapbox-address-confirmation-no-feature>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressConfirmation: HTMLDivElement;\n  ContentFeature: MapboxAddressConfirmationFeature;\n  ContentNoFeature: MapboxAddressConfirmationNoFeature;\n};\n\nexport type AddressConfirmationEventTypes = {\n  result: MapboxHTMLEvent<AddressConfirmShowResult['type']>;\n};\n\n/**\n * {@link MapboxAddressConfirmation} is a custom element that\n * will display the \"Did you mean...\" message when the user\n * enters an address that doesn't match any of the results\n * returned by the Mapbox Address Autofill API.\n *\n * This element is used by {@link MapboxAddressAutofill} and the {@link autofill}\n * method, and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmation extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #show = false;\n\n  #binding: Binding;\n  #focusTrap: FocusTrap | null;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmation', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmation', theme)\n    );\n\n    // Pass theme down into content elements\n    const { ContentFeature, ContentNoFeature } = this.#binding;\n    ContentFeature.theme = theme;\n    ContentNoFeature.theme = theme;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressConfirmation: '.MapboxAddressConfirmation',\n      ContentFeature: '.ContentFeature',\n      ContentNoFeature: '.ContentNoFeature'\n    });\n\n    const { MapboxAddressConfirmation } = this.#binding;\n    MapboxAddressConfirmation.setAttribute('aria-hidden', 'true');\n\n    const theme = this.theme;\n    if (theme) {\n      const { ContentFeature, ContentNoFeature } = this.#binding;\n      ContentFeature.theme = theme;\n      ContentNoFeature.theme = theme;\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#focusTrap = null;\n  }\n\n  hide(): void {\n    this.#show = false;\n\n    if (!this.#binding) {\n      return;\n    }\n\n    const { MapboxAddressConfirmation } = this.#binding;\n    // Update accessibility flags.\n    MapboxAddressConfirmation.setAttribute('aria-hidden', 'true');\n\n    this.#focusTrap?.deactivate();\n    noScroll.off();\n  }\n\n  async show(\n    autofillValues: AutofillValueMap,\n    optionsArg: AddressConfirmOptions,\n    feature?: AddressAutofillFeatureSuggestion\n  ): Promise<AddressConfirmShowResult> {\n    if (!this.#binding) {\n      return { type: 'cancel' };\n    }\n\n    const { MapboxAddressConfirmation, ContentFeature, ContentNoFeature } =\n      this.#binding;\n\n    const { accessToken, minimap = false, theme, footer } = optionsArg;\n\n    // Update theme in this and child custom elements\n    this.theme = theme;\n\n    // Set content and visibility depending on feature definition\n    if (feature) {\n      ContentFeature.removeAttribute('aria-hidden');\n      ContentNoFeature.setAttribute('aria-hidden', 'true');\n\n      ContentFeature.minimap = minimap;\n      ContentFeature.accessToken = accessToken;\n      ContentFeature.footer = footer;\n\n      ContentFeature.update(feature, autofillValues);\n    } else {\n      ContentFeature.setAttribute('aria-hidden', 'true');\n      ContentNoFeature.removeAttribute('aria-hidden');\n\n      ContentNoFeature.update(autofillValues);\n    }\n\n    this.#show = true;\n\n    // Update accessibility flags.\n    MapboxAddressConfirmation.removeAttribute('aria-hidden');\n\n    noScroll.on();\n\n    const activeContentElement = feature ? ContentFeature : ContentNoFeature;\n\n    this.#focusTrap = createFocusTrap(MapboxAddressConfirmation, {\n      fallbackFocus: activeContentElement,\n      escapeDeactivates: (): boolean => {\n        this.hide();\n        return true;\n      }\n    });\n\n    this.#focusTrap?.activate();\n\n    // Wait for next result event, hide and then return.\n    return new Promise((resolve) => {\n      const eventHost = activeContentElement;\n      const fn = (\n        e: MapboxHTMLEvent<AddressConfirmShowResult['type']>\n      ): void => {\n        eventHost.removeEventListener('result', fn);\n\n        const result = e.detail;\n        this.hide();\n\n        if (result === 'change') {\n          resolve({\n            type: 'change',\n            feature\n          });\n        } else {\n          resolve({\n            type: result\n          });\n        }\n      };\n\n      eventHost.addEventListener('result', fn);\n    });\n  }\n\n  /**\n   * Attempts to show an address confirmation dialog by comparing form input values with the closest match via the Address Autofill API.\n   * @param autofillValues - Map of form `<input>` values for each address component\n   * @param optionsArg - Options object defining API options, UI controls, and callback defining when to bypass the dialog\n   * @returns A promise indicating the action taken from the confirmation dialog\n   */\n  async tryShow(\n    autofillValues: AutofillValueMap,\n    optionsArg: AddressConfirmOptions\n  ): Promise<AddressConfirmShowResult> {\n    if (!this.#binding) {\n      return { type: 'cancel' };\n    }\n\n    const { accessToken, options = {} } = optionsArg;\n\n    const validate = new ValidationCore({\n      accessToken: accessToken,\n      ...options\n    });\n\n    // Get the form's new autofill values to compare against.\n    const searchText = getAutofillSearchText(autofillValues);\n\n    const featureCollection = await validate.validate(searchText, {\n      sessionToken: config.autofillSessionToken\n    });\n\n    const feature = featureCollection.features[0];\n\n    // Pre-validate feature from optional callback, or default to checking for exact match on match_code.\n    // If pre-validated, return \"nochange\" early\n    if (feature) {\n      const defaultValidation = (feature: AddressAutofillFeatureSuggestion) =>\n        feature.properties.match_code.confidence === MatchCodeConfidence.exact;\n      const { skipConfirmModal = defaultValidation } = optionsArg;\n      if (skipConfirmModal(feature)) {\n        return { type: 'nochange' };\n      }\n    }\n\n    return await this.show(autofillValues, optionsArg, feature);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmation: typeof MapboxAddressConfirmation;\n  }\n}\n\nwindow.MapboxAddressConfirmation = MapboxAddressConfirmation;\n\nif (!window.customElements.get('mapbox-address-confirmation')) {\n  customElements.define(\n    'mapbox-address-confirmation',\n    MapboxAddressConfirmation\n  );\n}\n","import { SessionToken } from '@mapbox/search-js-core';\n\nclass Config {\n  /**\n   * A Mapbox access token used if one is not passed in explicitly to web components\n   */\n  accessToken: string;\n  /**\n   * If true, Address Autofill address or marker location corrections will be submitted to the Mapbox Contribute API to help improve our data accuracy. Defaults to true.\n   */\n  feedbackEnabled = true;\n\n  readonly autofillSessionToken = new SessionToken(); // Shared session token used among Address Autofill-related web components\n  autofillSessionEnabled = false; // True when Address Autofill has been initialized within the current page view\n  detectBrowserAutofillEnabled = false; // True when `initDetectBrowserAutofill` has been called\n}\n\n/**\n * Global configuration singleton object storing settings shared across Search JS Web components.\n *\n * @property {string} accessToken - A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) used if one is not passed in explicitly to web components.\n * @property {boolean} feedbackEnabled - If true, Address Autofill address or marker location corrections will be submitted to the Mapbox Contribute API to help improve our data accuracy. Defaults to true.\n * @example\n * ```typescript\n * config.accessToken = 'pk.abc.123';\n * ...\n * // Don't need to explicitly pass in token to some components\n * autofill({});\n * confirmAddress(form);\n * ```\n */\nconst config = new Config();\n\n// Prevent autofillSessionToken from being overwritten\nObject.defineProperty(config, 'autofillSessionToken', {\n  configurable: false,\n  writable: false\n});\n\nexport { config };\n","import { AddressAutofillFeatureSuggestion } from '@mapbox/search-js-core';\nimport { AddressConfirmOptions } from '../components/MapboxAddressConfirmation';\nimport { confirmAddress } from '../confirmAddress';\nimport {\n  AutofillValueMap,\n  findAddressAutofillInputs,\n  findParentForm,\n  parseFormStructure\n} from './autofill';\nimport { createElementFromString } from './dom';\n\n/**\n * @typedef AddressConfirmShowResult\n */\nexport type AddressConfirmShowResult =\n  | { type: 'change'; feature: AddressAutofillFeatureSuggestion }\n  | { type: 'nochange' }\n  | { type: 'cancel' };\n\n/**\n * Creates a formatted, multi-line HTML element representing an address\n * @param autofillValues - A map of address `<input>` values by autocomplete attribute\n * @param baseAddress - A full address string. If provided, this will be used for the\n * first and last lines of the formatted address, and will be supplemented by any `address-line2`\n * and/or `address-line3` values provided through the `autofillValues` map.\n * @param featureName - The name of the feature used as the first line of the address.\n * @param featureDescription - The context string the feature used as the last line of the address.\n * @param isSecondary - If true, the address is a secondary address and the featureName includes secondary info.\n * @returns\n */\nexport function createAddressElement(\n  autofillValues: AutofillValueMap,\n  baseAddress?: string,\n  featureName?: string,\n  featureDescription?: string,\n  isSecondary?: boolean\n): HTMLElement {\n  if (baseAddress) {\n    const element = createElementFromString<HTMLSpanElement>(`\n        <span>\n          <span></span>\n          <br />\n          <span></span>\n        </span>\n      `);\n\n    const [firstLine, lastLine] = Array.from(\n      element.querySelectorAll<HTMLSpanElement>('span > span')\n    );\n\n    if (featureName && featureDescription) {\n      firstLine.textContent = featureName;\n      lastLine.textContent = featureDescription;\n    } else {\n      const parts = baseAddress.split(',');\n      firstLine.textContent = parts[0].trim();\n      lastLine.textContent = parts.slice(1).join(',').trim();\n    }\n\n    // If the validated feature is not already a secondary address,\n    // check the customer-entered form inputs to possibly insert into the display name\n    if (!isSecondary) {\n      // Add any customer-entered address-line2, address-line3 input values\n      if (autofillValues['address-line2']) {\n        const span = document.createElement('span');\n        span.textContent = autofillValues['address-line2'];\n        element.insertBefore(span, lastLine);\n        element.insertBefore(document.createElement('br'), lastLine);\n      }\n      if (autofillValues['address-line3']) {\n        const span = document.createElement('span');\n        span.textContent = autofillValues['address-line3'];\n        element.insertBefore(span, lastLine);\n        element.insertBefore(document.createElement('br'), lastLine);\n      }\n    }\n\n    return element;\n  } else {\n    const firstLine =\n      autofillValues['street-address'] || autofillValues['address-line1'] || '';\n    const line2 = autofillValues['address-line2'];\n    const line3 = autofillValues['address-line3'];\n    const lastLine = [\n      autofillValues['address-level4'] || '',\n      autofillValues['address-level3'] || '',\n      autofillValues['address-level2'] || '',\n      `${autofillValues['address-level1'] || ''} ${\n        autofillValues['postal-code'] || ''\n      }`,\n      autofillValues.country || autofillValues['country-name'] || ''\n    ]\n      .filter(Boolean)\n      .join(', ');\n    const addressLines = [firstLine, line2, line3, lastLine].filter(Boolean);\n    const addressLinesHtml = addressLines\n      .map((val) => `<span>${val}</span>`)\n      .join('<br />');\n    const element = createElementFromString<HTMLSpanElement>(`\n        <span>${addressLinesHtml}</span>\n      `);\n    return element;\n  }\n}\n\n/**\n * Checks a browser autofill event against an Address Autofill input and, given\n * custom options, determines and configures if/how to show invoke {@link confirmAddress}.\n *\n * @param input - The `<input>` element wrapped or targeted by Address Autofill.\n * @param event - The custom window event detected and triggered on a browser autofill event.\n * @param confirmOnBrowserAutofill - The value of the instance property set on the autofill instance.\n * @param accessToken - A Mapbox access token.\n * @returns\n */\nexport async function tryConfirmBrowserAutofill(\n  input: HTMLInputElement,\n  event: CustomEvent,\n  confirmOnBrowserAutofill: boolean | AddressConfirmOptions,\n  accessToken: string\n): Promise<void> {\n  // Early exit if confirmation is not enabled on browser autofill events\n  if (!confirmOnBrowserAutofill) return;\n\n  const parentForm = findParentForm(input);\n  /**\n   * Check that at least one of the browser autofilled input elements are\n   * part of the address structure of the form. E.g. if only \"name\" and \"email\"\n   * fields were autofilled, we don't need to confirm the address.\n   */\n  const formElements = Object.values(\n    findAddressAutofillInputs(parentForm, input)\n  );\n  if (!event.detail.elements.some((el) => formElements.includes(el))) {\n    return;\n  }\n\n  const structure = parseFormStructure(parentForm);\n  const structureRef = structure.find((s) => s.input === input);\n  const autofillInstanceSection = structureRef.section;\n\n  // Get list of form sections that were browser autofilled\n  const browserAutofilledSections = Array.from(\n    new Set(\n      structure\n        .filter((s) => event.detail.elements.includes(s.input))\n        .map((s) => s.section)\n    )\n  );\n\n  /**\n   * Skip confirming the autofill instance section if it's not included in\n   * what was autofilled by the browser\n   */\n  if (!browserAutofilledSections.includes(autofillInstanceSection)) {\n    return;\n  }\n\n  /**\n   * Skip confirmation if the impacted autocomplete \"section\" is not included in\n   * an explicitly defined array of form sections from a confirmOnBrowserAutofill object.\n   * e.g. The browser autofill event was triggered by inputs with \"section-billing\" in\n   * their `autocomplete` attribute value, but the `<input>` element targeted by this\n   * autofill instance in this has \"section-shipping\".\n   */\n  const optionsSections =\n    (typeof confirmOnBrowserAutofill === 'object' &&\n      confirmOnBrowserAutofill.sections) ||\n    [];\n  if (\n    optionsSections.length &&\n    !optionsSections.some((section) =>\n      browserAutofilledSections.includes(section)\n    )\n  ) {\n    return;\n  }\n\n  /**\n   * Modify optionsArg to restrict confirmation to only occur\n   * on the \"section\" impacted by the browser autofill event.\n   */\n  let optionsArg: AddressConfirmOptions =\n    typeof confirmOnBrowserAutofill === 'object'\n      ? confirmOnBrowserAutofill\n      : {};\n  optionsArg = {\n    ...optionsArg,\n    accessToken,\n    sections: [autofillInstanceSection]\n  };\n  await confirmAddress(parentForm, optionsArg);\n}\n","import { isLocalServer, isMapboxDomain } from '.';\nimport { config } from '../config';\n\nimport { version } from '../../package.json';\n\nconst CONTRIBUTE_API_BASE_URL = 'https://contribute-api.mapbox.com/v1';\nconst CONTRIBUTE_API_STAGING_BASE_URL =\n  'https://contribute-api-staging.tilestream.net/v1';\nconst EDIT_SUGGESTION_ENDPOINT = 'edit-suggestion';\n\n/**\n * Object defining changes made to an address location feature.\n * Sent as part of payload to Contribute API.\n */\nexport interface ContributeChanges {\n  house?: string; // House number\n  street?: string; // Street name\n  address?: string; // Full address from Address Autofill SDK\n  location?: { longitude: number; latitude: number }; // Location of the user-adjusted pin\n}\n\nexport interface FeedbackArgs {\n  originalCoordinate: [number, number];\n  originalAddress: string;\n  changes: ContributeChanges;\n}\n\n/**\n * Sends feedback to the Mapbox Contribute API given an original Address Autofill API feature and a set of user-defined changes to the address or location.\n * @param accessToken - Mapbox access token\n * @param {FeedbackArgs} feedbackArgs - Data detailing the original address and location and any changes requested\n * @param {[number, number]} feedbackArgs.originalCoordinate - Original coordinate from the Address Autofill API\n * @param {string} feedbackArgs.originalAddress - Original full_address or place_name from the Address Autofill API\n * @param {ContributeChanges} feedbackArgs.changes - Address fields or location changed by a user\n */\nexport function sendFeedback(\n  accessToken: string,\n  feedbackArgs: FeedbackArgs\n): void {\n  // Skip sending feedback if disabled in global config\n  if (!config.feedbackEnabled) return;\n\n  // Direct feedback sent during development or from Mapbox site to staging server\n  const hostname = window.location.hostname;\n  const BASE_URL =\n    isLocalServer(hostname) || isMapboxDomain(hostname)\n      ? CONTRIBUTE_API_STAGING_BASE_URL\n      : CONTRIBUTE_API_BASE_URL;\n  const url = `${BASE_URL}/${EDIT_SUGGESTION_ENDPOINT}/address?access_token=${accessToken}`;\n\n  const { originalCoordinate, originalAddress, changes } = feedbackArgs;\n\n  const payload = {\n    action: 'update',\n    reason: 'incorrect_address',\n    location: {\n      // original location of the address (suggested by SDK/API)\n      longitude: originalCoordinate[0],\n      latitude: originalCoordinate[1]\n    },\n    userEmail: 'no-reply-autofill@mapbox.com',\n    changes,\n    placeName: originalAddress // Full (original) address from Address Autofill SDK\n  };\n\n  fetch(url, {\n    method: 'POST',\n    headers: new Headers({\n      'User-Agent': `mapbox-search-js.${version}.${navigator.userAgent}`,\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(payload)\n  });\n}\n","import { AddressAutofillFeatureSuggestion } from '@mapbox/search-js-core';\n\nimport { MapboxAddressMinimap } from './MapboxAddressMinimap';\nimport { HTMLScopedElement } from './HTMLScopedElement';\nimport {\n  AddressConfirmationEventTypes,\n  ConfirmationMinimapOptions\n} from './MapboxAddressConfirmation';\n\nimport { randomValidID } from '../utils';\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { ariaButtonKeyDown } from '../utils/aria';\nimport { AutofillValueMap, getAutofillSearchText } from '../utils/autofill';\nimport {\n  AddressConfirmShowResult,\n  createAddressElement\n} from '../utils/confirmation';\nimport { sendFeedback } from '../utils/contribute';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getIcon, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MapboxAddressConfirmationFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Did you mean?</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n\n      <div class=\"ModalAddress ModalAddressApprove\"></div>\n            \n      <div class=\"ModalMap\">\n        <mapbox-address-minimap class=\"Minimap\"></mapbox-address-minimap>\n      </div>\n\n      <div\n        class=\"Button ButtonPrimary ButtonApprove\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Yes\"\n      >\n        Yes\n      </div>\n      \n      <div\n        class=\"Button ButtonSecondary ButtonReject\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"No, use the address I provided\"\n      >\n        No, use the address I provided\n      </div>\n\n      <div class=\"ModalFooter\">\n          Your confirmation helps improve address data accuracy.\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressConfirmationFeature: HTMLDivElement;\n  Modal: HTMLDivElement;\n  ModalHeaderTitle: HTMLDivElement;\n  ModalMap: HTMLDivElement;\n  Minimap: MapboxAddressMinimap;\n\n  IconQuestion: SVGSVGElement;\n  IconClose: SVGSVGElement;\n\n  ButtonApprove: HTMLDivElement;\n  ButtonReject: HTMLDivElement;\n\n  ModalAddressApprove: HTMLDivElement;\n};\n\n/**\n * {@link MapboxAddressConfirmationNoFeature} is a custom element that\n * will display a notification showing the closest suggested address to what a user has provided in the form.\n * Optionally, it can display a {@link MapboxAddressMinimap} for the suggesested address feature.\n *\n * This element is hosted by {@link MapboxAddressConfirmation} and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmationFeature extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #binding: Binding;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmationFeature', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmationFeature', theme)\n    );\n\n    const { IconQuestion, IconClose } = this.#binding;\n\n    IconQuestion.innerHTML = getIcon('question', theme);\n    IconClose.innerHTML = getIcon('close', theme);\n  }\n\n  set footer(val: boolean | string) {\n    // Update modal footer, if specified\n    if (val === undefined) return;\n    const footerEl = this.querySelector('.ModalFooter');\n    if (typeof val === 'string') {\n      footerEl.textContent = val;\n      footerEl.removeAttribute('aria-hidden');\n    } else if (!val) {\n      footerEl.setAttribute('aria-hidden', 'true');\n    } else {\n      footerEl.removeAttribute('aria-hidden');\n    }\n  }\n\n  minimap: boolean | ConfirmationMinimapOptions = false;\n  accessToken: string;\n\n  #feature: AddressAutofillFeatureSuggestion;\n  #formValues: AutofillValueMap;\n\n  /**\n   * Update modal content with a given address suggestion\n   * @param feature - Suggested feature\n   * @param autofillValues - User-provided input values from address fields; used to backfill address-line2, address-line3\n   */\n  update = (\n    feature: AddressAutofillFeatureSuggestion,\n    autofillValues: AutofillValueMap\n  ): void => {\n    this.#feature = feature;\n    this.#formValues = autofillValues;\n    const { ModalMap, Minimap, ModalAddressApprove } = this.#binding;\n    // Update minimap if enabled\n    if (this.minimap) {\n      ModalMap.removeAttribute('aria-hidden');\n      Minimap.accessToken = this.accessToken;\n      if (typeof this.minimap === 'object') {\n        const { defaultMapStyle, theme, mapStyleMode, satelliteToggle } =\n          this.minimap;\n        defaultMapStyle &&\n          (Minimap.defaultMapStyle = this.minimap.defaultMapStyle);\n        theme && (Minimap.theme = this.minimap.theme);\n        mapStyleMode && (Minimap.mapStyleMode = mapStyleMode);\n        satelliteToggle !== undefined &&\n          (Minimap.satelliteToggle = satelliteToggle);\n      }\n      Minimap.feature = feature;\n    } else {\n      ModalMap.setAttribute('aria-hidden', 'true');\n    }\n\n    const approveAddress =\n      feature.properties.place_name ||\n      feature.properties.full_address ||\n      feature.properties.address;\n\n    // Set the text of the approve address.\n    ModalAddressApprove.innerHTML = '';\n    ModalAddressApprove.appendChild(\n      createAddressElement(\n        autofillValues,\n        approveAddress,\n        feature.properties.feature_name,\n        feature.properties.description,\n        feature.properties.place_type?.[0] === 'secondary_address'\n      )\n    );\n  };\n\n  #handleClose = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'cancel')\n    );\n  };\n\n  approve = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'change')\n    );\n  };\n\n  reject = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>(\n        'result',\n        'nochange'\n      )\n    );\n    // Send feedback to Contribute API with the address from the user's preferred form values\n    sendFeedback(this.accessToken, {\n      originalCoordinate: this.#feature.geometry.coordinates as [\n        number,\n        number\n      ],\n      originalAddress: this.#feature.properties.full_address,\n      changes: {\n        address: getAutofillSearchText(this.#formValues)\n      }\n    });\n  };\n\n  // IDs to connect for ARIA.\n  #modalID = randomValidID();\n  #modalHeaderTitleID = randomValidID();\n  #modalAddressApproveID = randomValidID();\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressConfirmationFeature: '.MapboxAddressConfirmationFeature',\n      Modal: '.Modal',\n      ModalHeaderTitle: '.ModalHeaderTitle',\n      ModalMap: '.ModalMap',\n      Minimap: '.Minimap',\n\n      IconQuestion: '.IconQuestion',\n      IconClose: '.IconClose',\n\n      ButtonApprove: '.ButtonApprove',\n      ButtonReject: '.ButtonReject',\n\n      ModalAddressApprove: '.ModalAddressApprove'\n    });\n\n    const {\n      Modal,\n      ModalHeaderTitle,\n      IconClose,\n      ButtonApprove,\n      ButtonReject,\n      ModalAddressApprove\n    } = this.#binding;\n\n    // Setup IDREFs for WAI-ARIA.\n    Modal.setAttribute('aria-labelledby', this.#modalHeaderTitleID);\n    Modal.setAttribute('aria-describedby', this.#modalAddressApproveID);\n    IconClose.setAttribute('aria-controls', this.#modalID);\n\n    Modal.id = this.#modalID;\n    ModalHeaderTitle.id = this.#modalHeaderTitleID;\n    ModalAddressApprove.id = this.#modalAddressApproveID;\n\n    // Setup WAI-ARIA button keyboard events.\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n    for (const button of buttons) {\n      button.addEventListener('keydown', ariaButtonKeyDown);\n    }\n\n    // Setup event listeners.\n    IconClose.addEventListener('click', this.#handleClose);\n    ButtonApprove.addEventListener('click', this.approve);\n    ButtonReject.addEventListener('click', this.reject);\n\n    const theme = this.theme;\n    if (theme) {\n      const { IconQuestion, IconClose } = this.#binding;\n\n      IconQuestion.innerHTML = getIcon('question', theme);\n      IconClose.innerHTML = getIcon('close', theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    const { IconClose, ButtonApprove } = this.#binding;\n\n    // Make sure to unbind event listeners.\n    IconClose.removeEventListener('click', this.#handleClose);\n    ButtonApprove.removeEventListener('click', this.approve);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmationFeature: typeof MapboxAddressConfirmationFeature;\n  }\n}\n\nwindow.MapboxAddressConfirmationFeature = MapboxAddressConfirmationFeature;\n\nif (!window.customElements.get('mapbox-address-confirmation-feature')) {\n  customElements.define(\n    'mapbox-address-confirmation-feature',\n    MapboxAddressConfirmationFeature\n  );\n}\n","import { HTMLScopedElement } from './HTMLScopedElement';\nimport { AddressConfirmationEventTypes } from './MapboxAddressConfirmation';\n\nimport { randomValidID } from '../utils';\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { ariaButtonKeyDown } from '../utils/aria';\nimport { AutofillValueMap } from '../utils/autofill';\nimport {\n  AddressConfirmShowResult,\n  createAddressElement\n} from '../utils/confirmation';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getIcon, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MapboxAddressConfirmationNoFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Confirm address</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n      <div class=\"ModalDescription\">\n        We couldn't verify this address. Please check that your information is correct before continuing.\n      </div>\n      <br />\n      <div class=\"ModalSubheader\">\n        You entered\n      </div>\n      <div class=\"ModalAddress\"></div>\n      <div\n        class=\"Button ButtonPrimary\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Use the address I provided\"\n      >\n        Use the address I provided\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  Modal: HTMLDivElement;\n  ModalHeaderTitle: HTMLDivElement;\n\n  IconQuestion: SVGSVGElement;\n  IconClose: SVGSVGElement;\n\n  ButtonReject: HTMLDivElement;\n\n  ModalAddress: HTMLDivElement;\n};\n\n/**\n * {@link MapboxAddressConfirmationNoFeature} is a custom element that\n * will display a notification when an address entered into an HTML form\n * does not return any features when queried against the Address Autofill API.\n *\n * This element is hosted by {@link MapboxAddressConfirmation} and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmationNoFeature extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #binding: Binding;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmationNoFeature', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmationNoFeature', theme)\n    );\n\n    const { IconQuestion, IconClose } = this.#binding;\n\n    IconQuestion.innerHTML = getIcon('question', theme);\n    IconClose.innerHTML = getIcon('close', theme);\n  }\n\n  /**\n   * Update modal content with user-provided address\n   * @param autofillValues - User-provided input values from address fields\n   */\n  update = (autofillValues: AutofillValueMap): void => {\n    // Set the text of the approve address.\n    const { ModalAddress } = this.#binding;\n    ModalAddress.innerHTML = '';\n    ModalAddress.appendChild(createAddressElement(autofillValues));\n  };\n\n  #handleClose = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'cancel')\n    );\n  };\n\n  reject = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>(\n        'result',\n        'nochange'\n      )\n    );\n  };\n\n  // IDs to connect for ARIA.\n  #modalID = randomValidID();\n  #modalHeaderTitleID = randomValidID();\n  #modalAddressID = randomValidID();\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      Modal: '.Modal',\n      ModalHeaderTitle: '.ModalHeaderTitle',\n\n      IconQuestion: '.IconQuestion',\n      IconClose: '.IconClose',\n\n      ModalAddress: '.ModalAddress',\n\n      ButtonReject: '.Button'\n    });\n\n    const { Modal, ModalHeaderTitle, IconClose, ModalAddress, ButtonReject } =\n      this.#binding;\n\n    // Setup IDREFs for WAI-ARIA.\n    Modal.setAttribute('aria-labelledby', this.#modalHeaderTitleID);\n    Modal.setAttribute('aria-describedby', this.#modalAddressID);\n    IconClose.setAttribute('aria-controls', this.#modalID);\n\n    Modal.id = this.#modalID;\n    ModalHeaderTitle.id = this.#modalHeaderTitleID;\n    ModalAddress.id = this.#modalAddressID;\n\n    // Setup WAI-ARIA button keyboard events.\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n    for (const button of buttons) {\n      button.addEventListener('keydown', ariaButtonKeyDown);\n    }\n\n    // Setup event listeners.\n    IconClose.addEventListener('click', this.#handleClose);\n    ButtonReject.addEventListener('click', this.reject);\n\n    const theme = this.theme;\n    if (theme) {\n      const { IconQuestion, IconClose } = this.#binding;\n\n      IconQuestion.innerHTML = getIcon('question', theme);\n      IconClose.innerHTML = getIcon('close', theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    const { IconClose, ButtonReject } = this.#binding;\n\n    // Make sure to unbind event listeners.\n    IconClose.removeEventListener('click', this.#handleClose);\n    ButtonReject.removeEventListener('click', this.reject);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmationNoFeature: typeof MapboxAddressConfirmationNoFeature;\n  }\n}\n\nwindow.MapboxAddressConfirmationNoFeature = MapboxAddressConfirmationNoFeature;\n\nif (!window.customElements.get('mapbox-address-confirmation-no-feature')) {\n  customElements.define(\n    'mapbox-address-confirmation-no-feature',\n    MapboxAddressConfirmationNoFeature\n  );\n}\n","import {\n  AddressAutofillFeatureSuggestion,\n  AddressAutofillOptions,\n  AddressAutofillRetrieveResponse,\n  AddressAutofillSuggestion,\n  AddressAutofillSuggestionResponse,\n  AddressAutofillCore,\n  SearchSession\n} from '@mapbox/search-js-core';\n\nimport {\n  MapboxSearchListbox,\n  SelectionEventDetail\n} from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { tryParseJSON } from '../utils';\nimport {\n  distinctExactStreetResults,\n  fillFormWithFeature,\n  toggleAutocompletion\n} from '../utils/autofill';\nimport { tryConfirmBrowserAutofill } from '../utils/confirmation';\n\nimport { Theme } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { config } from '../config';\nimport { initDetectBrowserAutofill } from '../utils/detect_browser_autofill';\nimport { AddressConfirmOptions } from './MapboxAddressConfirmation';\nimport { PopoverOptions } from '../utils/popover';\nimport {\n  createAriaLiveElement,\n  suppressExtensionsAutocomplete\n} from '../utils/aria';\nimport { handleStreetSelection } from '../utils/autofill';\nimport { SEARCH_SERVICE } from '../utils/services';\nimport { InputEventDetail } from '../utils/listbox';\nimport { MapboxEventManager } from '../events/MapboxEventManager';\n\nexport type MapboxSearchListboxAutofillType =\n  MapboxSearchListbox<AddressAutofillSuggestion>;\n\ntype AddressAutofillEventTypes = {\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   *\n   * The underlying response from {@link AddressAutofillCore} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AddressAutofillSuggestionResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<AddressAutofillSuggestionResponse>;\n  /**\n   * Fired when {@link AddressAutofillCore} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {Error}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   *\n   * The underlying response from {@link AddressAutofillCore} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AddressAutofillRetrieveResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<AddressAutofillRetrieveResponse>;\n  /**\n   * Fired when the user has changed the `<input>` text.\n   *\n   * The new input value is passed as the event's detail.\n   *\n   * @event input\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {string}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('input', (event) => {\n   *   if (e.target !== e.currentTarget) return;\n   *   const searchText = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  input: MapboxHTMLEvent<unknown>;\n};\n\n/**\n * `MapboxAddressAutofill`, also available as the element `<mapbox-address-autofill>`,\n * is an element that wraps an address [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with\n * intelligent, location-aware autocomplete functionality.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * This element must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form\n * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have\n * this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * @class MapboxAddressAutofill\n * @example\n * <form>\n *   <mapbox-address-autofill access-token=\"YOUR_MAPBOX_ACCESS_TOKEN\">\n *     <input type=\"text\" name=\"address\" autocomplete=\"shipping street-address\" />\n *   </mapbox-address-autofill>\n * </form>\n */\nexport class MapboxAddressAutofill extends HTMLScopedElement<AddressAutofillEventTypes> {\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxAddressAutofill.attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    'browser-autofill-enabled',\n    // Theming, CSS.\n    'theme',\n    'popover-options',\n    'css-text',\n    // Underlying Address Autofill API options.\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'proximity',\n    'streets'\n  ];\n\n  #autofill = new AddressAutofillCore();\n  #session = new SearchSession<\n    AddressAutofillOptions,\n    AddressAutofillSuggestion,\n    AddressAutofillSuggestionResponse,\n    AddressAutofillRetrieveResponse\n  >(this.#autofill);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @example\n   * ```typescript\n   * autofill.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#autofill.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#autofill.accessToken = newToken;\n  }\n\n  #input: HTMLInputElement;\n  #listbox = new MapboxSearchListbox();\n\n  #eventManager = new MapboxEventManager(SEARCH_SERVICE.AddressAutofill);\n\n  #initialAutocompleteValue: string;\n\n  /**\n   * The `<input>` element wrapped by the autofill component.\n   *\n   * @name input\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {HTMLInputElement}\n   */\n  get input(): HTMLInputElement {\n    return this.#input;\n  }\n\n  /**\n   * Options to pass to the underlying {@link AddressAutofillCore} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AddressAutofillOptions}\n   * @example\n   * ```typescript\n   * autofill.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  options: Partial<AddressAutofillOptions> = {};\n\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n  }\n\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   *\n   * @name popoverOptions\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {PopoverOptions}\n   * @example\n   * ```typescript\n   * autofill.popoverOptions = {\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * };\n   * ```\n   */\n  get popoverOptions(): Partial<PopoverOptions> {\n    return this.#listbox.popoverOptions;\n  }\n  set popoverOptions(newOptions: Partial<PopoverOptions>) {\n    this.#listbox.popoverOptions = newOptions;\n  }\n\n  /**\n   * If true, forms autofilled by the browser will prompt the\n   * {@link confirmAddress} dialog for user confirmation.\n   * An {@link AddressConfirmOptions} object can also be passed\n   * to prompt {@link confirmAddress} with custom options.\n   * Defaults to false.\n   *\n   * @name confirmOnBrowserAutofill\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {boolean | AddressConfirmOptions}\n   * @example\n   * ```typescript\n   * autofill.confirmOnBrowserAutofill = {\n   *   minimap: true,\n   *   skipConfirmModal: (feature) =>\n   *     ['exact', 'high'].includes(\n   *       feature.properties.match_code.confidence\n   *     )\n   * };\n   * ```\n   */\n  confirmOnBrowserAutofill: boolean | AddressConfirmOptions = false;\n\n  #browserAutofillEnabled? = false;\n\n  /**\n   * Enables the browser's autocomplete popup to show during the first two typed characters while Mapbox results are suppressed. Defaults to false.\n   *\n   * **Note:** Due to varying specifications, efforts to suppress browser autocomplete behavior may not work on all browsers.\n   *\n   * @name browserAutofillEnabled\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {boolean}\n   * @example\n   * ```typescript\n   * autofill.browserAutofillEnabled = true;\n   * ```\n   */\n  get browserAutofillEnabled(): boolean {\n    return this.#browserAutofillEnabled;\n  }\n  set browserAutofillEnabled(enable: boolean) {\n    this.#browserAutofillEnabled = enable;\n  }\n\n  #handleSuggest = (result: AddressAutofillSuggestionResponse): void => {\n    const filteredSuggestions = result?.suggestions\n      ? distinctExactStreetResults(result.suggestions)\n      : null;\n    this.#listbox.handleSuggest(filteredSuggestions);\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('suggest', result));\n  };\n\n  #handleSuggestError = (error: Error): void => {\n    this.#listbox.handleError();\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('suggesterror', error));\n  };\n\n  #handleRetrieve = (result: AddressAutofillRetrieveResponse): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('retrieve', result));\n\n    this.retrieveFeature = result.features?.[0];\n\n    if (!this.#input) {\n      return;\n    }\n\n    const featureCollection = result;\n    if (\n      !featureCollection ||\n      !featureCollection.features ||\n      !featureCollection.features.length\n    ) {\n      return;\n    }\n\n    fillFormWithFeature(featureCollection.features[0], this.#input);\n  };\n\n  // Called when content changes.\n  #handleObserve = (): void => {\n    try {\n      const input: HTMLInputElement = this.querySelector('input') ?? null;\n\n      this.#input = input;\n      this.#listbox.input = input;\n    } catch (e) {\n      this.#input = null;\n      this.#listbox.input = null;\n\n      console.error(e.message || e);\n    }\n  };\n\n  #observer = new MutationObserver(this.#handleObserve);\n\n  #handleBrowserAutofill = (e: CustomEvent): void => {\n    // Hide listbox, if showing\n    this.#listbox.blur();\n\n    // Address confirmation\n    tryConfirmBrowserAutofill(\n      this.#input,\n      e,\n      this.confirmOnBrowserAutofill,\n      this.accessToken\n    );\n  };\n\n  retrieveFeature: AddressAutofillFeatureSuggestion = null;\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string is returned, no search request will be performed.\n   *\n   * @name interceptSearch\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @example\n   * Enable search only when the input value length is more than 3 characters.\n   * ```typescript\n   * search.interceptSearch = (val) => val?.length > 3 ? val : null;\n   * ```\n   */\n  interceptSearch: (val: string) => string = null;\n\n  #onHandleInput = (e: MapboxHTMLEvent<InputEventDetail>): void => {\n    // Manually bubble up the event as a basic input event.\n    this.dispatchEvent(\n      new MapboxHTMLEvent<string>('input', e.detail.inputText)\n    );\n\n    const { lastInput, inputText } = e.detail;\n\n    // if following flag set to true and search text is equal or less than 2 characters - enable browser autofill.\n    const enableBrowserAutocomplete =\n      this.browserAutofillEnabled === true && inputText?.length <= 2;\n\n    toggleAutocompletion(\n      this.#input,\n      this.#initialAutocompleteValue,\n      enableBrowserAutocomplete\n    );\n\n    if (!inputText) {\n      this.#handleClear();\n      return;\n    }\n\n    const alteredText = this.interceptSearch && this.interceptSearch(inputText);\n\n    const searchText = this.interceptSearch ? alteredText : inputText;\n\n    if ((this.interceptSearch && !alteredText) || searchText?.length <= 2) {\n      this.#listbox.handleSuggest(null);\n      return;\n    }\n\n    this.#session.suggest(searchText, this.options);\n    this.#eventManager.input(\n      searchText,\n      lastInput,\n      {\n        ...this.options,\n        sessionToken: this.#session.sessionToken,\n        accessToken: this.accessToken\n      },\n      null,\n      this.#autofill.responseHeaders\n    );\n  };\n\n  #onHandleSelect = (\n    e: MapboxHTMLEvent<SelectionEventDetail<AddressAutofillSuggestion>>\n  ): void => {\n    const { suggestion, selectedIndex } = e.detail;\n    if (suggestion.accuracy !== 'street') {\n      toggleAutocompletion(this.#input, this.#initialAutocompleteValue, true);\n\n      this.#session.retrieve(suggestion, this.options);\n      this.#eventManager.select(\n        this.input.value,\n        selectedIndex,\n        this.#listbox.suggestions,\n        {\n          ...this.options,\n          sessionToken: this.#session.sessionToken,\n          accessToken: this.accessToken\n        },\n        null,\n        this.#autofill.responseHeaders\n      );\n    } else {\n      handleStreetSelection(\n        this.#input,\n        this.#initialAutocompleteValue,\n        suggestion\n      );\n    }\n  };\n\n  #onHandleBlur = (): void => {\n    toggleAutocompletion(this.#input, this.#initialAutocompleteValue, true);\n    // Abort any in-progress operations.\n    this.#session.abort();\n  };\n\n  #onHandleFocus = (): void => {\n    const enableBrowserAutocomplete =\n      this.browserAutofillEnabled === true && this.#input.value?.length <= 2;\n    toggleAutocompletion(\n      this.#input,\n      this.#initialAutocompleteValue,\n      enableBrowserAutocomplete\n    );\n  };\n\n  #handleClear = (): void => {\n    this.#listbox.handleSuggest(null);\n    this.#eventManager.clear();\n  };\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    config.autofillSessionEnabled = true;\n    this.#session.sessionToken = config.autofillSessionToken.id;\n\n    this.#listbox.autofillHost = this;\n    this.#listbox.searchService = SEARCH_SERVICE.AddressAutofill;\n\n    const input: HTMLInputElement = this.querySelector('input') ?? null;\n\n    // Setup observer handler.\n    this.#observer.observe(this, {\n      subtree: true,\n      childList: true\n    });\n\n    this.#handleObserve();\n\n    this.#listbox.addEventListener('input', this.#onHandleInput);\n    this.#listbox.addEventListener('select', this.#onHandleSelect);\n    this.#listbox.addEventListener('blur', this.#onHandleBlur);\n    this.#listbox.addEventListener('focus', this.#onHandleFocus);\n\n    this.#session.addEventListener('suggest', this.#handleSuggest);\n    this.#session.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.#listbox);\n\n    if (input) {\n      input.insertAdjacentElement(\n        'beforebegin',\n        createAriaLiveElement(this.#listbox.dataSeed)\n      );\n      suppressExtensionsAutocomplete(input);\n      this.#initialAutocompleteValue = input.autocomplete;\n    }\n\n    // Setup browser autofill detection\n    initDetectBrowserAutofill();\n    window.addEventListener('browserautofill', this.#handleBrowserAutofill);\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n\n    this.#listbox.removeEventListener('input', this.#onHandleInput);\n    this.#listbox.removeEventListener('select', this.#onHandleSelect);\n    this.#listbox.removeEventListener('blur', this.#onHandleBlur);\n    this.#listbox.removeEventListener('focus', this.#onHandleFocus);\n\n    this.#session.removeEventListener('suggest', this.#handleSuggest);\n    this.#session.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.removeEventListener('retrieve', this.#handleRetrieve);\n\n    this.#eventManager.remove();\n\n    this.#observer.disconnect();\n\n    window.removeEventListener('browserautofill', this.#handleBrowserAutofill);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#autofill.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'browser-autofill-enabled') {\n      this.#browserAutofillEnabled = Boolean(newValue);\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    if (name === 'popover-options') {\n      this.popoverOptions = tryParseJSON(newValue);\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.options[optionName];\n    }\n\n    // Otherwise, assume it's a Address Autofill API option.\n    this.options[optionName] = newValue;\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the wrapped input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n\n  /**\n   * Trigger side effects from a retrieve event with a simulated result.\n   * Used by {@link confirmAddress} when a suggested addresses is accepted.\n   *\n   * @ignore\n   */\n  simulateRetrieve(feature: AddressAutofillFeatureSuggestion): void {\n    const input = this.input;\n    if (input) {\n      input.dataset['mapboxSuccess'] = 'true';\n    }\n    this.#listbox.hideResults();\n\n    const simResult: AddressAutofillRetrieveResponse = {\n      type: 'FeatureCollection',\n      features: [feature],\n      url: ''\n    };\n\n    this.#handleRetrieve(simResult);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressAutofill: typeof MapboxAddressAutofill;\n  }\n}\n\nwindow.MapboxAddressAutofill = MapboxAddressAutofill;\n\nif (!window.customElements.get('mapbox-address-autofill')) {\n  customElements.define('mapbox-address-autofill', MapboxAddressAutofill);\n}\n","/**\n * Detects browser autofill events and emits custom events\n * Reference: https://github.com/matteobad/detect-autofill\n */\n\nimport { debounce } from '@mapbox/search-js-core';\n\nimport { addDocumentStyle } from './dom';\n\nimport browserAutofillCss from './detect_browser_autofill.css';\nimport { config } from '../config';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\n\n// Note: if we decide to support legacy browsers in future, we may need to polyfill CustomEvent\n// import 'custom-event-polyfill';\n\nexport const ATTR_NAME = 'browser-autofilled';\nlet AUTOFILLED_ELEMENTS: HTMLElement[] = [];\n\nfunction dispatchBrowserAutofillEvent() {\n  window.dispatchEvent(\n    new window.CustomEvent('browserautofill', {\n      bubbles: true,\n      cancelable: true,\n      detail: { elements: AUTOFILLED_ELEMENTS }\n    })\n  );\n  AUTOFILLED_ELEMENTS = []; // reset element array\n}\n\n/**\n * Debounce interval set at 5ms, as it seems like the delay between successive fields (i.e. inputs)\n * being autofilled by the browser is roughly 1-2ms.\n *\n * This ensures that all fields affected by the autofill event have been populated before signaling\n * the event to the rest of the application.\n */\nconst debouncedAutofill = debounce(dispatchBrowserAutofillEvent, 5);\n\n/**\n * Manage an input element when its value is autocompleted\n * by the browser\n *\n * @param {HtmlInputElement} element\n */\nexport function browserAutofill(element: HTMLInputElement): void {\n  if (element.hasAttribute(ATTR_NAME)) return;\n  element.setAttribute(ATTR_NAME, '');\n\n  AUTOFILLED_ELEMENTS.push(element);\n\n  debouncedAutofill();\n}\n\n/**\n * Manage an input element when its autocompleted value is\n * removed by the browser\n *\n * @param {HtmlInputElement} element\n */\nexport function cancelBrowserAutofill(element: HTMLInputElement): void {\n  if (!element.hasAttribute(ATTR_NAME)) return;\n  element.removeAttribute(ATTR_NAME);\n}\n\n/**\n * Handler for -webkit based browser that listen for a custom\n * animation create using the :pseudo-selector in the stylesheet.\n * Works with Chrome, Safari\n *\n * @param {AnimationEvent} event\n */\nexport function onAnimationStart(event: AnimationEvent): void {\n  'onbrowserautofillstart' === event.animationName\n    ? browserAutofill(event.target as HTMLInputElement)\n    : cancelBrowserAutofill(event.target as HTMLInputElement);\n}\n\n/**\n * Handler for non-webkit based browser that listen for input\n * event to trigger the autocomplete-cancel process.\n * Works with Firefox, Edge, IE11\n *\n * @param {InputEvent} event\n */\nexport function onInput(event: InputEvent): void {\n  const targetEl = event.target as HTMLInputElement;\n  targetEl.nodeName.toLowerCase() !== 'select' &&\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  !(event as any).simulated &&\n  !(event instanceof MapboxHTMLEvent) &&\n  ('insertReplacementText' === event.inputType || !('data' in event))\n    ? browserAutofill(targetEl)\n    : cancelBrowserAutofill(targetEl);\n}\n\n/**\n * Enables detection of browser autofill events\n */\nexport function initDetectBrowserAutofill(): void {\n  // Set global state to ensure event listeners aren't duplicated\n  if (config.detectBrowserAutofillEnabled) {\n    return;\n  } else {\n    config.detectBrowserAutofillEnabled = true;\n  }\n\n  addDocumentStyle(browserAutofillCss);\n  document.addEventListener('animationstart', onAnimationStart, true);\n  document.addEventListener('input', onInput, true);\n}\n","import {\n  AddressAutofillOptions,\n  AddressAutofillSuggestion,\n  GeocodeFeature,\n  GeocodeOptions,\n  LngLat,\n  LngLatBounds,\n  LngLatLike,\n  SearchBoxOptions,\n  SearchBoxSuggestion\n} from '@mapbox/search-js-core';\nimport { SEARCH_SERVICE } from '../utils/services';\n\nexport interface EventPayloadSuggestionsData {\n  suggestionIds: string[];\n  suggestionNames: string[];\n  suggestionTypes: string[];\n  suggestionSources: string[];\n}\n\nexport interface EventPayloadOptionsData {\n  country?: string[];\n  language?: string[];\n  bbox?: number[];\n  types?: string[];\n  limit?: number;\n  autocomplete?: boolean;\n  fuzzyMatch?: boolean;\n  proximity?: number[];\n  routing?: boolean;\n  worldview?: string;\n  streets?: boolean;\n  permanent?: boolean;\n}\n\nexport type Suggestion =\n  | SearchBoxSuggestion\n  | GeocodeFeature\n  | AddressAutofillSuggestion;\n\nexport type Options =\n  | SearchBoxOptions\n  | GeocodeOptions\n  | AddressAutofillOptions;\n\n/**\n * Parse a proximity value, lng/lat coordinate object, lng/lat string, or 'ip'\n * @param proximity\n * @param responseHeaders\n * @returns\n */\nconst parseExplicitOrIPProximity = (\n  proximity: string | LngLatLike,\n  responseHeaders?: Headers\n): number[] => {\n  if (typeof proximity === 'string') {\n    if (proximity === 'ip') {\n      const ipProximityHeader = responseHeaders?.get('ip-proximity');\n      if (ipProximityHeader && typeof ipProximityHeader === 'string') {\n        return ipProximityHeader.split(',').map(parseFloat);\n      } else {\n        return [999, 999]; // Alias for 'ip' in event logs\n      }\n    } else {\n      return proximity.split(',').map(Number);\n    }\n  } else {\n    return LngLat.convert(proximity).toArray();\n  }\n};\n\n/**\n * Converts SearchBox API options to event schema compatible options\n * @param options\n * @returns\n */\nconst transformSearchBoxAPIOptionsToEventSchema = (\n  options: SearchBoxOptions\n): EventPayloadOptionsData => {\n  const transformedOptions: EventPayloadOptionsData = {};\n\n  if (options.bbox) {\n    if (typeof options.bbox === 'string') {\n      transformedOptions.bbox = options.bbox.split(',').map(Number);\n    } else {\n      transformedOptions.bbox = LngLatBounds.convert(\n        options.bbox\n      ).toFlatArray();\n    }\n  }\n\n  if (options.proximity) {\n    transformedOptions.proximity = parseExplicitOrIPProximity(\n      options.proximity\n    );\n  }\n\n  if (options.country) {\n    transformedOptions.country = options.country.split(',');\n  }\n\n  if (options.language) {\n    transformedOptions.language = options.language.split(',');\n  }\n\n  if (options.types) {\n    if (typeof options.types === 'string') {\n      transformedOptions.types = options.types.split(',');\n    } else {\n      transformedOptions.types = Array.from(options.types);\n    }\n  }\n\n  if (options.limit) {\n    if (typeof options.limit === 'string') {\n      transformedOptions.limit = parseInt(options.limit);\n    } else {\n      transformedOptions.limit = options.limit;\n    }\n  }\n\n  return transformedOptions;\n};\n\n/**\n * Converts Geocoding API options to event schema compatible options\n * @param options\n * @param responseHeaders\n * @returns\n */\nconst transformGeocodingAPIOptionsToEventSchema = (\n  options: GeocodeOptions,\n  responseHeaders?: Headers\n): EventPayloadOptionsData => {\n  const transformedOptions: EventPayloadOptionsData = {};\n\n  if (options.bbox) {\n    if (typeof options.bbox === 'string') {\n      transformedOptions.bbox = options.bbox.split(',').map(Number);\n    } else {\n      transformedOptions.bbox = LngLatBounds.convert(\n        options.bbox\n      ).toFlatArray();\n    }\n  }\n\n  if (options.proximity) {\n    transformedOptions.proximity = parseExplicitOrIPProximity(\n      options.proximity,\n      responseHeaders\n    );\n  }\n\n  if (options.country) {\n    transformedOptions.country = options.country.split(',');\n  }\n\n  if (options.language) {\n    transformedOptions.language = options.language.split(',');\n  }\n\n  if (options.types) {\n    if (typeof options.types === 'string') {\n      transformedOptions.types = options.types.split(',');\n    } else {\n      transformedOptions.types = Array.from(options.types);\n    }\n  }\n\n  if (options.limit) {\n    if (typeof options.limit === 'string') {\n      transformedOptions.limit = parseInt(options.limit);\n    } else {\n      transformedOptions.limit = options.limit;\n    }\n  }\n\n  if (typeof options.autocomplete === 'boolean') {\n    transformedOptions.autocomplete = options.autocomplete;\n  }\n\n  if (options.worldview) {\n    transformedOptions.worldview = options.worldview;\n  }\n\n  if (options.permanent) {\n    transformedOptions.permanent = options.permanent;\n  }\n\n  return transformedOptions;\n};\n\n/**\n * Converts Address Autofill API options to event schema compatible options\n * @param options\n * @param responseHeaders\n * @returns\n */\nconst transformAddressAutofillAPIOptionsToEventSchema = (\n  options: AddressAutofillOptions,\n  responseHeaders?: Headers\n): EventPayloadOptionsData => {\n  const transformedOptions: EventPayloadOptionsData = {};\n\n  if (options.bbox) {\n    if (typeof options.bbox === 'string') {\n      transformedOptions.bbox = options.bbox.split(',').map(Number);\n    } else {\n      transformedOptions.bbox = LngLatBounds.convert(\n        options.bbox\n      ).toFlatArray();\n    }\n  }\n\n  if (options.proximity) {\n    transformedOptions.proximity = parseExplicitOrIPProximity(\n      options.proximity,\n      responseHeaders\n    );\n  }\n\n  if (options.country) {\n    transformedOptions.country = options.country.split(',');\n  }\n\n  if (options.language) {\n    transformedOptions.language = options.language.split(',');\n  }\n\n  if (options.limit) {\n    if (typeof options.limit === 'string') {\n      transformedOptions.limit = parseInt(options.limit);\n    } else {\n      transformedOptions.limit = options.limit;\n    }\n  }\n\n  if (options.streets !== undefined && options.streets !== null) {\n    if (typeof options.streets === 'string') {\n      transformedOptions.streets = options.streets === 'true';\n    } else {\n      transformedOptions.streets = options.streets;\n    }\n  }\n\n  return transformedOptions;\n};\n\n/**\n * Converts API-specific options to event schema compatible options\n * @param options API options\n * @param service Search service (SearchBox, Geocoding, AddressAutofill)\n * @param responseHeaders Response headers returned by the API\n * @returns\n */\nexport const transformApiOptionsForEventSchema = (\n  options: Options,\n  service: SEARCH_SERVICE,\n  responseHeaders?: Headers\n): EventPayloadOptionsData => {\n  switch (service) {\n    case SEARCH_SERVICE.SearchBox:\n      return transformSearchBoxAPIOptionsToEventSchema(\n        options as SearchBoxOptions\n      );\n    case SEARCH_SERVICE.Geocoding:\n      return transformGeocodingAPIOptionsToEventSchema(\n        options as GeocodeOptions,\n        responseHeaders\n      );\n    case SEARCH_SERVICE.AddressAutofill:\n      return transformAddressAutofillAPIOptionsToEventSchema(\n        options as AddressAutofillOptions,\n        responseHeaders\n      );\n  }\n};\n\n/**\n * Converts SearchBox API suggestions to event schema compatible suggestions\n * @param suggestions SearchBox API suggestions\n * @returns\n */\nconst transformSearchBoxAPISuggestionsToEventSchema = (\n  suggestions: SearchBoxSuggestion[]\n): EventPayloadSuggestionsData => {\n  return {\n    suggestionIds: suggestions.map((suggestion) => suggestion.mapbox_id || ''),\n    suggestionNames: suggestions.map((suggestion) => {\n      if (suggestion.feature_type === 'poi') {\n        return [suggestion.name, suggestion.full_address]\n          .filter(Boolean)\n          .join(', ');\n      } else if (suggestion.full_address) {\n        return suggestion.full_address; // addresses, places\n      } else {\n        return suggestion.name; // brand, category\n      }\n    }),\n    suggestionTypes: suggestions.map(\n      (suggestion) => suggestion.feature_type || ''\n    ),\n    suggestionSources: suggestions.map(() => 'mapbox') // In future, handle mixed sources (e.g. local/external)\n  };\n};\n\n/**\n * Converts Geocoding API suggestions to event schema compatible suggestions\n * @param suggestions Geocoding API suggestions\n * @returns\n */\nconst transformGeocodingAPISuggestionsToEventSchema = (\n  suggestions: GeocodeFeature[]\n): EventPayloadSuggestionsData => {\n  return {\n    suggestionIds: suggestions.map(\n      (suggestion) => suggestion.properties.mapbox_id || suggestion.id || ''\n    ),\n    suggestionNames: suggestions.map(\n      (suggestion) => suggestion.properties.full_address || ''\n    ),\n    suggestionTypes: suggestions.map(\n      (suggestion) => suggestion.properties.feature_type || ''\n    ),\n    suggestionSources: suggestions.map(() => 'mapbox') // In future, handle mixed sources (e.g. local/external)\n  };\n};\n\n/**\n * Converts Address Autofill API suggestions to event schema compatible suggestions\n * @param suggestions Address Autofill API suggestions\n * @returns\n */\nconst transformAddressAutofillAPISuggestionsToEventSchema = (\n  suggestions: AddressAutofillSuggestion[]\n): EventPayloadSuggestionsData => {\n  return {\n    suggestionIds: suggestions.map((suggestion) => suggestion.mapbox_id || ''),\n    suggestionNames: suggestions.map(\n      (suggestion) => suggestion.full_address || ''\n    ),\n    suggestionTypes: suggestions.map(\n      (suggestion) => suggestion.place_type?.[0] || ''\n    ),\n    suggestionSources: suggestions.map(() => 'mapbox') // In future, handle mixed sources (e.g. local/external)\n  };\n};\n\n/**\n * Converts API-specific suggestions to event schema compatible suggestions\n * @param suggestions API suggestions\n * @param service Search service (SearchBox, Geocoding, AddressAutofill)\n * @returns\n */\nexport const transformSuggestionsForEventSchema = (\n  suggestions: Suggestion[],\n  service: SEARCH_SERVICE\n): EventPayloadSuggestionsData => {\n  switch (service) {\n    case SEARCH_SERVICE.SearchBox:\n      return transformSearchBoxAPISuggestionsToEventSchema(\n        suggestions as SearchBoxSuggestion[]\n      );\n    case SEARCH_SERVICE.Geocoding:\n      return transformGeocodingAPISuggestionsToEventSchema(\n        suggestions as GeocodeFeature[]\n      );\n    case SEARCH_SERVICE.AddressAutofill:\n      return transformAddressAutofillAPISuggestionsToEventSchema(\n        suggestions as AddressAutofillSuggestion[]\n      );\n  }\n};\n\n/**\n * Get the search URL path based on the search service\n * @param service Search service (SearchBox, Geocoding, AddressAutofill)\n * @param queryString The search query string\n * @returns\n */\nexport const getSearchUrlPath = (\n  service: SEARCH_SERVICE,\n  queryString?: string\n): string => {\n  switch (service) {\n    case SEARCH_SERVICE.SearchBox:\n      return 'search/searchbox/v1/suggest';\n    case SEARCH_SERVICE.Geocoding: {\n      const isReverseQuery =\n        /^[ ]*(-?\\d{1,3}(\\.\\d{0,256})?)[, ]+(-?\\d{1,3}(\\.\\d{0,256})?)[ ]*$/.test(\n          queryString\n        );\n      return `search/geocode/v6/${isReverseQuery ? 'reverse' : 'forward'}`;\n    }\n    case SEARCH_SERVICE.AddressAutofill:\n      return 'autofill/v1/suggest';\n  }\n};\n","import { SEARCH_SERVICE } from '../utils/services';\nimport {\n  EventPayloadOptionsData,\n  Options,\n  Suggestion,\n  getSearchUrlPath,\n  transformApiOptionsForEventSchema,\n  transformSuggestionsForEventSchema\n} from './utils';\nimport { version as SDK_VERSION, name as SDK_NAME } from '../../package.json';\nimport mapboxgl from 'mapbox-gl';\n\ntype SearchEventType = 'search.start' | 'search.keystroke' | 'search.select';\n\ninterface SearchEventBasePayload {\n  // event metadata\n  event: SearchEventType; // REQUIRED\n  created: number; // REQUIRED\n  version?: string;\n  // environment info\n  userAgent?: string;\n  keyboardLocale?: string;\n  // session info\n  sessionIdentifier: string; // REQUIRED\n  // map info\n  mapZoom?: number;\n  mapCenterLng?: number;\n  mapCenterLat?: number;\n  // search config/options\n  country?: string[];\n  language?: string[];\n  bbox?: number[];\n  types?: string[];\n  endpoint?: string;\n  autocomplete?: boolean;\n  fuzzyMatch?: boolean;\n  proximity?: number[];\n  limit?: number;\n  routing?: boolean;\n  worldview?: string;\n  // request info\n  queryString: string; // REQUIRED\n}\n\ninterface SearchEventStartPayload extends SearchEventBasePayload {\n  event: 'search.start';\n}\n\ninterface SearchEventKeystrokePayload extends SearchEventBasePayload {\n  event: 'search.keystroke';\n  lastAction: string; // REQUIRED\n  path?: string;\n  streets?: boolean;\n  permanent?: boolean;\n}\n\ninterface SearchEventSelectPayload extends SearchEventBasePayload {\n  event: 'search.select';\n  resultIndex: number; // REQUIRED\n  resultPlaceName?: string;\n  resultId?: string;\n  path: string; // REQUIRED\n  streets?: boolean;\n  permanent?: boolean;\n  suggestionIds: string[]; // REQUIRED\n  suggestionNames?: string[];\n  suggestionTypes?: string[];\n  suggestionSources?: string[];\n  resultMapboxId?: string;\n}\n\ntype SearchEventPayload =\n  | SearchEventStartPayload\n  | SearchEventKeystrokePayload\n  | SearchEventSelectPayload;\n\ninterface SessionTokenOptions {\n  sessionToken: string;\n}\n\ninterface AccessTokenOptions {\n  accessToken: string;\n}\n\ntype EventOptions = Options & SessionTokenOptions & AccessTokenOptions;\n\ninterface SearchEventArgs {\n  queryString: string;\n  lastInput?: string;\n  selectedIndex?: number;\n  suggestions?: Suggestion[];\n  options: EventOptions;\n  map?: mapboxgl.Map;\n  responseHeaders?: Headers;\n}\n\nexport class MapboxEventManager {\n  #origin = 'https://api.mapbox.com';\n  #endpoint = 'events/v2';\n  #access_token: string;\n  #userAgent: string;\n  #locale = navigator.language || null;\n  #eventQueue: SearchEventPayload[] = [];\n\n  // keep some state to deduplicate requests if necessary\n  #lastSentInput = '';\n  #lastSentIndex = 0;\n\n  // track if session is new or continuing\n  #fresh = true;\n\n  #flushInterval = 1000;\n  #maxQueueSize = 100;\n  #timer: NodeJS.Timeout;\n\n  #service: SEARCH_SERVICE;\n\n  constructor(service: SEARCH_SERVICE) {\n    this.#service = service;\n    this.#userAgent = this.#getUserAgent();\n    this.#timer = setTimeout(this.#flush, this.#flushInterval);\n  }\n\n  /**\n   * Send a search.start event to the mapbox events service\n   * This turnstile event marks when a user starts a new search\n   * @param queryString The value of the search query string\n   * @param options API options\n   * @param map A mapbox-gl map instance\n   * @param responseHeaders API response headers\n   * @returns\n   */\n  start = (\n    queryString: string,\n    options: EventOptions,\n    map?: mapboxgl.Map,\n    responseHeaders?: Headers\n  ): void => {\n    this.#access_token = options.accessToken;\n\n    const payload = this.#getEventPayload('search.start', {\n      queryString,\n      options,\n      map,\n      responseHeaders\n    }) as SearchEventStartPayload;\n    if (!payload) return; // reject malformed event\n    this.#push(payload);\n  };\n\n  /**\n   * Send a search.keystroke event to the mapbox events service\n   * This event records each time the input is changed\n   * @param queryString The value of the search query string\n   * @param lastInput The last character(s) typed by the user\n   * @param options API options\n   * @param map A mapbox-gl map instance\n   * @param responseHeaders API response headers\n   * @returns\n   */\n  input = (\n    queryString: string,\n    lastInput: string,\n    options: EventOptions,\n    map?: mapboxgl.Map,\n    responseHeaders?: Headers\n  ): void => {\n    this.#access_token = options.accessToken;\n\n    if (this.#fresh) {\n      this.start(queryString, options, map, responseHeaders);\n      this.#fresh = false;\n    }\n\n    // pass invalid event\n    if (!lastInput) return;\n\n    const payload = this.#getEventPayload('search.keystroke', {\n      lastInput,\n      queryString,\n      options,\n      map,\n      responseHeaders\n    }) as SearchEventKeystrokePayload;\n    if (!payload) return; // reject malformed event\n    this.#push(payload);\n  };\n\n  /**\n   * Send a search.select event to the mapbox events service\n   * This event marks the array index of the item selected by the user out of the array of possible suggestions\n   * @param queryString The value of the search query string\n   * @param selectedIndex The index of the selected item in the suggestions array\n   * @param suggestions The array of suggestions presented to the user\n   * @param options API options\n   * @param map A mapbox-gl map instance\n   * @param responseHeaders API response headers\n   * @returns\n   */\n  select = (\n    queryString: string,\n    selectedIndex: number,\n    suggestions: Suggestion[],\n    options: EventOptions,\n    map?: mapboxgl.Map,\n    responseHeaders?: Headers\n  ): void => {\n    this.#access_token = options.accessToken;\n\n    const payload = this.#getEventPayload('search.select', {\n      queryString,\n      selectedIndex,\n      suggestions,\n      options,\n      map,\n      responseHeaders\n    }) as SearchEventSelectPayload;\n\n    if (!payload) return; // reject malformed event\n    if (\n      (payload.resultIndex === this.#lastSentIndex &&\n        payload.queryString === this.#lastSentInput) ||\n      payload.resultIndex === -1\n    ) {\n      // don't log duplicate events if the user re-selected the same feature on the same search\n      return;\n    }\n    this.#lastSentIndex = payload.resultIndex;\n    this.#lastSentInput = payload.queryString;\n    this.#push(payload);\n  };\n\n  /**\n   * End an event session and start a new one\n   */\n  clear = (): void => {\n    this.#fresh = true;\n    this.#lastSentInput = '';\n    this.#lastSentIndex = 0;\n\n    this.#flush();\n  };\n\n  /**\n   * Send an event to the events service\n   * @param payload Event payload\n   */\n  #send = (payload: SearchEventPayload[]): void => {\n    const eventUrl = `${this.#origin}/${this.#endpoint}?access_token=${\n      this.#access_token\n    }`;\n    const requestOptions = this.#getRequestOptions(payload);\n    try {\n      fetch(eventUrl, requestOptions);\n    } catch (err) {\n      this.#handleError(err);\n    }\n  };\n\n  /**\n   * Get http request options\n   * @param payload Event payload\n   * @returns\n   */\n  #getRequestOptions = (payload: SearchEventPayload[]): RequestInit => {\n    if (!Array.isArray(payload)) payload = [payload];\n    const options = {\n      // events must be sent with POST\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload) // events are arrays\n    };\n    return options;\n  };\n\n  /**\n   * * Handle an error that occurred while making a request\n   * @param err\n   */\n  #handleError = (err): void => {\n    console.log(err);\n  };\n\n  /**\n   * Get the event payload to send to the events service\n   * @param event the name of the event to send to the events service. Valid options are 'search.start', 'search.keystroke', and 'search.select'.\n   * @param eventArgs Additional arguments needed for certain event types\n   * @returns\n   */\n  #getEventPayload = (\n    event: SearchEventType,\n    eventArgs: SearchEventArgs\n  ): SearchEventPayload => {\n    // Make sure required arguments are present for certain event types\n    if (\n      (event === 'search.select' &&\n        !(\n          typeof eventArgs.selectedIndex === 'number' || eventArgs.suggestions\n        )) ||\n      (event === 'search.keystroke' && !eventArgs.lastInput)\n    ) {\n      return null;\n    }\n\n    const eventApiOptions = transformApiOptionsForEventSchema(\n      eventArgs.options,\n      this.#service,\n      eventArgs.responseHeaders\n    );\n\n    const payload = this.#createBasePayload(\n      event,\n      eventArgs,\n      eventApiOptions\n    ) as SearchEventPayload;\n\n    if (event === 'search.keystroke') {\n      this.#applySearchEventKeystrokePayload(\n        payload as SearchEventKeystrokePayload,\n        eventArgs,\n        eventApiOptions\n      );\n    } else if (event === 'search.select') {\n      this.#applySearchEventSelectPayload(\n        payload as SearchEventSelectPayload,\n        eventArgs,\n        eventApiOptions\n      );\n    }\n\n    // Finally, validate that required properties are present for API compatibility\n    if (!this.#validatePayload(payload)) {\n      return null;\n    }\n\n    return payload;\n  };\n\n  /**\n   * Create a base payload for all event types\n   * @param event\n   * @param eventArgs\n   * @param eventApiOptions\n   * @returns\n   */\n  #createBasePayload = (\n    event: SearchEventType,\n    eventArgs: SearchEventArgs,\n    eventApiOptions: EventPayloadOptionsData\n  ): SearchEventBasePayload => {\n    let payload: SearchEventBasePayload = {\n      event,\n      version: this.#getEventSchemaVersion(event),\n      created: +new Date(),\n      sessionIdentifier: eventArgs.options.sessionToken,\n      userAgent: this.#userAgent,\n      keyboardLocale: this.#locale,\n      queryString: eventArgs.queryString\n    };\n\n    // add API option fields\n    if (eventApiOptions) {\n      payload = {\n        ...payload,\n        ...eventApiOptions\n      };\n    }\n\n    // remove fields incompatible with `search.start` schema\n    if (event === 'search.start') {\n      for (const field of ['streets', 'permanent']) {\n        delete payload[field];\n      }\n    }\n\n    // add map fields\n    if (eventArgs.map) {\n      const zoom = eventArgs.map.getZoom() || undefined;\n      const center = eventArgs.map.getCenter();\n      payload = {\n        ...payload,\n        mapZoom: zoom,\n        mapCenterLat: center.lat,\n        mapCenterLng: center.lng\n      };\n    }\n\n    return payload;\n  };\n\n  #applySearchEventKeystrokePayload = (\n    payload: SearchEventKeystrokePayload,\n    eventArgs: SearchEventArgs,\n    eventOptions: EventPayloadOptionsData\n  ): void => {\n    switch (this.#service) {\n      case SEARCH_SERVICE.AddressAutofill:\n        eventOptions.streets && (payload.streets = eventOptions.streets);\n        break;\n      case SEARCH_SERVICE.Geocoding:\n        eventOptions.permanent && (payload.permanent = eventOptions.permanent);\n        break;\n    }\n    payload.path = getSearchUrlPath(this.#service, eventArgs.queryString);\n    payload.lastAction = eventArgs.lastInput;\n  };\n\n  #applySearchEventSelectPayload = (\n    payload: SearchEventSelectPayload,\n    eventArgs: SearchEventArgs,\n    eventOptions: EventPayloadOptionsData\n  ): void => {\n    switch (this.#service) {\n      case SEARCH_SERVICE.AddressAutofill:\n        eventOptions.streets && (payload.streets = eventOptions.streets);\n        break;\n      case SEARCH_SERVICE.Geocoding:\n        eventOptions.permanent && (payload.permanent = eventOptions.permanent);\n        break;\n    }\n\n    payload.path = getSearchUrlPath(this.#service, eventArgs.queryString);\n\n    const { selectedIndex, suggestions } = eventArgs;\n\n    if (suggestions && suggestions.length > 0) {\n      const eventSchemaSuggestions = transformSuggestionsForEventSchema(\n        suggestions,\n        this.#service\n      );\n\n      // selected feature attributes\n      payload.resultIndex = selectedIndex;\n      payload.resultPlaceName =\n        eventSchemaSuggestions.suggestionNames[selectedIndex];\n      payload.resultId = eventSchemaSuggestions.suggestionIds[selectedIndex];\n      if (payload.resultId.startsWith('dXJuOm1ie')) {\n        payload.resultMapboxId = payload.resultId;\n      }\n\n      // suggestion list attributes\n      payload.suggestionIds = eventSchemaSuggestions.suggestionIds;\n      payload.suggestionNames = eventSchemaSuggestions.suggestionNames;\n      payload.suggestionTypes = eventSchemaSuggestions.suggestionTypes;\n      payload.suggestionSources = eventSchemaSuggestions.suggestionSources;\n    }\n  };\n\n  /**\n   * Get a user agent string to send with the request to the events service\n   * @returns\n   */\n  #getUserAgent = (): string => {\n    return `mapbox.${SDK_NAME.split('/')[1]}.${SDK_VERSION}.${\n      navigator.userAgent\n    }`;\n  };\n\n  /**\n   * Get the correct schema version for the event\n   * @param event Name of the event\n   * @returns\n   */\n  #getEventSchemaVersion = (event: SearchEventType): string => {\n    if (['search.keystroke', 'search.select'].includes(event)) {\n      return '2.2';\n    } else {\n      return '2.0';\n    }\n  };\n\n  /**\n   * Checks if a payload has all the required properties for the event type\n   * @param payload Event payload\n   * @returns\n   */\n  #validatePayload = (payload: SearchEventPayload): boolean => {\n    if (!payload || !payload.event) return false;\n\n    const searchStartRequiredProps = [\n      'event',\n      'created',\n      'sessionIdentifier',\n      'queryString'\n    ];\n    const searchKeystrokeRequiredProps = [\n      'event',\n      'created',\n      'sessionIdentifier',\n      'queryString',\n      'lastAction'\n    ];\n    const searchSelectRequiredProps = [\n      'event',\n      'created',\n      'sessionIdentifier',\n      'queryString',\n      'resultIndex',\n      'path',\n      'suggestionIds'\n    ];\n\n    const event = payload.event;\n    if (event === 'search.start') {\n      return this.#objectHasRequiredProps(payload, searchStartRequiredProps);\n    } else if (event === 'search.keystroke') {\n      return this.#objectHasRequiredProps(\n        payload,\n        searchKeystrokeRequiredProps\n      );\n    } else if (event === 'search.select') {\n      return this.#objectHasRequiredProps(payload, searchSelectRequiredProps);\n    }\n\n    return true;\n  };\n\n  /**\n   * Checks if an object has all the required properties\n   * @param obj Payload object\n   * @param requiredProps Array of required properties to check for\n   * @returns\n   */\n  #objectHasRequiredProps = (\n    obj: SearchEventPayload,\n    requiredProps: string[]\n  ): boolean => {\n    return requiredProps.every((prop) => {\n      if (prop === 'queryString') {\n        return typeof obj[prop] === 'string' && obj[prop].length > 0;\n      }\n      return obj[prop] !== undefined;\n    });\n  };\n\n  /**\n   * Flush out the event queue by sending events to the events service\n   */\n  #flush = (): void => {\n    if (this.#eventQueue.length > 0 && this.#access_token) {\n      this.#send(this.#eventQueue);\n      this.#eventQueue = [];\n    }\n    // //reset the timer\n    if (this.#timer) clearTimeout(this.#timer);\n    if (this.#flushInterval)\n      this.#timer = setTimeout(this.#flush, this.#flushInterval);\n  };\n\n  /**\n   * Push event into the pending queue\n   * @param event the event to send to the events service\n   * @param forceFlush indicates that the event queue should be flushed after adding this event regardless of size of the queue\n   */\n  #push = (event: SearchEventPayload, forceFlush?: boolean): void => {\n    this.#eventQueue.push(event);\n    if (this.#eventQueue.length >= this.#maxQueueSize || forceFlush) {\n      this.#flush();\n    }\n  };\n\n  /**\n   * Flush any remaining events from the queue before it is removed\n   */\n  remove = (): void => {\n    this.#flush();\n  };\n}\n","import {\n  featureToSuggestion,\n  LngLatBounds,\n  SearchSession,\n  SearchBoxCore,\n  SearchBoxOptions,\n  SearchBoxRetrieveResponse,\n  SearchBoxSuggestion,\n  SearchBoxSuggestionResponse,\n  SearchBoxFeatureSuggestion\n} from '@mapbox/search-js-core';\nimport mapboxgl from 'mapbox-gl';\nimport subtag from 'subtag';\n\nimport {\n  MapboxSearchListbox,\n  SelectionEventDetail\n} from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { tryParseJSON } from '../utils';\nimport { bboxViewport, FLY_TO_SPEED, getMaxZoom } from '../utils/map';\n\nimport { Theme, getIcon, getThemeCSS } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { SEARCHBOX_TEMPLATE } from '../constants';\n\nimport style from '../style.css';\nimport { PopoverOptions } from '../utils/popover';\nimport { createAriaLiveElement } from '../utils/aria';\nimport { bindElements } from '../utils/dom';\nimport { SEARCH_SERVICE } from '../utils/services';\nimport localization from '../utils/localization';\nimport { InputEventDetail } from '../utils/listbox';\nimport { MapboxEventManager } from '../events/MapboxEventManager';\n\n/**\n * Proximity is designed for local scale. If the user is looking at the whole world,\n * it doesn't make sense to factor in the arbitrary center of the map.\n */\nconst MAX_ZOOM = 9;\n\ntype Binding = {\n  /**\n   * Wrapper around the entire SearchBox component.\n   */\n  SearchBox: HTMLElement;\n  /**\n   * Container for search icon preceding input\n   */\n  SearchIcon: HTMLDivElement;\n  /**\n   * The input element accepting search text\n   */\n  Input: HTMLInputElement;\n  /**\n   * Button element used to clear the input element of text\n   */\n  ClearBtn: HTMLButtonElement;\n  /**\n   * Animated loading icon triggered by a keystroke\n   */\n  LoadingIcon: HTMLDivElement;\n};\n\nexport type MapboxSearchListboxSearchType =\n  MapboxSearchListbox<SearchBoxSuggestion>;\n\ntype SearchEventTypes = {\n  /**\n   * Fired when the user is typing and is provided a list of suggestions.\n   *\n   * The underlying response from {@link SearchBoxCore} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {SearchBoxSuggestionResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<SearchBoxSuggestionResponse>;\n  /**\n   * Fired when {@link SearchBoxCore} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Error}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion.\n   *\n   * The underlying response from {@link SearchBoxCore} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {SearchBoxRetrieveResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<SearchBoxRetrieveResponse>;\n  /**\n   * Fired when the user has changed the `<input>` text.\n   *\n   * The new input value is passed as the event's detail.\n   *\n   * @event input\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {string}\n   * @example\n   * ```typescript\n   * search.addEventListener('input', (event) => {\n   *   if (e.target !== e.currentTarget) return;\n   *   const searchText = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  input: MapboxHTMLEvent<string>;\n  /**\n   * Fired when the user has cleared the <input> box,\n   * either by deleting all text or clicking the \"Clear\" icon.\n   *\n   * @event clear\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * search.addEventListener('clear', () => {\n   *   console.log('search box cleared');\n   *   // ...\n   * });\n   * ```\n   */\n  clear: MapboxHTMLEvent<unknown>;\n};\n\n/**\n * `MapboxSearchBox`, also available as the element `<mapbox-search-box>`,\n * is an element that lets you search for places, addresses, and landmarks using\n * the [Mapbox Search Box API](https://docs.mapbox.com/api/search/search-box/).\n *\n * It can control a [Mapbox GL JS](https://docs.mapbox.com/mapbox-gl-js/guides/) map\n * to zoom to the selected result.\n *\n * Additionally, `MapboxSearchBox` implements the [IControl](https://www.mapbox.com/mapbox-gl-js/api/markers/#icontrol)\n * interface.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * @class MapboxSearchBox\n * @example\n * ```typescript\n * const search = new MapboxSearchBox();\n * search.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\n * map.addControl(search);\n * ```\n * @example\n * <mapbox-search-box\n *   access-token=\"YOUR_MAPBOX_ACCESS_TOKEN\"\n *   proximity=\"0,0\"\n * >\n * </mapbox-search-box>\n */\nexport class MapboxSearchBox\n  extends HTMLScopedElement<SearchEventTypes>\n  implements mapboxgl.IControl\n{\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxSearchBox#attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    // Theming.\n    'theme',\n    'popover-options',\n    'placeholder',\n    // Underlying Search Box API options.\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'navigation-profile',\n    'origin',\n    'proximity',\n    'eta-type',\n    'types'\n  ];\n\n  #binding: Binding;\n\n  #search = new SearchBoxCore({});\n  #session = new SearchSession<\n    SearchBoxOptions,\n    SearchBoxSuggestion,\n    SearchBoxSuggestionResponse,\n    SearchBoxRetrieveResponse\n  >(this.#search);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * search.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#search.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#search.accessToken = newToken;\n  }\n\n  /**\n   * The value of the input element.\n   *\n   * @name value\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * console.log(search.value);\n   * ```\n   */\n  get value(): string {\n    return this.#input.value;\n  }\n  set value(newValue: string) {\n    this.#input.value = newValue || '';\n  }\n\n  #map: mapboxgl.Map | null = null;\n\n  #input: HTMLInputElement;\n  #listbox: MapboxSearchListboxSearchType = new MapboxSearchListbox();\n\n  #eventManager = new MapboxEventManager(SEARCH_SERVICE.SearchBox);\n\n  /**\n   * The `<input>` element wrapped by the autofill component.\n   *\n   * @name input\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {HTMLInputElement}\n   */\n  get input(): HTMLInputElement {\n    return this.#input;\n  }\n\n  protected override get template(): HTMLTemplateElement {\n    return SEARCHBOX_TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected override get templateUserStyle(): string {\n    return getThemeCSS('.SearchBox', this.#listbox.theme);\n  }\n\n  /**\n   * Options to pass to the underlying {@link SearchBoxCore} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {SearchBoxOptions}\n   * @example\n   * ```typescript\n   * search.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  options: Partial<SearchBoxOptions> = {};\n\n  /**\n   * The {@link Theme} to use for styling the suggestion box and search box.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * search.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   },\n   *   cssText: \".Input:active { opacity: 0.9; }\"\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.SearchBox', theme));\n    this.#listbox.updatePopover();\n\n    const { SearchIcon } = this.#binding;\n    SearchIcon.innerHTML = getIcon('search', theme);\n  }\n\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   *\n   * @name popoverOptions\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {PopoverOptions}\n   * @example\n   * ```typescript\n   * search.popoverOptions = {\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * };\n   * ```\n   */\n  get popoverOptions(): Partial<PopoverOptions> {\n    return this.#listbox.popoverOptions;\n  }\n  set popoverOptions(newOptions: Partial<PopoverOptions>) {\n    this.#listbox.popoverOptions = newOptions;\n  }\n\n  #getDefaultPlaceholder(): string {\n    if (this.options.language) {\n      const firstLanguage = this.options.language.split(',')[0];\n      const language = subtag.language(firstLanguage);\n      const localizedValue = localization.placeholder[language];\n      if (localizedValue) return localizedValue;\n    }\n    return 'Search';\n  }\n\n  #placeholder: string;\n\n  /**\n   * The input element's placeholder text. The default value may be localized if {@link SearchBoxOptions#language} is set.\n   *\n   * @name placeholder\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {string}\n   */\n  get placeholder(): string {\n    return this.#placeholder || this.#getDefaultPlaceholder();\n  }\n\n  set placeholder(text: string) {\n    this.#placeholder = text;\n    if (this.#input) {\n      this.#input.placeholder = this.placeholder;\n      this.#input.setAttribute('aria-label', this.placeholder);\n    }\n  }\n\n  #handleSuggest = (result: SearchBoxSuggestionResponse): void => {\n    this.#setActionIcons();\n\n    this.#listbox.handleSuggest(result?.suggestions || null);\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('suggest', result));\n  };\n\n  #handleSuggestError = (error: Error): void => {\n    this.#setActionIcons();\n\n    this.#listbox.handleError();\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('suggesterror', error));\n  };\n\n  #handleRetrieve = (result: SearchBoxRetrieveResponse): void => {\n    this.#setActionIcons();\n\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('retrieve', result));\n\n    const featureCollection = result;\n    if (!featureCollection || !featureCollection.features.length) {\n      return;\n    }\n\n    // Set value of the input.\n    const suggestion = featureToSuggestion(featureCollection.features[0]);\n    this.#input.value = suggestion.name;\n\n    const map = this.#map;\n    if (!map) {\n      return;\n    }\n\n    const feature = featureCollection.features[0];\n\n    if (!feature) {\n      return;\n    }\n\n    const placeType = feature.properties.feature_type;\n\n    const bounds = feature.properties.bbox;\n    if (bounds) {\n      map.flyTo(bboxViewport(map, LngLatBounds.convert(bounds).toFlatArray()));\n    } else {\n      const center = feature.geometry.coordinates as mapboxgl.LngLatLike;\n      const zoom = getMaxZoom(placeType);\n\n      map.flyTo({\n        center,\n        zoom,\n        speed: FLY_TO_SPEED\n      });\n    }\n\n    // Add marker to map\n    if (this.marker && this.mapboxgl) {\n      this.#handleMarker(feature);\n    }\n  };\n\n  #mapMarker: mapboxgl.Marker;\n\n  /**\n   * Handle the removal of a feature marker\n   */\n  #removeMarker = (): void => {\n    if (this.#mapMarker) {\n      this.#mapMarker.remove();\n      this.#mapMarker = null;\n    }\n  };\n\n  /**\n   * Handle the placement of a marker for the selected feature\n   */\n  #handleMarker = (feature: SearchBoxFeatureSuggestion | null): void => {\n    // clean up any old marker that might be present\n    if (!this.#map) {\n      return;\n    }\n    this.#removeMarker();\n\n    if (!feature) return;\n\n    const defaultMarkerOptions = {\n      color: '#4668F2'\n    };\n    const markerOptions = {\n      ...defaultMarkerOptions,\n      ...(typeof this.marker === 'object' && this.marker)\n    };\n    this.#mapMarker = new this.mapboxgl.Marker(markerOptions);\n    if (\n      feature.geometry &&\n      feature.geometry.type &&\n      feature.geometry.type === 'Point' &&\n      feature.geometry.coordinates\n    ) {\n      this.#mapMarker\n        .setLngLat(feature.geometry.coordinates as mapboxgl.LngLatLike)\n        .addTo(this.#map);\n    }\n  };\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string is returned, no search request will be performed.\n   *\n   * @name interceptSearch\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * Enable search only when the input value length is more than 3 characters.\n   * ```typescript\n   * search.interceptSearch = (val) => val?.length > 3 ? val : null;\n   * ```\n   */\n  interceptSearch: (val: string) => string = null;\n\n  #onHandleInput = (e: MapboxHTMLEvent<InputEventDetail>): void => {\n    // Manually bubble up the event as a basic input event.\n    this.dispatchEvent(\n      new MapboxHTMLEvent<string>('input', e.detail.inputText)\n    );\n\n    const { lastInput, inputText } = e.detail;\n\n    // Clear text, suggestions, markers, etc. if empty string\n    if (!inputText) {\n      this.#handleClear();\n      return;\n    }\n\n    const alteredText = this.interceptSearch && this.interceptSearch(inputText);\n\n    const searchText = this.interceptSearch ? alteredText : inputText;\n\n    if (this.interceptSearch && !alteredText) {\n      this.#listbox.hideResults();\n      return;\n    }\n\n    this.#session.suggest(searchText, this.options);\n    this.#eventManager.input(\n      searchText,\n      lastInput,\n      {\n        ...this.options,\n        sessionToken: this.#session.sessionToken,\n        accessToken: this.accessToken\n      },\n      this.#map\n    );\n\n    this.#setActionIcons(true);\n  };\n\n  #onHandleSelect = (\n    e: MapboxHTMLEvent<SelectionEventDetail<SearchBoxSuggestion>>\n  ): void => {\n    const { suggestion, selectedIndex } = e.detail;\n    this.#session.retrieve(suggestion, this.options);\n    this.#eventManager.select(\n      this.value,\n      selectedIndex,\n      this.#listbox.suggestions,\n      {\n        ...this.options,\n        sessionToken: this.#session.sessionToken,\n        accessToken: this.accessToken\n      },\n      this.#map\n    );\n\n    this.#setActionIcons(true);\n  };\n\n  #onHandleBlur = (): void => {\n    // Abort any in-progress operations.\n    this.#session.abort();\n  };\n\n  #setActionIcons = (loading = false): void => {\n    if (loading) {\n      this.#binding.ClearBtn.style.display = 'none';\n      this.#binding.LoadingIcon.style.display = 'block';\n    } else {\n      this.#binding.LoadingIcon.style.display = 'none';\n      this.#binding.ClearBtn.style.display = this.value ? 'block' : 'none';\n    }\n  };\n\n  #handleClear = (): void => {\n    this.value = '';\n    this.#setActionIcons();\n    this.#handleMarker(null);\n    this.#listbox.handleSuggest(null);\n\n    this.#eventManager.clear();\n    this.#session.incrementSession();\n\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('clear'));\n  };\n\n  /** @section {Map settings} */\n\n  /**\n   * A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if {@link MapboxSearchBox#marker} is `true`.\n   *\n   * @name mapboxgl\n   * @instance\n   * @memberof MapboxSearchBox\n   */\n  mapboxgl: typeof mapboxgl;\n\n  /**\n   * If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that {@link MapboxSearchBox#mapboxgl} also be set.\n   *\n   * @name marker\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {boolean | mapboxgl.MarkerOptions}\n   * @example\n   * ```typescript\n   * search.marker = {\n   *   color: 'red',\n   *   draggable: true\n   * };\n   * ```\n   */\n  marker: boolean | mapboxgl.MarkerOptions = true;\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      SearchBox: '.SearchBox',\n      SearchIcon: '.SearchIcon',\n      Input: '.Input',\n      ClearBtn: '.ClearBtn',\n      LoadingIcon: '.LoadingIcon'\n    });\n\n    // Initialize theme if not set before connectedCallback\n    this.theme = { ...this.theme };\n\n    const { Input, ClearBtn } = this.#binding;\n\n    this.#input = Input;\n    this.#listbox.input = Input;\n    this.#listbox.searchService = SEARCH_SERVICE.SearchBox;\n\n    this.#listbox.addEventListener('input', this.#onHandleInput);\n    this.#listbox.addEventListener('select', this.#onHandleSelect);\n    this.#listbox.addEventListener('blur', this.#onHandleBlur);\n\n    this.#session.addEventListener('suggest', this.#handleSuggest);\n    this.#session.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.addEventListener('retrieve', this.#handleRetrieve);\n\n    ClearBtn.addEventListener('click', this.#handleClear);\n\n    this.placeholder = this.#placeholder;\n\n    this.parentElement.appendChild(this.#listbox);\n\n    if (Input) {\n      // Remove any existing aria-live element that may be left over from, e.g., cloning the node\n      if (Input.previousElementSibling.hasAttribute('aria-live')) {\n        Input.previousElementSibling.remove();\n      }\n      Input.insertAdjacentElement(\n        'beforebegin',\n        createAriaLiveElement(this.#listbox.dataSeed)\n      );\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n    this.#listbox.input = null;\n\n    this.#listbox.removeEventListener('input', this.#onHandleInput);\n    this.#listbox.removeEventListener('select', this.#onHandleSelect);\n    this.#listbox.removeEventListener('blur', this.#onHandleBlur);\n\n    this.#session.removeEventListener('suggest', this.#handleSuggest);\n    this.#session.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.removeEventListener('retrieve', this.#handleRetrieve);\n\n    this.#eventManager.remove();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#search.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    if (name === 'popover-options') {\n      this.popoverOptions = tryParseJSON(newValue);\n      return;\n    }\n\n    if (name === 'placeholder') {\n      this.placeholder = newValue;\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.options[optionName];\n    }\n\n    // Otherwise, assume it's a Search Box API option.\n    this.options[optionName] = newValue;\n\n    if (optionName === 'language') {\n      this.placeholder = this.#placeholder;\n    }\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n\n  /**\n   * Sets the input text and triggers a search programmatically\n   */\n  search(text: string): void {\n    this.value = text;\n    const payload: InputEventDetail = {\n      lastInput: text,\n      inputText: text\n    };\n    this.#onHandleInput(new MapboxHTMLEvent('input', payload));\n  }\n\n  #handleMoveEnd = (): void => {\n    const map = this.#map;\n    const options = { ...this.options };\n\n    if (map.getZoom() <= MAX_ZOOM) {\n      delete options.proximity;\n      this.options = options;\n\n      return;\n    }\n\n    const center = map.getCenter();\n    this.options = {\n      ...options,\n      proximity: center\n    };\n  };\n\n  /** @section {Map binding} */\n\n  /**\n   * Connects the search box to a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map),\n   * which handles both setting proximity and zoom after a suggestion click.\n   *\n   * @example\n   * ```typescript\n   * const search = new MapboxSearchBox();\n   * search.bindMap(map);\n   * ```\n   */\n  bindMap(map: mapboxgl.Map): void {\n    if (this.#map) {\n      this.#map.off('moveend', this.#handleMoveEnd);\n    }\n\n    if (map) {\n      map.on('moveend', this.#handleMoveEnd);\n    }\n\n    this.#map = map;\n  }\n\n  /**\n   * Unbinds the search box from a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map).\n   */\n  unbindMap(): void {\n    this.bindMap(null);\n  }\n\n  // IControl interface.\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onAdd(map: mapboxgl.Map): HTMLElement {\n    this.bindMap(map);\n    this.remove();\n\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl';\n    container.style.width = '300px';\n    container.appendChild(this);\n\n    return container;\n  }\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onRemove(): void {\n    this.remove();\n    this.unbindMap();\n    this.#removeMarker();\n  }\n\n  getDefaultPosition(): string {\n    return 'top-right';\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxSearchBox: typeof MapboxSearchBox;\n  }\n}\n\nwindow.MapboxSearchBox = MapboxSearchBox;\n\nif (!window.customElements.get('mapbox-search-box')) {\n  customElements.define('mapbox-search-box', MapboxSearchBox);\n}\n","/**\n * Localized values for the placeholder string\n */\nconst placeholder = {\n  //  list drawn from https://docs.mapbox.com/api/search/#language-coverage\n  de: 'Suche', //  german\n  it: 'Ricerca', // italian\n  en: 'Search', //  english\n  nl: 'Zoeken', // dutch\n  fr: 'Chercher', // french\n  ca: 'Cerca', // catalan\n  he: 'לחפש', // hebrew\n  ja: 'サーチ', // japanese\n  lv: 'Meklēt', // latvian\n  pt: 'Procurar', // portuguese\n  sr: 'Претрага', // serbian\n  zh: '搜索', // chinese-simplified\n  cs: 'Vyhledávání', // czech\n  hu: 'Keresés', // hungarian\n  ka: 'ძიება', //  georgian\n  nb: 'Søke', // norwegian\n  sk: 'Vyhľadávanie', // slovak\n  th: 'ค้นหา', // thai\n  fi: 'Hae', // finnish\n  is: 'Leita', // icelandic\n  ko: '수색', // korean\n  pl: 'Szukaj', // polish\n  sl: 'Iskanje', // slovenian\n  fa: 'جستجو', // persian(aka farsi)\n  ru: 'Поиск' // russian\n};\n\nexport default { placeholder };\n","import {\n  LngLatBounds,\n  SearchSession,\n  GeocodingCore,\n  GeocodingOptions,\n  GeocodingFeature,\n  GeocodingResponse\n} from '@mapbox/search-js-core';\nimport mapboxgl from 'mapbox-gl';\nimport subtag from 'subtag';\n\nimport {\n  MapboxSearchListbox,\n  SelectionEventDetail\n} from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { tryParseJSON } from '../utils';\nimport { bboxViewport, FLY_TO_SPEED, getMaxZoom } from '../utils/map';\n\nimport { Theme, getIcon, getThemeCSS } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { GEOCODER_TEMPLATE } from '../constants';\n\nimport style from '../style.css';\nimport { PopoverOptions } from '../utils/popover';\nimport { createAriaLiveElement } from '../utils/aria';\nimport { bindElements } from '../utils/dom';\nimport { SEARCH_SERVICE } from '../utils/services';\nimport localization from '../utils/localization';\nimport { InputEventDetail } from '../utils/listbox';\nimport { MapboxEventManager } from '../events/MapboxEventManager';\n\n/**\n * Proximity is designed for local scale. If the user is looking at the whole world,\n * it doesn't make sense to factor in the arbitrary center of the map.\n */\nconst MAX_ZOOM = 9;\n\ntype Binding = {\n  /**\n   * Wrapper around the entire Geocoder component.\n   */\n  Geocoder: HTMLElement;\n  /**\n   * Container for search icon preceding input\n   */\n  SearchIcon: HTMLDivElement;\n  /**\n   * The input element accepting search text\n   */\n  Input: HTMLInputElement;\n  /**\n   * Button element used to clear the input element of text\n   */\n  ClearBtn: HTMLButtonElement;\n  /**\n   * Animated loading icon triggered by a keystroke\n   */\n  LoadingIcon: HTMLDivElement;\n};\n\nexport type MapboxSearchListboxSearchType =\n  MapboxSearchListbox<GeocodingFeature>;\n\ntype SearchEventTypes = {\n  /**\n   * Fired when the user is typing and is provided a list of suggestions.\n   *\n   * The underlying response from {@link GeocodingCore} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {GeocodingResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<GeocodingResponse>;\n  /**\n   * Fired when {@link GeocodingCore} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {Error}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion.\n   *\n   * The underlying response from {@link GeocodingCore} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {GeocodingFeature}\n   * @example\n   * ```typescript\n   * search.addEventListener('retrieve', (event) => {\n   *   const feature = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<GeocodingFeature>;\n  /**\n   * Fired when the user has changed the `<input>` text.\n   *\n   * The new input value is passed as the event's detail.\n   *\n   * @event input\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {string}\n   * @example\n   * ```typescript\n   * search.addEventListener('input', (event) => {\n   *   if (e.target !== e.currentTarget) return;\n   *   const searchText = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  input: MapboxHTMLEvent<string>;\n  /**\n   * Fired when the user has cleared the <input> box,\n   * either by deleting all text or clicking the \"Clear\" icon.\n   *\n   * @event clear\n   * @instance\n   * @memberof MapboxGeocoder\n   * @example\n   * ```typescript\n   * search.addEventListener('clear', () => {\n   *   console.log('search box cleared');\n   *   // ...\n   * });\n   * ```\n   */\n  clear: MapboxHTMLEvent<unknown>;\n};\n\n/**\n * `MapboxGeocoder`, also available as the element `<mapbox-geocoder>`,\n * is an element that lets you search for addresses and places using\n * the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/geocoding-v6/).\n *\n * It can control a [Mapbox GL JS](https://docs.mapbox.com/mapbox-gl-js/guides/) map\n * to zoom to the selected result.\n *\n * Additionally, `MapboxGeocoder` implements the [IControl](https://www.mapbox.com/mapbox-gl-js/api/markers/#icontrol)\n * interface.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * @class MapboxGeocoder\n * @example\n * ```typescript\n * const search = new MapboxGeocoder();\n * search.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\n * map.addControl(search);\n * ```\n * @example\n * <mapbox-geocoder\n *   access-token=\"YOUR_MAPBOX_ACCESS_TOKEN\"\n *   proximity=\"0,0\"\n * >\n * </mapbox-geocoder>\n */\nexport class MapboxGeocoder\n  extends HTMLScopedElement<SearchEventTypes>\n  implements mapboxgl.IControl\n{\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxGeocoder#attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    // Theming.\n    'theme',\n    'popover-options',\n    'placeholder',\n    // Underlying Geocoding API options.\n    'autocomplete',\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'proximity',\n    'types',\n    'worldview',\n    'permanent'\n  ];\n\n  #binding: Binding;\n\n  #search = new GeocodingCore({});\n  #session = new SearchSession<\n    GeocodingOptions,\n    GeocodingFeature,\n    GeocodingResponse,\n    GeocodingFeature\n  >(this.#search);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxGeocoder\n   * @example\n   * ```typescript\n   * search.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#search.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#search.accessToken = newToken;\n  }\n\n  /**\n   * The value of the input element.\n   *\n   * @name value\n   * @instance\n   * @memberof MapboxGeocoder\n   * @example\n   * ```typescript\n   * console.log(search.value);\n   * ```\n   */\n  get value(): string {\n    return this.#input.value;\n  }\n  set value(newValue: string) {\n    this.#input.value = newValue || '';\n  }\n\n  #map: mapboxgl.Map | null = null;\n\n  #input: HTMLInputElement;\n  #listbox: MapboxSearchListboxSearchType = new MapboxSearchListbox();\n\n  #eventManager = new MapboxEventManager(SEARCH_SERVICE.Geocoding);\n\n  /**\n   * The `<input>` element wrapped by the autofill component.\n   *\n   * @name input\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {HTMLInputElement}\n   */\n  get input(): HTMLInputElement {\n    return this.#input;\n  }\n\n  protected override get template(): HTMLTemplateElement {\n    return GEOCODER_TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected override get templateUserStyle(): string {\n    return getThemeCSS('.Geocoder', this.#listbox.theme);\n  }\n\n  /**\n   * Options to pass to the underlying {@link GeocodingCore} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {GeocodingOptions}\n   * @example\n   * ```typescript\n   * search.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  options: Partial<GeocodingOptions> = {};\n\n  /**\n   * The {@link Theme} to use for styling the suggestion box and geocoder input box.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * search.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   },\n   *   cssText: \".Input:active { opacity: 0.9; }\"\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.Geocoder', theme));\n    this.#listbox.updatePopover();\n\n    const { SearchIcon } = this.#binding;\n    SearchIcon.innerHTML = getIcon('search', theme);\n  }\n\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   *\n   * @name popoverOptions\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {PopoverOptions}\n   * @example\n   * ```typescript\n   * search.popoverOptions = {\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * };\n   * ```\n   */\n  get popoverOptions(): Partial<PopoverOptions> {\n    return this.#listbox.popoverOptions;\n  }\n  set popoverOptions(newOptions: Partial<PopoverOptions>) {\n    this.#listbox.popoverOptions = newOptions;\n  }\n\n  #getDefaultPlaceholder(): string {\n    if (this.options.language) {\n      const firstLanguage = this.options.language.split(',')[0];\n      const language = subtag.language(firstLanguage);\n      const localizedValue = localization.placeholder[language];\n      if (localizedValue) return localizedValue;\n    }\n    return 'Search';\n  }\n\n  #placeholder: string;\n\n  /**\n   * The input element's placeholder text. The default value may be localized if {@link GeocodingOptions#language} is set.\n   *\n   * @name placeholder\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {string}\n   */\n  get placeholder(): string {\n    return this.#placeholder || this.#getDefaultPlaceholder();\n  }\n\n  set placeholder(text: string) {\n    this.#placeholder = text;\n    if (this.#input) {\n      this.#input.placeholder = this.placeholder;\n      this.#input.setAttribute('aria-label', this.placeholder);\n    }\n  }\n\n  #handleSuggest = (result: GeocodingResponse): void => {\n    this.#setActionIcons();\n\n    this.#listbox.handleSuggest(result?.features || null);\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('suggest', result));\n  };\n\n  #handleSuggestError = (error: Error): void => {\n    this.#setActionIcons();\n\n    this.#listbox.handleError();\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('suggesterror', error));\n  };\n\n  #handleRetrieve = (result: GeocodingFeature): void => {\n    this.#setActionIcons();\n\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('retrieve', result));\n\n    const feature = result;\n    if (!feature) {\n      return;\n    }\n\n    // Set value of the input.\n    this.#input.value = feature.properties.full_address;\n\n    const map = this.#map;\n    if (!map) {\n      return;\n    }\n\n    const placeType = feature.properties.feature_type;\n\n    const bounds = feature.properties.bbox;\n    if (bounds) {\n      map.flyTo(bboxViewport(map, LngLatBounds.convert(bounds).toFlatArray()));\n    } else {\n      const center = feature.geometry.coordinates as mapboxgl.LngLatLike;\n      const zoom = getMaxZoom(placeType);\n\n      map.flyTo({\n        center,\n        zoom,\n        speed: FLY_TO_SPEED\n      });\n    }\n\n    // Add marker to map\n    if (this.marker && this.mapboxgl) {\n      this.#handleMarker(feature);\n    }\n  };\n\n  #mapMarker: mapboxgl.Marker;\n\n  /**\n   * Handle the removal of a feature marker\n   */\n  #removeMarker = (): void => {\n    if (this.#mapMarker) {\n      this.#mapMarker.remove();\n      this.#mapMarker = null;\n    }\n  };\n\n  /**\n   * Handle the placement of a marker for the selected feature\n   */\n  #handleMarker = (feature: GeocodingFeature | null): void => {\n    // clean up any old marker that might be present\n    if (!this.#map) {\n      return;\n    }\n    this.#removeMarker();\n\n    if (!feature) return;\n\n    const defaultMarkerOptions = {\n      color: '#4668F2'\n    };\n    const markerOptions = {\n      ...defaultMarkerOptions,\n      ...(typeof this.marker === 'object' && this.marker)\n    };\n    this.#mapMarker = new this.mapboxgl.Marker(markerOptions);\n    if (\n      feature.geometry &&\n      feature.geometry.type &&\n      feature.geometry.type === 'Point' &&\n      feature.geometry.coordinates\n    ) {\n      this.#mapMarker\n        .setLngLat(feature.geometry.coordinates as mapboxgl.LngLatLike)\n        .addTo(this.#map);\n    }\n  };\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string is returned, no search request will be performed.\n   *\n   * @name interceptSearch\n   * @instance\n   * @memberof MapboxGeocoder\n   * @example\n   * Enable search only when the input value length is more than 3 characters.\n   * ```typescript\n   * search.interceptSearch = (val) => val?.length > 3 ? val : null;\n   * ```\n   */\n  interceptSearch: (val: string) => string = null;\n\n  #onHandleInput = (e: MapboxHTMLEvent<InputEventDetail>): void => {\n    // Manually bubble up the event as a basic input event.\n    this.dispatchEvent(\n      new MapboxHTMLEvent<string>('input', e.detail.inputText)\n    );\n\n    const { lastInput, inputText } = e.detail;\n\n    // Clear text, suggestions, markers, etc. if empty string\n    if (!inputText) {\n      this.#handleClear();\n      return;\n    }\n\n    const alteredText = this.interceptSearch && this.interceptSearch(inputText);\n\n    const searchText = this.interceptSearch ? alteredText : inputText;\n\n    if (this.interceptSearch && !alteredText) {\n      this.#listbox.hideResults();\n      return;\n    }\n\n    this.#session.suggest(searchText, this.options);\n    this.#eventManager.input(\n      searchText,\n      lastInput,\n      {\n        ...this.options,\n        sessionToken: this.#session.sessionToken,\n        accessToken: this.accessToken\n      },\n      this.#map,\n      this.#search.responseHeaders\n    );\n\n    this.#setActionIcons(true);\n  };\n\n  #onHandleSelect = (\n    e: MapboxHTMLEvent<SelectionEventDetail<GeocodingFeature>>\n  ): void => {\n    const { suggestion, selectedIndex } = e.detail;\n    this.#session.retrieve(suggestion, this.options);\n    this.#eventManager.select(\n      this.value,\n      selectedIndex,\n      this.#listbox.suggestions,\n      {\n        ...this.options,\n        sessionToken: this.#session.sessionToken,\n        accessToken: this.accessToken\n      },\n      this.#map,\n      this.#search.responseHeaders\n    );\n\n    this.#setActionIcons(true);\n  };\n\n  #onHandleBlur = (): void => {\n    // Abort any in-progress operations.\n    this.#session.abort();\n  };\n\n  #setActionIcons = (loading = false): void => {\n    if (loading) {\n      this.#binding.ClearBtn.style.display = 'none';\n      this.#binding.LoadingIcon.style.display = 'block';\n    } else {\n      this.#binding.LoadingIcon.style.display = 'none';\n      this.#binding.ClearBtn.style.display = this.value ? 'block' : 'none';\n    }\n  };\n\n  #handleClear = (): void => {\n    this.value = '';\n    this.#setActionIcons();\n    this.#handleMarker(null);\n    this.#listbox.handleSuggest(null);\n\n    this.#eventManager.clear();\n    this.#session.incrementSession();\n\n    // Manually bubble up the event.\n    this.dispatchEvent(new MapboxHTMLEvent('clear'));\n  };\n\n  /** @section {Map settings} */\n\n  /**\n   * A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if {@link MapboxGeocoder#marker} is `true`.\n   *\n   * @name mapboxgl\n   * @instance\n   * @memberof MapboxGeocoder\n   */\n  mapboxgl: typeof mapboxgl;\n\n  /**\n   * If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that {@link MapboxGeocoder#mapboxgl} also be set.\n   *\n   * @name marker\n   * @instance\n   * @memberof MapboxGeocoder\n   * @type {boolean | mapboxgl.MarkerOptions}\n   * @example\n   * ```typescript\n   * search.marker = {\n   *   color: 'red',\n   *   draggable: true\n   * };\n   * ```\n   */\n  marker: boolean | mapboxgl.MarkerOptions = true;\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      Geocoder: '.Geocoder',\n      SearchIcon: '.SearchIcon',\n      Input: '.Input',\n      ClearBtn: '.ClearBtn',\n      LoadingIcon: '.LoadingIcon'\n    });\n\n    // Initialize theme if not set before connectedCallback\n    this.theme = { ...this.theme };\n\n    const { Input, ClearBtn } = this.#binding;\n\n    this.#input = Input;\n    this.#listbox.input = Input;\n    this.#listbox.searchService = SEARCH_SERVICE.Geocoding;\n\n    this.#listbox.addEventListener('input', this.#onHandleInput);\n    this.#listbox.addEventListener('select', this.#onHandleSelect);\n    this.#listbox.addEventListener('blur', this.#onHandleBlur);\n\n    this.#session.addEventListener('suggest', this.#handleSuggest);\n    this.#session.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.addEventListener('retrieve', this.#handleRetrieve);\n\n    ClearBtn.addEventListener('click', this.#handleClear);\n\n    this.placeholder = this.#placeholder;\n\n    this.parentElement.appendChild(this.#listbox);\n\n    if (Input) {\n      // Remove any existing aria-live element that may be left over from, e.g., cloning the node\n      if (Input.previousElementSibling.hasAttribute('aria-live')) {\n        Input.previousElementSibling.remove();\n      }\n      Input.insertAdjacentElement(\n        'beforebegin',\n        createAriaLiveElement(this.#listbox.dataSeed)\n      );\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n    this.#listbox.input = null;\n\n    this.#listbox.removeEventListener('input', this.#onHandleInput);\n    this.#listbox.removeEventListener('select', this.#onHandleSelect);\n    this.#listbox.removeEventListener('blur', this.#onHandleBlur);\n\n    this.#session.removeEventListener('suggest', this.#handleSuggest);\n    this.#session.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.removeEventListener('retrieve', this.#handleRetrieve);\n\n    this.#eventManager.remove();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#search.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    if (name === 'popover-options') {\n      this.popoverOptions = tryParseJSON(newValue);\n      return;\n    }\n\n    if (name === 'placeholder') {\n      this.placeholder = newValue;\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.options[optionName];\n    }\n\n    // Otherwise, assume it's a Geocoding API option.\n    this.options[optionName] = newValue;\n\n    if (optionName === 'language') {\n      this.placeholder = this.#placeholder;\n    }\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n\n  /**\n   * Sets the input text and triggers a search programmatically\n   */\n  search(text: string): void {\n    this.value = text;\n    const payload: InputEventDetail = {\n      lastInput: text,\n      inputText: text\n    };\n    this.#onHandleInput(new MapboxHTMLEvent('input', payload));\n  }\n\n  #handleMoveEnd = (): void => {\n    const map = this.#map;\n    const options = { ...this.options };\n\n    if (map.getZoom() <= MAX_ZOOM) {\n      delete options.proximity;\n      this.options = options;\n\n      return;\n    }\n\n    const center = map.getCenter();\n    this.options = {\n      ...options,\n      proximity: center\n    };\n  };\n\n  /** @section {Map binding} */\n\n  /**\n   * Connects the Geocoder to a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map),\n   * which handles both setting proximity and zoom after a suggestion click.\n   *\n   * @example\n   * ```typescript\n   * const search = new MapboxGeocoder();\n   * search.bindMap(map);\n   * ```\n   */\n  bindMap(map: mapboxgl.Map): void {\n    if (this.#map) {\n      this.#map.off('moveend', this.#handleMoveEnd);\n    }\n\n    if (map) {\n      map.on('moveend', this.#handleMoveEnd);\n    }\n\n    this.#map = map;\n  }\n\n  /**\n   * Unbinds the Geocoder from a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map).\n   */\n  unbindMap(): void {\n    this.bindMap(null);\n  }\n\n  // IControl interface.\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onAdd(map: mapboxgl.Map): HTMLElement {\n    this.bindMap(map);\n    this.remove();\n\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl';\n    container.style.width = '300px';\n    container.appendChild(this);\n\n    return container;\n  }\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onRemove(): void {\n    this.remove();\n    this.unbindMap();\n    this.#removeMarker();\n  }\n\n  getDefaultPosition(): string {\n    return 'top-right';\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxGeocoder: typeof MapboxGeocoder;\n  }\n}\n\nwindow.MapboxGeocoder = MapboxGeocoder;\n\nif (!window.customElements.get('mapbox-geocoder')) {\n  customElements.define('mapbox-geocoder', MapboxGeocoder);\n}\n","import { LngLat, LngLatLike } from '@mapbox/search-js-core';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport {\n  bindElements,\n  createElementFromString,\n  getElementSize\n} from '../utils/dom';\nimport {\n  Anchor,\n  MapStyleMode,\n  MarkerController,\n  MAX_IMAGE_DIM\n} from '../utils/minimap';\nimport { getStaticBaseUrl } from '../utils/map';\n\nimport {\n  AUTOFILL_SKU_TOKEN_PREFIX,\n  STATIC_BASE_URL_SATELLITE\n} from '../constants';\nimport { getIcon, getImage, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\nimport logo from '../icons/mapboxgl-ctrl-logo.svg';\nimport { deepEquals } from '../utils';\nimport { sendFeedback } from '../utils/contribute';\n\nimport { config } from '../config';\n\n// TODO: Scale by device pixel ratio?\nconst ZOOM = 16;\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MapboxAddressMinimap\" aria-hidden=\"true\">\n    <div class=\"MinimapImageContainer\">\n      <img class=\"MinimapImage\" draggable=\"false\"></img>\n      <div class=\"MinimapInnerFrame\">\n        <div class=\"MinimapMarker\"></div>\n        <div class=\"MinimapAttribution\">\n          <div class=\"MinimapAttributionLogo\">\n            <a target=\"_blank\" rel=\"noopener nofollow\" href=\"https://www.mapbox.com/\" aria-label=\"Mapbox logo\">\n              ${logo}\n            </a>\n          </div>\n          <div class=\"MinimapAttributionText\">\n            <a target=\"_blank\" href='https://www.mapbox.com/about/maps/'>© Mapbox</a><a target=\"_blank\" href='http://www.openstreetmap.org/copyright'>© OpenStreetMap</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\nconst STYLE_TOGGLE_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <button type=\"button\" class=\"MinimapStyleToggle\"></button>\n</template>\n`);\n\nconst FOOTER_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MinimapFooter\">Adjust the marker on the map if it doesn't precisely match your location. This helps improve address data quality.</div>\n</template>\n`);\n\nconst ADJUST_PIN_TEXT = 'Adjust pin';\nconst SAVE_TEXT = 'Save';\nconst CANCEL_TEXT = 'Cancel';\n\nconst EDIT_BUTTONS_TEMPLATE =\n  createElementFromString<HTMLTemplateElement>(/* html */ `\n<template>\n  <div class=\"MinimapEditButtons\">\n    <div class=\"Button ButtonPrimary MinimapButtonAdjust\">${ADJUST_PIN_TEXT}</div>\n    <div class=\"Button ButtonPrimary MinimapButtonSave\" aria-hidden=\"true\">${SAVE_TEXT}</div>\n    <div class=\"Button MinimapButtonCancel\" aria-hidden=\"true\">${CANCEL_TEXT}</div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressMinimap: HTMLElement;\n  ImageContainer: HTMLElement;\n  Image: HTMLImageElement;\n  Marker: HTMLElement;\n  MapStyleToggle?: HTMLElement;\n  EditButtons?: HTMLElement;\n  ButtonAdjust?: HTMLButtonElement;\n  ButtonSave?: HTMLButtonElement;\n  ButtonCancel?: HTMLButtonElement;\n};\n\n/**\n * `MapboxAddressMinimap`, also available as the element `<mapbox-address-minimap>`,\n * is a component that displays a marker for confirmation purposes.\n *\n * Optionally, this marker is editable. When editable, the marker can be moved\n * around the map and the updated location is sent back to the Mapbox Contribute\n * workflow.\n *\n * The goal of `MapboxAddressMinimap` is to reduce delivery or geolocation error in shipping and\n * local dispatching contexts.\n *\n * `MapboxAddressMinimap` expands to fill its container, and is hidden unless\n * {@link MapboxAddressMinimap#feature} is truthy. Setting {@link MapboxAddressMinimap#feature}\n * to `null` hides the component.\n *\n * @class MapboxAddressMinimap\n * @example\n * ```typescript\n * const minimap = new MapboxAddressMinimap();\n * containerElement.appendChild(minimap);\n * minimap.feature = {\n *   type: 'Feature',\n *   geometry: {\n *     type: 'Point',\n *     coordinates: [-122.4194, 37.7749]\n *   },\n *   properties: {}\n * };\n * ```\n */\nexport class MapboxAddressMinimap extends HTMLScopedElement {\n  static observedAttributes: string[] = [\n    'access-token',\n    'can-adjust-marker',\n    'keep-marker-centered',\n    'marker-anchor',\n    'satellite-toggle'\n  ];\n\n  #canAdjustMarkerInternal = false;\n\n  /** @section {Markers} */\n\n  /**\n   * If `true`, the marker can be moved around the map. Defaults to `false`.\n   *\n   * When editable, the marker can be moved around the map and the updated\n   * location can be referenced from the {@link MapboxAddressMinimap#onSaveMarkerLocation} callback.\n   *\n   * @name canAdjustMarker\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  get canAdjustMarker(): boolean {\n    return this.#canAdjustMarkerInternal;\n  }\n  set canAdjustMarker(val: boolean) {\n    this.#canAdjustMarkerInternal = val;\n    val ? this.#addMarkerEditControls() : this.#removeMarkerEditControls();\n  }\n  /**\n   * If `true`, the map when panned moves around the marker, keeping the marker\n   * centered. Defaults to `false`.\n   *\n   * @name keepMarkerCentered\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  keepMarkerCentered = false;\n  /**\n   * The anchor of the marker, relative to center of the expanded size. Defaults to `'bottom'`.\n   *\n   * @name markerAnchor\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Anchor}\n   */\n  markerAnchor: Anchor = 'bottom';\n  /**\n   * A client-defined callback that is triggered when the \"Save\" button is clicked in the editing interface,\n   * and gives access to the adjusted marker coordinate.\n   *\n   * @name onSaveMarkerLocation\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {function}\n   */\n  onSaveMarkerLocation: (coordinate: [number, number]) => void;\n\n  #isAdjustMarkerEditing = false;\n\n  #imageLoaded = false;\n\n  #feature: GeoJSON.Feature<GeoJSON.Point>;\n  #url = '';\n\n  #width: number;\n  #height: number;\n\n  #binding: Binding;\n\n  #markerController: MarkerController;\n\n  #accessToken: string;\n\n  /** @section {Input data} */\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * If not explicitly set on the component, this will reference the value in the global config object.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @example\n   * ```typescript\n   * minimap.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#accessToken || config.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#accessToken = newToken;\n  }\n\n  /**\n   * A [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) Feature representing\n   * a [Point](https://geojson.org/geojson-spec.html#point) geometry.\n   *\n   * The minimap is hidden unless\n   * {@link MapboxAddressMinimap#feature} is truthy. Setting {@link MapboxAddressMinimap#feature}\n   * to `null` hides the component.\n   *\n   * @name feature\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Feature}\n   */\n  get feature(): GeoJSON.Feature<GeoJSON.Point> {\n    return this.#feature;\n  }\n  set feature(feature: GeoJSON.Feature<GeoJSON.Point>) {\n    this.#feature = feature;\n\n    if (!feature) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressMinimap', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n  #satelliteToggleInternal = false;\n\n  /** @section {Appearance} */\n\n  /**\n   * If `true`, the map will have an image toggle between Map and Satellite styles.\n   *\n   * @name satelliteToggle\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  get satelliteToggle(): boolean {\n    return this.#satelliteToggleInternal;\n  }\n  set satelliteToggle(val: boolean) {\n    this.#satelliteToggleInternal = val;\n    val ? this.#addSatelliteToggle() : this.#removeSatelliteToggle();\n  }\n\n  /**\n   * The {@link Theme} to use for styling the editing interface.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.MapboxAddressMinimap', theme));\n\n    const { Marker, MapStyleToggle } = this.#binding;\n    Marker.innerHTML = getIcon('marker', theme);\n    if (MapStyleToggle) {\n      MapStyleToggle.style.backgroundImage = this.#getToggleBackgroundImageUrl(\n        this.mapStyleMode === 'default' ? 'satellite' : 'default'\n      );\n    }\n  }\n\n  #mapStyleMode: MapStyleMode = 'default';\n\n  #adjustBtnText;\n  /**\n   * Custom adjust button text appearing on the map.\n   * If not provided, the default text will be used.\n   *\n   * @name adjustBtnText\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {string}\n   */\n  get adjustBtnText(): string {\n    return this.#adjustBtnText || ADJUST_PIN_TEXT;\n  }\n  set adjustBtnText(val: string) {\n    this.#adjustBtnText = val;\n    const adjustBtn = this.querySelector('.MinimapButtonAdjust');\n    adjustBtn.textContent = val || ADJUST_PIN_TEXT;\n  }\n\n  #saveBtnText;\n  /**\n   * Custom save button text appearing on the map, when marker adjustment is enabled.\n   * If not provided, the default text will be used.\n   *\n   * @name saveBtnText\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {string}\n   */\n  get saveBtnText(): string {\n    return this.#saveBtnText || SAVE_TEXT;\n  }\n  set saveBtnText(val: string) {\n    this.#saveBtnText = val;\n    const saveBtn = this.querySelector('.MinimapButtonSave');\n    saveBtn.textContent = val || SAVE_TEXT;\n  }\n\n  #cancelBtnText;\n  /**\n   * Custom cancel button text appearing on the map, when marker adjustment is enabled.\n   * If not provided, the default text will be used.\n   *\n   * @name cancelBtnText\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {string}\n   */\n  get cancelBtnText(): string {\n    return this.#cancelBtnText || CANCEL_TEXT;\n  }\n  set cancelBtnText(val: string) {\n    this.#cancelBtnText = val;\n    const cancelBtn = this.querySelector('.MinimapButtonCancel');\n    cancelBtn.textContent = val || CANCEL_TEXT;\n  }\n\n  /**\n   * The map style to use, either `'default'` or `'satellite'`. The default map\n   * style is configurable with {@link MapboxAddressMinimap#defaultMapStyle}.\n   *\n   * @name mapStyleMode\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {'default' | 'satellite'}\n   */\n  get mapStyleMode(): MapStyleMode {\n    return this.#mapStyleMode;\n  }\n  set mapStyleMode(styleMode: MapStyleMode) {\n    const prevStyleMode = this.#mapStyleMode;\n    if (prevStyleMode === styleMode) return;\n\n    this.#mapStyleMode = styleMode;\n    if (!this.#binding) {\n      return;\n    }\n\n    // Update toggle button background image\n    const { MapStyleToggle } = this.#binding;\n    if (!MapStyleToggle) {\n      return;\n    }\n\n    MapStyleToggle.style.backgroundImage =\n      this.#getToggleBackgroundImageUrl(prevStyleMode);\n    // Update title attribute\n    MapStyleToggle.setAttribute(\n      'title',\n      `Switch to ${prevStyleMode === 'satellite' ? 'Satellite' : 'Default'}`\n    );\n    this.#updateImageSrc();\n  }\n\n  #defaultMapStyle: [string, string] = ['mapbox', 'streets-v11'];\n\n  /**\n   * The map style to use for the default map style. Defaults to `['mapbox', 'streets-v11']`.\n   *\n   * @name defaultMapStyle\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {[string, string]}\n   */\n  get defaultMapStyle(): [string, string] {\n    return this.#defaultMapStyle;\n  }\n  set defaultMapStyle(style: [string, string]) {\n    this.#defaultMapStyle = style;\n    this.#updateImageSrc();\n  }\n\n  #footer: boolean | string;\n\n  /**\n   * Custom footer text appearing below the map, when marker adjustment is enabled.\n   * If `true` or left undefined, the default footer text will be used.\n   * If `false`, the footer will not be shown.\n   *\n   * @name footer\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean | string}\n   */\n  get footer(): boolean | string {\n    return this.#footer;\n  }\n  set footer(val: boolean | string) {\n    this.#footer = val;\n    const footerEl = this.querySelector<HTMLDivElement>('.MinimapFooter');\n    if (footerEl) {\n      if (typeof val === 'string') {\n        footerEl.textContent = val;\n        footerEl.removeAttribute('aria-hidden');\n      } else if (!val) {\n        footerEl.setAttribute('aria-hidden', 'true');\n      } else {\n        footerEl.removeAttribute('aria-hidden');\n      }\n    }\n  }\n\n  /**\n   * @deprecated Use `container` instead.\n   */\n  #container: HTMLElement | null;\n\n  get container(): HTMLElement | null {\n    return this.#container;\n  }\n\n  set container(newContainer: HTMLElement | null) {\n    if (newContainer) {\n      newContainer.style.position = 'relative';\n      this.#container = newContainer;\n    }\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * If {@link MapboxAddressMinimap#feature} is truthy, show the minimap.\n   */\n  show(): void {\n    if (!this.#feature) {\n      return;\n    }\n\n    const lngLat = this.#feature.geometry.coordinates;\n    this.#markerController.coordinate = lngLat as [number, number];\n\n    this.#url = this.#getImageUrl(lngLat as [number, number]);\n\n    // Update image.\n    const { MapboxAddressMinimap, Image } = this.#binding;\n    Image.src = this.#url;\n\n    MapboxAddressMinimap.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Hide the minimap.\n   */\n  hide(): void {\n    const { MapboxAddressMinimap } = this.#binding;\n    MapboxAddressMinimap.setAttribute('aria-hidden', 'true');\n  }\n\n  #toggleMarkerEditing = (): void => {\n    const { ImageContainer, ButtonAdjust, ButtonSave, ButtonCancel } =\n      this.#binding;\n    if (this.#isAdjustMarkerEditing) {\n      ImageContainer.classList.add(`${this.dataset.seed}--draggable`);\n      this.#markerController.isActive = true;\n      ButtonAdjust.setAttribute('aria-hidden', 'true');\n      ButtonSave.removeAttribute('aria-hidden');\n      ButtonCancel.removeAttribute('aria-hidden');\n    } else {\n      ImageContainer.classList.remove(`${this.dataset.seed}--draggable`);\n      this.#markerController.isActive = false;\n      ButtonAdjust.removeAttribute('aria-hidden');\n      ButtonSave.setAttribute('aria-hidden', 'true');\n      ButtonCancel.setAttribute('aria-hidden', 'true');\n    }\n  };\n\n  #handleStartMarkerEditing = (): void => {\n    this.#isAdjustMarkerEditing = true;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleSaveMarkerEditing = (): void => {\n    // Send feedback to Contribute API if feature includes address info, and the marker location has changed\n    if (\n      this.feature.properties.full_address &&\n      !deepEquals(\n        this.feature.geometry.coordinates,\n        this.#markerController.coordinate\n      )\n    ) {\n      const [lng, lat] = this.#markerController.coordinate;\n      sendFeedback(this.accessToken, {\n        originalCoordinate: this.feature.geometry.coordinates as [\n          number,\n          number\n        ],\n        originalAddress: this.feature.properties.full_address,\n        changes: {\n          location: { longitude: lng, latitude: lat }\n        }\n      });\n    }\n    // Client-defined callback\n    if (this.onSaveMarkerLocation) {\n      this.onSaveMarkerLocation(this.#markerController.coordinate);\n    }\n    // Update component state\n    this.#isAdjustMarkerEditing = false;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleCancelMarkerEditing = (): void => {\n    this.#markerController.reCenter();\n    this.#isAdjustMarkerEditing = false;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleToggleMapStyle = (): void => {\n    this.mapStyleMode =\n      this.mapStyleMode === 'default' ? 'satellite' : 'default';\n  };\n\n  #handleImageLoad = (): void => {\n    if (!this.#imageLoaded) {\n      this.#markerController.reCenter();\n    }\n    this.#imageLoaded = true;\n    this.#markerController && this.#markerController.handleMinimapResize();\n  };\n\n  #handleImageError = (): void => {\n    this.#imageLoaded = false;\n  };\n\n  /**\n   * Get the Static Image API URL for a given coordinate.\n   * Attempts to get an image twice as large as the container to enable panning,\n   * while constraining to the static API size limits.\n   * @param lngLatLike - The coordinate representing the center of the image\n   * @returns\n   */\n  #getImageUrl = (lngLatLike: LngLatLike): string => {\n    // Return empty string if height or width is 0 to prevent 422 error\n    if (this.#width === 0 || this.#height === 0) return '';\n\n    const [username, styleId] = this.defaultMapStyle;\n    const defaultBaseUrl = getStaticBaseUrl(username, styleId);\n    const baseUrl =\n      this.mapStyleMode === 'default'\n        ? defaultBaseUrl\n        : STATIC_BASE_URL_SATELLITE;\n    const skuToken =\n      AUTOFILL_SKU_TOKEN_PREFIX + config.autofillSessionToken.toString();\n    let imgUrl =\n      baseUrl +\n      LngLat.convert(lngLatLike).toArray().join(',') +\n      ',' +\n      ZOOM +\n      ',0/' +\n      Math.min(this.#width * 2, MAX_IMAGE_DIM) +\n      'x' +\n      Math.min(this.#height * 2, MAX_IMAGE_DIM) +\n      '?access_token=' +\n      this.accessToken +\n      '&attribution=false' +\n      '&logo=false';\n    if (config.autofillSessionEnabled) {\n      imgUrl += `&sku=${skuToken}`;\n    }\n    return imgUrl;\n  };\n\n  #updateImageSrc = (): void => {\n    if (this.#feature) {\n      const lngLat = this.#feature.geometry.coordinates;\n      this.#url = this.#getImageUrl(lngLat as [number, number]);\n      const { Image } = this.#binding;\n      Image.src = this.#url;\n    }\n  };\n\n  #getToggleBackgroundImageUrl = (styleMode: MapStyleMode): string => {\n    return `url(\"${getImage(\n      styleMode === 'default' ? 'styleToggleDefault' : 'styleToggleSatellite',\n      this.theme\n    )}\")`;\n  };\n\n  #setSize = (): void => {\n    const { MapboxAddressMinimap, ImageContainer, Image } = this.#binding;\n    const { width, height } = getElementSize(this.container);\n    const [oldWidth, oldHeight] = [this.#width, this.#height];\n    this.#width = Math.min(width, MAX_IMAGE_DIM); // Constrain to Static Image API limit\n    this.#height = Math.min(height, MAX_IMAGE_DIM); // Constrain to Static Image API limit\n    MapboxAddressMinimap.style.setProperty('width', `${this.#width}px`);\n    MapboxAddressMinimap.style.setProperty('height', `${this.#height}px`);\n    ImageContainer.style.setProperty('height', `${this.#height}px`);\n    ImageContainer.style.setProperty('width', `${this.#width}px`);\n    const [imgWidth, imgHeight] = [Image.width, Image.height];\n\n    /**\n     * Conditionally update the <img> src URL.\n     * Only updates if ALL of the following conditions are met:\n     * 1. The Minimap is INCREASING in X or Y dimension\n     * 2. The Minimap dimension is greater than half the <img> dimension (we want to aim for twice the extents for panning)\n     * 3. The <img> dimension is smaller than the maximum per Static Image API (i.e. it still has room to be sized up)\n     */\n    if (\n      (this.#width > oldWidth &&\n        this.#width > imgWidth / 2 &&\n        imgWidth < MAX_IMAGE_DIM) ||\n      (this.#height > oldHeight &&\n        this.#height > imgHeight / 2 &&\n        imgHeight < MAX_IMAGE_DIM)\n    ) {\n      this.#updateImageSrc();\n    } else {\n      this.#markerController && this.#markerController.handleMinimapResize();\n    }\n  };\n\n  #addMarkerEditControls = (): void => {\n    // Footer\n    const existingFooter = this.querySelector('.MinimapFooter');\n    if (existingFooter) return;\n    const footerElement = this.prepareTemplate(FOOTER_TEMPLATE);\n    const minimapElement = this.querySelector('.MapboxAddressMinimap');\n    if (!minimapElement) return;\n    minimapElement.appendChild(footerElement);\n\n    // Edit buttons\n    const existingEditBtns = this.querySelector('.MinimapEditButtons');\n    if (existingEditBtns) return;\n    const editButtonsElement = this.prepareTemplate(EDIT_BUTTONS_TEMPLATE);\n    const innerFrame = this.querySelector('.MinimapInnerFrame');\n    innerFrame.appendChild(editButtonsElement);\n\n    // Add to or update object binding\n    this.#binding = {\n      ...this.#binding,\n      EditButtons: this.querySelector('.MinimapEditButtons'),\n      ButtonAdjust: this.querySelector('.MinimapButtonAdjust'),\n      ButtonSave: this.querySelector('.MinimapButtonSave'),\n      ButtonCancel: this.querySelector('.MinimapButtonCancel')\n    };\n\n    // Bind callbacks to button click events\n    const { ButtonAdjust, ButtonSave, ButtonCancel } = this.#binding;\n    ButtonAdjust.addEventListener('click', this.#handleStartMarkerEditing);\n    ButtonSave.addEventListener('click', this.#handleSaveMarkerEditing);\n    ButtonCancel.addEventListener('click', this.#handleCancelMarkerEditing);\n  };\n\n  #removeMarkerEditControls = (): void => {\n    if (!this.#binding) return;\n    const { EditButtons, ButtonAdjust, ButtonSave, ButtonCancel } =\n      this.#binding;\n\n    const existingFooter = this.querySelector('.MinimapFooter');\n    existingFooter?.remove();\n    EditButtons?.remove();\n    if (ButtonAdjust) {\n      ButtonAdjust.remove();\n      ButtonAdjust.removeEventListener('click', this.#handleStartMarkerEditing);\n    }\n    if (ButtonSave) {\n      ButtonSave.remove();\n      ButtonSave.removeEventListener('click', this.#handleSaveMarkerEditing);\n    }\n    if (ButtonCancel) {\n      ButtonCancel.remove();\n      ButtonCancel.removeEventListener(\n        'click',\n        this.#handleCancelMarkerEditing\n      );\n    }\n\n    delete this.#binding.EditButtons;\n    delete this.#binding.ButtonAdjust;\n    delete this.#binding.ButtonSave;\n    delete this.#binding.ButtonCancel;\n  };\n\n  #addSatelliteToggle = (): void => {\n    const existingToggle = this.querySelector('.MinimapStyleToggle');\n    if (existingToggle) return;\n\n    // Add element to DOM\n    const toggleElement = this.prepareTemplate(STYLE_TOGGLE_TEMPLATE);\n    const innerFrame = this.querySelector('.MinimapInnerFrame');\n    if (!innerFrame) return;\n    innerFrame.appendChild(toggleElement);\n\n    // Add to or update object binding\n    this.#binding.MapStyleToggle = toggleElement;\n\n    // Bind callback\n    toggleElement.addEventListener('click', this.#handleToggleMapStyle);\n    // Initialize background image\n    toggleElement.style.backgroundImage = this.#getToggleBackgroundImageUrl(\n      this.mapStyleMode === 'default' ? 'satellite' : 'default'\n    );\n    toggleElement.setAttribute(\n      'title',\n      `Switch to ${this.mapStyleMode === 'default' ? 'Satellite' : 'Default'}`\n    );\n  };\n\n  #removeSatelliteToggle = (): void => {\n    if (!this.#binding) return;\n    const { MapStyleToggle } = this.#binding;\n    if (!MapStyleToggle) return;\n\n    MapStyleToggle.remove();\n    MapStyleToggle.removeEventListener('click', this.#handleToggleMapStyle);\n\n    delete this.#binding.MapStyleToggle;\n  };\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressMinimap: '.MapboxAddressMinimap',\n      ImageContainer: '.MinimapImageContainer',\n      Image: '.MinimapImage',\n      Marker: '.MinimapMarker',\n      MapStyleToggle: '.MinimapStyleToggle',\n      EditButtons: '.MinimapEditButtons',\n      ButtonAdjust: '.MinimapButtonAdjust',\n      ButtonSave: '.MinimapButtonSave',\n      ButtonCancel: '.MinimapButtonCancel'\n    });\n\n    // Update toggle button background image.\n    this.mapStyleMode = this.#mapStyleMode;\n\n    // Initialize theme if not set before connectedCallback\n    this.theme = { ...this.theme };\n\n    // Append buttons and footer if adjustable\n    if (this.canAdjustMarker) {\n      this.#addMarkerEditControls();\n    }\n\n    // Append style toggle if enabled\n    if (this.satelliteToggle) {\n      this.#addSatelliteToggle();\n    }\n\n    // Calculate size and listen for changes\n    this.container = this.parentElement;\n    const resizeObserver = new ResizeObserver(this.#setSize);\n    resizeObserver.observe(this.container);\n    this.#setSize();\n\n    const { MapboxAddressMinimap, ImageContainer, Image, Marker } =\n      this.#binding;\n\n    // Initialize marker controller\n    this.#markerController = new MarkerController(\n      ImageContainer,\n      Image,\n      Marker,\n      this.keepMarkerCentered,\n      ZOOM,\n      this.markerAnchor\n    );\n    this.#markerController.reCenter();\n    Image.onload = this.#handleImageLoad;\n    Image.onerror = this.#handleImageError;\n\n    Image.src = this.#url;\n\n    if (this.#feature) MapboxAddressMinimap.removeAttribute('aria-hidden');\n    else MapboxAddressMinimap.setAttribute('aria-hidden', 'true');\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.accessToken = newValue;\n    } else if (name === 'can-adjust-marker') {\n      this.canAdjustMarker = newValue === 'true';\n    } else if (name === 'keep-marker-centered') {\n      this.keepMarkerCentered = newValue === 'true';\n    } else if (name === 'marker-anchor') {\n      const newAnchor = newValue as Anchor;\n      this.markerAnchor = newAnchor;\n      this.#markerController && (this.#markerController.anchor = newAnchor);\n    } else if (name === 'satellite-toggle') {\n      this.satelliteToggle = newValue === 'true';\n    }\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressMinimap: typeof MapboxAddressMinimap;\n  }\n}\n\nwindow.MapboxAddressMinimap = MapboxAddressMinimap;\n\nif (!window.customElements.get('mapbox-address-minimap')) {\n  customElements.define('mapbox-address-minimap', MapboxAddressMinimap);\n}\n","import SphericalMercator from '@mapbox/sphericalmercator';\nimport { deepEquals, round } from '.';\nimport { getElementSize } from './dom';\n\nexport type MapStyleMode = 'default' | 'satellite';\n\n/**\n * @typedef Anchor\n */\nexport type Anchor =\n  | 'center'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right';\n\n// eslint-disable-next-line\n// @ts-ignore\nconst merc = new SphericalMercator({ size: 512, antimeridian: true });\n\nexport const MAX_IMAGE_DIM = 1280;\n\ninterface MarkerTransform {\n  /** X offset to correct for anchor position */\n  anchorX: number;\n  /** Y offset to correct for anchor position */\n  anchorY: number;\n  /** X offset from manual marker movement */\n  globalX: number;\n  /** Y offset from manual marker movement */\n  globalY: number;\n  correctionX: number;\n  correctionY: number;\n}\n\n/**\n * Get the [X,Y] pixel offset for a given SVG marker and anchor definition\n * @param marker - An SVG element used as the marker\n * @param anchor - The anchor point of the marker to put closest to the marked coordinate\n * @returns [X,Y] pixel coordinate\n */\nexport function getAnchorOffset(\n  marker: HTMLElement,\n  anchor: Anchor\n): [number, number] {\n  const { width, height } = getElementSize(marker, true);\n  switch (anchor) {\n    case 'center':\n      return [0, 0];\n    case 'top':\n      return [0, height / 2];\n    case 'bottom':\n      return [0, (-1 * height) / 2];\n    case 'left':\n      return [width / 2, 0];\n    case 'right':\n      return [(-1 * width) / 2, 0];\n    case 'top-left':\n      return [width / 2, height / 2];\n    case 'top-right':\n      return [(-1 * width) / 2, height / 2];\n    case 'bottom-left':\n      return [width / 2, (-1 * height) / 2];\n    case 'bottom-right':\n      return [(-1 * width) / 2, (-1 * height) / 2];\n  }\n}\n\n/**\n * Manages positioning of a static map image and marker relative to\n * pixel and geographical coordinates. Handles pointer events for\n * interactive/adjustable instances.\n */\nexport class MarkerController {\n  imgContainerElement: HTMLElement;\n  imgElement: HTMLImageElement;\n  markerElement: HTMLElement;\n  keepMarkerCentered: boolean;\n  zoom: number;\n\n  /** X-offset for the marker element to account for its positioning anchor */\n  anchorOffsetX: number;\n  /** Y-offset for the marker element to account for its positioning anchor */\n  anchorOffsetY: number;\n\n  /** Current X pixel of the pointer on the page */\n  curPointerXPos: number;\n  /** Current Y pixel of the pointer on the page */\n  curPointerYPos: number;\n  /** X-pixels deviation of marker position from the current map/feature center point */\n  markerDeltaX: number;\n  /** Y-pixels deviation of marker position from the current map/feature center point */\n  markerDeltaY: number;\n\n  /**\n   * Lng/lat of feature coordinate and initial image center represented as screen pixels.\n   * Value is fixed for a given original coordinate.\n   */\n  imgCenterPx: [number, number];\n  /**\n   * Lng/lat of adjusted image center as screen pixels.\n   * Value changes as the image is panned around in its container.\n   */\n  imgCenterAdjustedPx: [number, number];\n\n  /**\n   *\n   * @param imageContainer - The parent element of the <img>\n   * @param imageContainer - The <img> element\n   * @param marker - SVG Element used as the map marker\n   * @param keepMarkerCentered - If true, the marker will stay centered within the frame while the map moves behind it\n   * @param zoom - The zoom level of the static map, used to calculate between screen pixel and lng/lat\n   * @param anchor - The part of the marker that should be positioned closest to the coordinate\n   */\n  constructor(\n    imageContainer: HTMLElement,\n    imageElement: HTMLImageElement,\n    marker: HTMLElement,\n    keepMarkerCentered: boolean,\n    zoom: number,\n    anchor: Anchor\n  ) {\n    this.markerElement = marker;\n    this.imgContainerElement = imageContainer;\n    this.imgElement = imageElement;\n    this.keepMarkerCentered = keepMarkerCentered;\n    this.zoom = zoom;\n    this.anchor = anchor;\n\n    this.curPointerXPos = 0;\n    this.curPointerYPos = 0;\n    this.markerDeltaX = 0;\n    this.markerDeltaY = 0;\n\n    this.imgContainerElement.addEventListener(\n      'pointerdown',\n      this.#onPointerDownImage\n    );\n\n    if (!this.keepMarkerCentered) {\n      this.markerElement.addEventListener(\n        'pointerdown',\n        this.#onPointerDownMarker\n      );\n    }\n\n    // Listen for changes to anchor size\n    const resizeObserver = new ResizeObserver(this.#handleAnchorResize);\n    resizeObserver.observe(this.markerElement);\n  }\n\n  #anchor: Anchor;\n\n  get anchor(): Anchor {\n    return this.#anchor;\n  }\n\n  set anchor(newAnchor: Anchor) {\n    this.#anchor = newAnchor;\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(\n      this.markerElement,\n      newAnchor\n    );\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  }\n\n  #handleAnchorResize = (): void => {\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(\n      this.markerElement,\n      this.anchor\n    );\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  };\n\n  #markerTransform: MarkerTransform = {\n    anchorX: 0,\n    anchorY: 0,\n    globalX: 0,\n    globalY: 0,\n    correctionX: 0,\n    correctionY: 0\n  };\n\n  get markerTransform(): MarkerTransform {\n    return this.#markerTransform;\n  }\n\n  set markerTransform(val: Partial<MarkerTransform>) {\n    this.#markerTransform = {\n      ...this.#markerTransform,\n      ...val\n    };\n    this.#updateMarkerTransform();\n  }\n\n  #isActive = false;\n\n  /** True if the marker is currently in edit mode */\n  get isActive(): boolean {\n    return this.#isActive;\n  }\n\n  /** Set to true to enable editing of the marker */\n  set isActive(val: boolean) {\n    this.imgContainerElement.style.touchAction = val ? 'none' : '';\n    this.#isActive = val;\n  }\n\n  #originalCoordinate: [number, number];\n\n  /** Lng/lat of the current marker location */\n  get coordinate(): [number, number] {\n    const adjustedPx: [number, number] = this.keepMarkerCentered\n      ? this.imgCenterAdjustedPx\n      : [\n          this.imgCenterPx[0] - this.markerDeltaX,\n          this.imgCenterPx[1] + this.markerDeltaY\n        ];\n\n    // If the screen pixel hasn't changed, use the original coordinate so as not to incur any precision rounding during translation\n    if (deepEquals(adjustedPx, this.imgCenterPx)) {\n      return this.#originalCoordinate;\n    } else {\n      const lngLat = merc.ll(adjustedPx, this.zoom);\n      return [round(lngLat[0], 6), round(lngLat[1], 6)];\n    }\n  }\n\n  /** Set the lng/lat corresponding to the initial marker and image center location */\n  set coordinate(lngLat: [number, number]) {\n    this.#originalCoordinate = lngLat;\n    this.imgCenterPx = this.imgCenterAdjustedPx = merc.px(lngLat, this.zoom);\n  }\n\n  // Marker dragging event handlers\n  #onPointerDownMarker = (m: PointerEvent): void => {\n    if (!this.isActive) return;\n\n    m.preventDefault();\n    m.stopPropagation();\n\n    this.#updatePointerPosition(m);\n\n    window.addEventListener('pointermove', this.#onPointerMoveMarker);\n    window.addEventListener('pointerup', this.#onPointerUpMarker);\n  };\n\n  #onPointerUpMarker = (): void => {\n    window.removeEventListener('pointermove', this.#onPointerMoveMarker);\n    window.removeEventListener('pointerup', this.#onPointerUpMarker);\n  };\n\n  #onPointerMoveMarker = (m: PointerEvent): void => {\n    m.preventDefault();\n    m.stopPropagation();\n\n    // Calculate change in pointer position\n    const diffX = this.curPointerXPos - m.pageX;\n    const diffY = this.curPointerYPos - m.pageY;\n\n    // Update relative marker positioning\n    this.markerDeltaX += diffX;\n    this.markerDeltaY -= diffY;\n    // Clamp to image bounds\n    this.markerDeltaX = Math.max(\n      Math.min(this.imgElement.width / 2, this.markerDeltaX),\n      (this.imgElement.width / 2) * -1\n    );\n    this.markerDeltaY = Math.max(\n      Math.min(this.imgElement.height / 2, this.markerDeltaY),\n      (this.imgElement.height / 2) * -1\n    );\n\n    // Calculate X/Y transforms\n    const imageOffsetX = this.imgCenterPx[0] - this.imgCenterAdjustedPx[0];\n    const imageOffsetY = this.imgCenterPx[1] - this.imgCenterAdjustedPx[1];\n    const deltaX = this.markerDeltaX - imageOffsetX;\n    const deltaY = this.markerDeltaY + imageOffsetY;\n\n    this.markerTransform = { globalX: deltaX, globalY: deltaY };\n\n    // Update pointer position\n    this.#updatePointerPosition(m);\n  };\n\n  // Image dragging event handlers\n  #onPointerDownImage = (m: PointerEvent): void => {\n    if (!this.isActive) return;\n\n    m.preventDefault();\n    m.stopPropagation();\n\n    this.#updatePointerPosition(m);\n\n    window.addEventListener('pointermove', this.#onPointerMoveImage);\n    window.addEventListener('pointerup', this.#onPointerUpImage);\n  };\n\n  #onPointerUpImage = (): void => {\n    window.removeEventListener('pointermove', this.#onPointerMoveImage);\n    window.removeEventListener('pointerup', this.#onPointerUpImage);\n  };\n\n  #onPointerMoveImage = (m: PointerEvent): void => {\n    m.preventDefault();\n\n    // Calculate and constrain updated scroll position\n    let top = Math.round(\n      this.imgContainerElement.scrollTop + (this.curPointerYPos - m.pageY)\n    );\n    // Clamp to container bounds\n    top = Math.max(\n      Math.min(\n        this.imgElement.height - this.imgContainerElement.clientHeight,\n        top\n      ),\n      0\n    );\n    let left = Math.round(\n      this.imgContainerElement.scrollLeft + (this.curPointerXPos - m.pageX)\n    );\n    // Clamp to container bounds\n    left = Math.max(\n      Math.min(\n        this.imgElement.width - this.imgContainerElement.clientWidth,\n        left\n      ),\n      0\n    );\n    this.imgContainerElement.scrollTop = top;\n    this.imgContainerElement.scrollLeft = left;\n\n    // Update adjusted center location\n    const diffX = Math.round(\n      left - (this.imgElement.width - this.imgContainerElement.clientWidth) / 2\n    );\n    const diffY = Math.round(\n      (this.imgElement.height - this.imgContainerElement.clientHeight) / 2 - top\n    );\n    this.imgCenterAdjustedPx = [\n      this.imgCenterPx[0] + diffX,\n      this.imgCenterPx[1] - diffY\n    ];\n\n    if (!this.keepMarkerCentered) {\n      // Move marker in sync with image to maintain visual positioning on map\n      const deltaX = this.markerDeltaX + diffX;\n      const deltaY = this.markerDeltaY + diffY;\n      this.markerTransform = { globalX: deltaX, globalY: deltaY };\n    }\n\n    this.#updateMarkerCorrection(left, top);\n\n    // Update pointer position\n    this.#updatePointerPosition(m);\n  };\n\n  #updatePointerPosition = (m: PointerEvent): void => {\n    this.curPointerXPos = m.pageX;\n    this.curPointerYPos = m.pageY;\n  };\n\n  #updateMarkerTransform = (): void => {\n    const { anchorX, anchorY, globalX, globalY, correctionX, correctionY } =\n      this.#markerTransform;\n    const transformX = anchorX - globalX + correctionX;\n    const transformY = anchorY + globalY + correctionY;\n    this.markerElement.style.transform = `translate(calc(-50% + ${transformX}px), calc(-50% + ${transformY}px))`;\n  };\n\n  /** Re-center the marker on the map at its original location */\n  reCenter = (): void => {\n    // Set scroll values to center image in its container\n    const top =\n      (this.imgElement.height - this.imgContainerElement.clientHeight) / 2;\n    const left =\n      (this.imgElement.width - this.imgContainerElement.clientWidth) / 2;\n    this.imgContainerElement.scrollTop = top;\n    this.imgContainerElement.scrollLeft = left;\n\n    // Reset adjusted image center screen coordinate to match original\n    this.imgCenterAdjustedPx = this.imgCenterPx;\n\n    // Reset marker transform in case it was changed\n    this.markerDeltaX = this.markerDeltaY = 0;\n    this.markerTransform = {\n      globalX: 0,\n      globalY: 0,\n      correctionX: 0,\n      correctionY: 0\n    };\n  };\n\n  /**\n   * The x/y offset of the image from its center based on its scrolled position within its container.\n   */\n  get imgCenterOffset(): { x: number; y: number } {\n    return {\n      x: this.imgCenterPx[0] - this.imgCenterAdjustedPx[0],\n      y: this.imgCenterPx[1] - this.imgCenterAdjustedPx[1]\n    };\n  }\n\n  /** Update image scroll position when the Minimap has been resized */\n  handleMinimapResize = (): void => {\n    if (!this.imgElement.height || !this.imgElement.width) return;\n\n    const centerOffsetX = this.imgCenterOffset.x;\n    const centerOffsetY = this.imgCenterOffset.y;\n\n    const left =\n      this.imgElement.width / 2 -\n      centerOffsetX -\n      this.imgContainerElement.clientWidth / 2;\n    const top =\n      this.imgElement.height / 2 -\n      centerOffsetY -\n      this.imgContainerElement.clientHeight / 2;\n\n    this.imgContainerElement.scrollLeft = left;\n    this.imgContainerElement.scrollTop = top;\n\n    this.#updateMarkerCorrection(left, top);\n  };\n\n  /**\n   * Update marker X/Y transform corrections based on image scroll position\n   * @param scrollLeft - scrollLeft of image container\n   * @param scrollTop - scrollTop of image container\n   */\n  #updateMarkerCorrection = (scrollLeft: number, scrollTop: number): void => {\n    const centerOffsetX = this.imgCenterOffset.x;\n    const centerOffsetY = this.imgCenterOffset.y;\n\n    const { correctionX, correctionY } = this.markerTransform;\n\n    const corrections: Partial<MarkerTransform> = {};\n\n    // Update marker x-transform correction\n    if (scrollLeft / 2 < centerOffsetX * -1) {\n      const markerTranslateX = centerOffsetX * -1 - scrollLeft / 2;\n      corrections.correctionX = markerTranslateX * 2;\n    } else if (scrollLeft < 0) {\n      corrections.correctionX = scrollLeft;\n    } else if (correctionX !== 0) {\n      corrections.correctionX = 0;\n    }\n\n    // Update marker y-transform correction\n    if (scrollTop / 2 < centerOffsetY * -1) {\n      const markerTranslateY = centerOffsetY * -1 - scrollTop / 2;\n      corrections.correctionY = markerTranslateY * 2;\n    } else if (scrollTop < 0) {\n      corrections.correctionY = scrollTop;\n    } else if (correctionY !== 0) {\n      corrections.correctionY = 0;\n    }\n\n    this.markerTransform = corrections;\n  };\n}\n","import {\n  AddressAutofillFeatureSuggestion,\n  AddressAutofillOptions,\n  AddressAutofillRetrieveResponse,\n  AddressAutofillSuggestion,\n  AddressAutofillSuggestionResponse,\n  Evented,\n  AddressAutofillCore,\n  SearchSession\n} from '@mapbox/search-js-core';\n\nimport {\n  MapboxSearchListbox,\n  SelectionEventDetail\n} from './components/MapboxSearchListbox';\nimport { MapboxHTMLEvent } from './MapboxHTMLEvent';\nimport { Theme } from './theme';\nimport { deepEquals } from './utils';\nimport {\n  distinctExactStreetResults,\n  fillFormWithFeature,\n  findAddressInputs,\n  toggleAutocompletion\n} from './utils/autofill';\nimport { tryConfirmBrowserAutofill } from './utils/confirmation';\n\nimport { config } from './config';\n\nimport { initDetectBrowserAutofill } from './utils/detect_browser_autofill';\nimport { AddressConfirmOptions } from './components/MapboxAddressConfirmation';\nimport { PopoverOptions } from './utils/popover';\nimport {\n  createAriaLiveElement,\n  suppressExtensionsAutocomplete\n} from './utils/aria';\nimport { handleStreetSelection } from './utils/autofill';\nimport { SEARCH_SERVICE } from './utils/services';\nimport { InputEventDetail } from './utils/listbox';\nimport { MapboxEventManager } from './events/MapboxEventManager';\n\n/**\n * @class AddressAutofillInstance\n */\nexport class AddressAutofillInstance {\n  #input: HTMLInputElement;\n\n  get input(): HTMLInputElement {\n    return this.#input;\n  }\n\n  #collection: AddressAutofillCollectionType;\n  #session: SearchSession<\n    AddressAutofillOptions,\n    AddressAutofillSuggestion,\n    AddressAutofillSuggestionResponse,\n    AddressAutofillRetrieveResponse\n  >;\n\n  #autofillCoreRef: AddressAutofillCore;\n\n  options: Partial<AddressAutofillOptions> = {};\n\n  retrieveFeature: AddressAutofillFeatureSuggestion = null;\n\n  listbox = new MapboxSearchListbox();\n\n  #eventManager = new MapboxEventManager(SEARCH_SERVICE.AddressAutofill);\n\n  constructor(\n    collection: AddressAutofillCollectionType,\n    input: HTMLInputElement,\n    autofillRef: AddressAutofillCore\n  ) {\n    this.#input = input;\n    this.#collection = collection;\n    this.#session = new SearchSession<\n      AddressAutofillOptions,\n      AddressAutofillSuggestion,\n      AddressAutofillSuggestionResponse,\n      AddressAutofillRetrieveResponse\n    >(autofillRef);\n    this.#session.sessionToken = config.autofillSessionToken.id;\n\n    this.#autofillCoreRef = autofillRef;\n\n    this.listbox.input = this.#input;\n    this.listbox.autofillHost = this;\n    this.listbox.searchService = SEARCH_SERVICE.AddressAutofill;\n\n    this.listbox.addEventListener('input', this.#onHandleInput);\n    this.listbox.addEventListener('select', this.#onHandleSelect);\n    this.listbox.addEventListener('blur', this.#onHandleBlur);\n    this.listbox.addEventListener('focus', this.#onHandleFocus);\n\n    this.#session.addEventListener('suggest', this.#handleSuggest);\n    this.#session.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.listbox);\n\n    if (input) {\n      input.insertAdjacentElement(\n        'beforebegin',\n        createAriaLiveElement(this.listbox.dataSeed)\n      );\n      suppressExtensionsAutocomplete(input);\n      this.#initialAutocompleteValue = input.autocomplete;\n    }\n  }\n\n  remove(): void {\n    this.listbox.remove();\n\n    this.listbox.removeEventListener('input', this.#onHandleInput);\n    this.listbox.removeEventListener('select', this.#onHandleSelect);\n    this.listbox.removeEventListener('blur', this.#onHandleBlur);\n    this.listbox.removeEventListener('focus', this.#onHandleFocus);\n\n    this.#session.removeEventListener('suggest', this.#handleSuggest);\n    this.#session.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#session.removeEventListener('retrieve', this.#handleRetrieve);\n  }\n\n  #initialAutocompleteValue: string;\n\n  #onHandleInput = (e: MapboxHTMLEvent<InputEventDetail>): void => {\n    const { lastInput, inputText } = e.detail;\n\n    // if following flag set to true and search text is equal or less than 2 characters - enable browser autofill.\n    const enableBrowserAutocomplete =\n      this.#collection.browserAutofillEnabled === true &&\n      inputText?.length <= 2;\n\n    toggleAutocompletion(\n      this.#input,\n      this.#initialAutocompleteValue,\n      enableBrowserAutocomplete\n    );\n\n    if (!inputText) {\n      this.#handleClear();\n      return;\n    }\n\n    if (inputText?.length <= 2) {\n      this.listbox.handleSuggest(null);\n      return;\n    }\n\n    this.#session.suggest(inputText, this.options);\n    this.#eventManager.input(\n      inputText,\n      lastInput,\n      {\n        ...this.options,\n        sessionToken: this.#session.sessionToken,\n        accessToken: this.#collection.accessToken\n      },\n      null,\n      this.#autofillCoreRef.responseHeaders\n    );\n  };\n\n  #onHandleSelect = (\n    e: MapboxHTMLEvent<SelectionEventDetail<AddressAutofillSuggestion>>\n  ): void => {\n    const { suggestion, selectedIndex } = e.detail;\n    if (suggestion.accuracy !== 'street') {\n      toggleAutocompletion(this.#input, this.#initialAutocompleteValue, true);\n      this.#session.retrieve(suggestion, this.options);\n      this.#eventManager.select(\n        this.input.value,\n        selectedIndex,\n        this.listbox.suggestions,\n        {\n          ...this.options,\n          sessionToken: this.#session.sessionToken,\n          accessToken: this.#collection.accessToken\n        },\n        null,\n        this.#autofillCoreRef.responseHeaders\n      );\n    } else {\n      handleStreetSelection(\n        this.#input,\n        this.#initialAutocompleteValue,\n        suggestion\n      );\n    }\n  };\n\n  #onHandleBlur = (): void => {\n    toggleAutocompletion(this.#input, this.#initialAutocompleteValue, true);\n    // Abort any in-progress operations.\n    this.#session.abort();\n  };\n\n  #onHandleFocus = (): void => {\n    const enableBrowserAutocomplete =\n      this.#collection.browserAutofillEnabled === true &&\n      this.#input.value?.length <= 2;\n    toggleAutocompletion(\n      this.#input,\n      this.#initialAutocompleteValue,\n      enableBrowserAutocomplete\n    );\n  };\n\n  #handleClear = (): void => {\n    this.listbox.handleSuggest(null);\n    this.#eventManager.clear();\n  };\n\n  #handleSuggest = (result: AddressAutofillSuggestionResponse): void => {\n    const filteredSuggestions = result?.suggestions\n      ? distinctExactStreetResults(result.suggestions)\n      : null;\n    this.listbox.handleSuggest(filteredSuggestions);\n    // Manually bubble up the event.\n    const event = new MapboxHTMLEvent('suggest', result);\n    Object.defineProperty(event, 'target', { value: this.#input });\n    this.#collection.fire('suggest', event);\n  };\n\n  #handleSuggestError = (error: Error): void => {\n    this.listbox.handleError();\n    // Manually bubble up the event.\n    const event = new MapboxHTMLEvent('suggesterror', error);\n    Object.defineProperty(event, 'target', { value: this.#input });\n    this.#collection.fire('suggesterror', event);\n  };\n\n  #handleRetrieve = (result: AddressAutofillRetrieveResponse): void => {\n    const event = new MapboxHTMLEvent('retrieve', result);\n    // Manually bubble up the event.\n    Object.defineProperty(event, 'target', { value: this.#input });\n    this.#collection.fire('retrieve', event);\n\n    this.retrieveFeature = result.features?.[0];\n\n    if (!this.#input) {\n      return;\n    }\n\n    const featureCollection = result;\n    if (\n      !featureCollection ||\n      !featureCollection.features ||\n      !featureCollection.features.length\n    ) {\n      return;\n    }\n\n    fillFormWithFeature(featureCollection.features[0], this.#input);\n  };\n\n  simulateRetrieve(feature: AddressAutofillFeatureSuggestion): void {\n    const input = this.#input;\n    if (input) {\n      input.dataset['mapboxSuccess'] = 'true';\n    }\n    this.listbox.hideResults();\n\n    const simResult: AddressAutofillRetrieveResponse = {\n      type: 'FeatureCollection',\n      features: [feature],\n      url: ''\n    };\n\n    this.#handleRetrieve(simResult);\n  }\n}\n\n/**\n * @typedef AddressAutofillCollectionOptions\n */\nexport interface AddressAutofillCollectionOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken?: string;\n  /**\n   * Options to pass to the underlying {@link AddressAutofillCore} interface.\n   */\n  options?: Partial<AddressAutofillOptions>;\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   */\n  theme?: Theme;\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   */\n  popoverOptions?: Partial<PopoverOptions>;\n  /**\n   * If true, forms autofilled by the browser will prompt the\n   * {@link confirmAddress} dialog for user confirmation.\n   * An {@link AddressConfirmOptions} object can also be passed\n   * to prompt {@link confirmAddress} with custom options.\n   * Defaults to false.\n   */\n  confirmOnBrowserAutofill?: boolean | AddressConfirmOptions;\n  /**\n   * Enables the browser's autocomplete popup to show during the first two typed characters while Mapbox results are suppressed. Defaults to false.\n   *\n   * **Note:** Due to varying specifications, efforts to suppress browser autocomplete behavior may not work on all browsers.\n   */\n  browserAutofillEnabled?: boolean;\n}\n\ninterface EventTypes<\n  AddressAutofillSuggestionResponse,\n  AddressAutofillRetrieveResponse\n> {\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   *\n   * The underlying response from {@link AddressAutofillCore} is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event suggest\n   * @instance\n   * @memberof AddressAutofillCollection\n   * @type {AddressAutofillSuggestionResponse}\n   * @example\n   * ```typescript\n   * collection.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<AddressAutofillSuggestionResponse>;\n  /**\n   * Fired when {@link AddressAutofillCore} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof AddressAutofillCollection\n   * @type {Error}\n   * @example\n   * ```typescript\n   * collection.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   *\n   * The underlying response from {@link AddressAutofillCore} is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof AddressAutofillCollection\n   * @type {AddressAutofillRetrieveResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<AddressAutofillRetrieveResponse>;\n}\n\nexport type AddressAutofillCollectionType = AddressAutofillCollection<\n  AddressAutofillSuggestionResponse,\n  AddressAutofillRetrieveResponse\n>;\n\n/**\n * Underlying collection object class returned by the {@link autofill} function.\n *\n * @class AddressAutofillCollection\n */\nexport class AddressAutofillCollection<\n  AddressAutofillSuggestionResponse,\n  AddressAutofillRetrieveResponse\n> extends Evented<\n  EventTypes<AddressAutofillSuggestionResponse, AddressAutofillRetrieveResponse>\n> {\n  instances: AddressAutofillInstance[] = [];\n  #currentInputs: HTMLInputElement[];\n\n  #autofill = new AddressAutofillCore();\n\n  constructor({\n    accessToken,\n    options,\n    theme,\n    popoverOptions,\n    confirmOnBrowserAutofill,\n    browserAutofillEnabled\n  }: AddressAutofillCollectionOptions) {\n    super();\n\n    // Setup browser autofill detection\n    initDetectBrowserAutofill();\n    window.addEventListener('browserautofill', this.#handleBrowserAutofill);\n\n    config.autofillSessionEnabled = true;\n\n    this.accessToken = accessToken || config.accessToken;\n    options && (this.options = options);\n    theme && (this.theme = theme);\n    popoverOptions && (this.popoverOptions = popoverOptions);\n    confirmOnBrowserAutofill &&\n      (this.confirmOnBrowserAutofill = confirmOnBrowserAutofill);\n    browserAutofillEnabled &&\n      (this.browserAutofillEnabled = browserAutofillEnabled);\n    this.update();\n  }\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @example\n   * ```typescript\n   * autofill.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#autofill.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#autofill.accessToken = newToken;\n  }\n\n  #options: Partial<AddressAutofillOptions>;\n\n  /**\n   * Options to pass to the underlying {@link AddressAutofillCore} interface.\n   *\n   * @example\n   * ```typescript\n   * autofill.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<AddressAutofillOptions> {\n    return this.#options;\n  }\n  set options(newOptions: Partial<AddressAutofillOptions>) {\n    this.#options = { ...this.#options, ...newOptions };\n    this.instances.forEach((instance) => {\n      instance.options = { ...instance.options, ...newOptions };\n    });\n  }\n\n  #theme: Theme;\n\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   *\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#theme;\n  }\n  set theme(newTheme: Theme) {\n    this.#theme = newTheme;\n    this.instances.forEach((instance) => {\n      instance.listbox.theme = newTheme;\n    });\n  }\n\n  #popoverOptions: Partial<PopoverOptions>;\n\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   *\n   * @example\n   * ```typescript\n   * autofill.popoverOptions = {\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * };\n   * ```\n   */\n  get popoverOptions(): Partial<PopoverOptions> {\n    return this.#popoverOptions;\n  }\n  set popoverOptions(newOptions: Partial<PopoverOptions>) {\n    this.#popoverOptions = newOptions;\n    this.instances.forEach((instance) => {\n      instance.listbox.popoverOptions = newOptions;\n    });\n  }\n\n  /**\n   * If true, forms autofilled by the browser will prompt the\n   * {@link confirmAddress} dialog for user confirmation.\n   * An {@link AddressConfirmOptions} object can also be passed\n   * to prompt {@link confirmAddress} with custom options.\n   * Defaults to false.\n   *\n   * @name confirmOnBrowserAutofill\n   * @instance\n   * @memberof AddressAutofillCollection\n   * @type {boolean | AddressConfirmOptions}\n   * @example\n   * ```typescript\n   * autofill.confirmOnBrowserAutofill = {\n   *   minimap: true,\n   *   skipConfirmModal: (feature) =>\n   *     ['exact', 'high'].includes(\n   *       feature.properties.match_code.confidence\n   *     )\n   * };\n   * ```\n   */\n  confirmOnBrowserAutofill: boolean | AddressConfirmOptions = false;\n\n  /**\n   * Enables the browser's autocomplete popup to show during the first two typed characters while Mapbox results are suppressed. Defaults to false.\n   *\n   * **Note:** Due to varying specifications, efforts to suppress browser autocomplete behavior may not work on all browsers.\n   *\n   * @name browserAutofillEnabled\n   * @instance\n   * @memberof AddressAutofillCollection\n   * @type {boolean}\n   * @example\n   * ```typescript\n   * autofill.browserAutofillEnabled = true;\n   * ```\n   */\n  browserAutofillEnabled?: boolean = false;\n\n  /** @section {Methods} */\n\n  /**\n   * Updates autofill collection based on the current DOM state.\n   * @example\n   * ```typescript\n   * collection.update();\n   * ```\n   */\n  update(): void {\n    // STEP 0: Remove and clean up any existing autofill instances\n    this.instances.forEach((instance) => {\n      instance.remove();\n    });\n    // STEP 1: Find the input element(s)\n    this.#currentInputs = findAddressInputs();\n    // STEP 2: Create a new autofill instance for each input\n    this.instances = [];\n    this.#currentInputs.forEach((input) => {\n      const autofillInstance = new AddressAutofillInstance(\n        this,\n        input,\n        this.#autofill\n      );\n      autofillInstance.options = this.options;\n      autofillInstance.listbox.theme = this.theme;\n      autofillInstance.listbox.popoverOptions = this.popoverOptions;\n      this.instances.push(autofillInstance);\n    });\n  }\n\n  // TODO: optimize this!\n  // Called when content changes.\n  #handleObserve = (): void => {\n    // TODO: add test to make sure this comparison works\n    if (!deepEquals(findAddressInputs(), this.#currentInputs)) {\n      this.update();\n    }\n  };\n\n  #observer = new MutationObserver(this.#handleObserve);\n\n  /**\n   * Listen for changes to the DOM, and update autofill instances when autofill-able inputs are added/removed.\n   *\n   * **IMPORTANT:** For performance reasons, it is recommended to carefully control\n   * when this is called and to call {@link AddressAutofillCollection#unobserve} when finished.\n   *\n   * @example\n   * ```typescript\n   * collection.observe();\n   * ```\n   */\n  observe(): void {\n    // Setup observer handler.\n    this.#observer.observe(document, {\n      subtree: true,\n      childList: true\n    });\n\n    this.#handleObserve();\n  }\n\n  /**\n   * Stop listening for changes to the DOM. This only has an effect if called\n   * after {@link AddressAutofillCollection#observe}.\n   *\n   * @example\n   * ```typescript\n   * collection.unobserve();\n   * ```\n   */\n  unobserve(): void {\n    this.#observer.disconnect();\n  }\n\n  /**\n   * Removes all autofill instances and listeners in the document.\n   *\n   * @example\n   * ```typescript\n   * collection.remove();\n   * ```\n   */\n  remove(): void {\n    this.instances.forEach((instance) => {\n      instance.remove();\n    });\n    this.unobserve();\n    window.removeEventListener('browserautofill', this.#handleBrowserAutofill);\n  }\n\n  #handleBrowserAutofill = async (e: CustomEvent): Promise<void> => {\n    // Hide listbox, if showing\n    this.instances.forEach((instance) => instance.listbox.blur());\n\n    // Address confirmation\n    for (const instance of this.instances) {\n      const input = instance.listbox.input;\n      await tryConfirmBrowserAutofill(\n        input,\n        e,\n        this.confirmOnBrowserAutofill,\n        this.accessToken\n      );\n    }\n  };\n}\n\n/**\n * Entry point for Mapbox Address Autofill, for use on standard HTML input elements.\n *\n * Compared to {@link MapboxAddressAutofill}, this function automatically attaches\n * to eligible [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) elements in-place.\n *\n * You must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * Eligible inputs must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form\n * must have inputs with proper HTML `autocomplete` attributes. The input itself must be of autocomplete `\"street-address\"` or `\"address-line1\"\"`.\n *\n * If your application works with browser autofill, you may already have this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * @param optionsArg - {@link AddressAutofillCollectionOptions} Object defining options for Address Autofill search behavior and UI.\n * @example\n * <input type=\"text\" autocomplete=\"street-address\" />\n * <script>\n * mapboxsearch.autofill({\n *   accessToken: 'pk.my.token',\n *   options: { country: 'us' }\n * };\n * </script>\n * @example\n * ```typescript\n * const collection = autofill({\n *   accessToken: 'pk.my.token',\n *   options\n * })\n *\n * myClientSideRouter.on('route', () => collection.update());\n * ```\n */\nexport function autofill(\n  optionsArg: AddressAutofillCollectionOptions\n): AddressAutofillCollectionType {\n  return new AddressAutofillCollection(optionsArg);\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"debugId":null}},
    {"offset": {"line": 8342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8348, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/index.ts","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/components/AddressAutofill.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/components/SearchBox.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/components/Geocoder.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/components/AddressMinimap.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/hooks/useEvented.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/hooks/useAddressAutofillCore.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/hooks/useSearchBoxCore.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/hooks/useGeocodingCore.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/hooks/useSearchSession.tsx","file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/node_modules/%40mapbox/search-js-react/src/hooks/useConfirmAddress.tsx"],"sourcesContent":["import '@mapbox/search-js-web';\nexport { config } from '@mapbox/search-js-web';\n\nexport { AddressAutofill } from './components/AddressAutofill';\nexport { SearchBox } from './components/SearchBox';\nexport { Geocoder } from './components/Geocoder';\nexport { AddressMinimap } from './components/AddressMinimap';\n\nexport { useEvented } from './hooks/useEvented';\nexport {\n  useAddressAutofillCore,\n  useAddressAutofillCore as useMapboxAutofill // alias for backward compatibility\n} from './hooks/useAddressAutofillCore';\nexport { useSearchBoxCore } from './hooks/useSearchBoxCore';\nexport { useGeocodingCore } from './hooks/useGeocodingCore';\nexport { useSearchSession } from './hooks/useSearchSession';\nexport { useConfirmAddress } from './hooks/useConfirmAddress';\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect, useImperativeHandle } from 'react';\n\nimport {\n  AddressAutofillOptions,\n  AddressAutofillSuggestionResponse,\n  AddressAutofillRetrieveResponse\n} from '@mapbox/search-js-core';\nimport {\n  MapboxAddressAutofill,\n  Theme,\n  MapboxHTMLEvent,\n  AddressConfirmOptions,\n  PopoverOptions\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-address-autofill': any;\n    }\n  }\n}\n\n/**\n * @typedef AddressAutofillRefType\n */\nexport interface AddressAutofillRefType {\n  /**\n   * @see {@link MapboxAddressAutofill#focus}\n   */\n  focus: typeof MapboxAddressAutofill.prototype.focus;\n}\n\n/**\n * @typedef AddressAutofillProps\n */\nexport interface AddressAutofillProps {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n  /**\n   * Options to pass to the underlying {@link AddressAutofillCore} interface.\n   * @example\n   * ```typescript\n   * <AddressAutofill options={{\n   *  language: 'en',\n   *  country: 'US',\n   * }}>\n   * ```\n   */\n  options?: Partial<AddressAutofillOptions>;\n  /**\n   * The {@link Theme} to use for styling the autofill and confirmation dialog\n   * components.\n   * @example\n   * ```typescript\n   * <AddressAutofill theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   * @example\n   * ```typescript\n   * <AddressAutofill popoverOptions={{\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * }}>\n   * ```\n   */\n  popoverOptions?: Partial<PopoverOptions>;\n  /**\n   * If true, forms autofilled by the browser will prompt the\n   * {@link confirmAddress} dialog for user confirmation.\n   * An {@link AddressConfirmOptions} object can also be passed\n   * to prompt {@link confirmAddress} with custom options.\n   * Defaults to false.\n   * @example\n   * ```typescript\n   * <AddressAutofill confirmOnBrowserAutofill={{\n   *   minimap: true,\n   *   skipConfirmModal: (feature) =>\n   *     ['exact', 'high'].includes(\n   *       feature.properties.match_code.confidence\n   *     )\n   * }}>\n   * ```\n   */\n  confirmOnBrowserAutofill?: boolean | AddressConfirmOptions;\n\n  /**\n   * Enables the browser's autocomplete popup to show during the first two typed characters while Mapbox results are suppressed. Defaults to false.\n   *\n   * **Note:** Due to varying specifications, efforts to suppress browser autocomplete behavior may not work on all browsers.\n   */\n  browserAutofillEnabled?: boolean;\n\n  /**\n   * Children to render inside the autofill component. This **must** include\n   * an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element\n   * with either autocomplete type `\"street-address\"` or `\"address-line1\"`.\n   */\n  children: React.ReactChild;\n  /**\n   * Callback for when the `<input>` value changes.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   * The underlying response from {@link AddressAutofillCore} is passed.\n   */\n  onSuggest?: (res: AddressAutofillSuggestionResponse) => void;\n  /**\n   * Fired when {@link AddressAutofillCore} has errored providing a list of suggestions.\n   * The underlying error is passed.\n   */\n  onSuggestError?: (error: Error) => void;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   * The underlying response from {@link AddressAutofillCore} is passed.\n   */\n  onRetrieve?: (res: AddressAutofillRetrieveResponse) => void;\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string is returned, no search request will be performed.\n   */\n  interceptSearch?: (value: string) => string;\n}\n\n/**\n * `<AddressAutofill>` is a React component that wraps an address\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with intelligent, location-aware autocomplete functionality.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * This component must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form), and the form\n * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have\n * this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * Internally, this wraps the [`<mapbox-address-autofill>`](https://docs.mapbox.com/mapbox-search-js/api/web/autofill/#mapboxaddressautofill) element.\n *\n * @function AddressAutofill\n * @param {AddressAutofillProps} props\n * @example\n * ```typescript\n * import { AddressAutofill } from '@mapbox/search-js-react'\n * export function Component() {\n *   const [value, setValue] = React.useState('');\n *\n *   const handleChange = (e) => {\n *     setValue(e.target.value);\n *   };\n *\n *   return (\n *     <form>\n *       <AddressAutofill accessToken={'YOUR_MAPBOX_ACCESS_TOKEN'}>\n *         <input\n *           autoComplete=\"shipping address-line1\"\n *           value={value}\n *           onChange={handleChange}\n *         />\n *       </AddressAutofill>\n *     </form>\n *   );\n * }\n * ```\n */\nexport const AddressAutofill = React.forwardRef(\n  (props: AddressAutofillProps, refProp): React.ReactElement => {\n    const {\n      accessToken,\n      options,\n      theme,\n      popoverOptions,\n      confirmOnBrowserAutofill,\n      browserAutofillEnabled,\n      children,\n      onChange,\n      onSuggest,\n      onSuggestError,\n      onRetrieve,\n      interceptSearch\n    } = props;\n    const ref = useRef<MapboxAddressAutofill>();\n\n    useImperativeHandle(refProp, () => ({\n      focus: () => {\n        if (ref.current) return ref.current.focus();\n        throw new Error('AddressAutofill is not mounted');\n      }\n    }));\n\n    // Update options.\n    useEffect(() => {\n      if (ref.current) ref.current.options = options;\n    }, [ref.current, options]);\n\n    // Update intercept search.\n    useEffect(() => {\n      if (ref.current) ref.current.interceptSearch = interceptSearch;\n    }, [ref.current, options]);\n\n    // Update theme.\n    useEffect(() => {\n      if (ref.current) ref.current.theme = theme;\n    }, [ref.current, theme]);\n\n    // Update popoverOptions\n    useEffect(() => {\n      if (ref.current) ref.current.popoverOptions = popoverOptions;\n    }, [ref.current, popoverOptions]);\n\n    // Update confirmOnBrowserAutofill\n    useEffect(() => {\n      if (ref.current)\n        ref.current.confirmOnBrowserAutofill = confirmOnBrowserAutofill;\n    }, [ref.current, confirmOnBrowserAutofill]);\n\n    // Update browserAutofillEnabled\n    useEffect(() => {\n      if (ref.current)\n        ref.current.browserAutofillEnabled = browserAutofillEnabled;\n    }, [ref.current, browserAutofillEnabled]);\n\n    // Update onSuggest.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggest) return;\n\n      const fn = (e: MapboxHTMLEvent<AddressAutofillSuggestionResponse>) =>\n        onSuggest(e.detail);\n\n      node.addEventListener('suggest', fn);\n      return () => {\n        node.removeEventListener('suggest', fn);\n      };\n    }, [ref.current, onSuggest]);\n\n    // Update onSuggestError.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggestError) return;\n\n      const fn = (e: MapboxHTMLEvent<Error>) => onSuggestError(e.detail);\n\n      node.addEventListener('suggesterror', fn);\n      return () => {\n        node.removeEventListener('suggesterror', fn);\n      };\n    }, [ref.current, onSuggestError]);\n\n    // Update onRetrieve.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onRetrieve) return;\n\n      const fn = (e: MapboxHTMLEvent<AddressAutofillRetrieveResponse>) =>\n        onRetrieve(e.detail);\n\n      node.addEventListener('retrieve', fn);\n      return () => {\n        node.removeEventListener('retrieve', fn);\n      };\n    }, [ref.current, onRetrieve]);\n\n    // Update onChange.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onChange) return;\n\n      const fn = (e: MapboxHTMLEvent<string>) => {\n        if (e.target !== e.currentTarget) return; // ignore child input event\n        onChange(e.detail);\n      };\n\n      node.addEventListener('input', fn);\n      return () => {\n        node.removeEventListener('input', fn);\n      };\n    }, [ref.current, onChange]);\n\n    // Update accessToken.\n    useEffect(() => {\n      if (ref.current) ref.current.accessToken = accessToken;\n    }, [ref.current, accessToken]);\n\n    return (\n      <mapbox-address-autofill ref={ref}>{children}</mapbox-address-autofill>\n    );\n  }\n);\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect, useImperativeHandle } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport {\n  SearchBoxOptions,\n  SearchBoxSuggestionResponse,\n  SearchBoxRetrieveResponse\n} from '@mapbox/search-js-core';\nimport {\n  MapboxSearchBox,\n  Theme,\n  MapboxHTMLEvent,\n  PopoverOptions\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-search-box': any;\n    }\n  }\n}\n\n/**\n * @typedef SearchBoxRefType\n */\nexport interface SearchBoxRefType {\n  /**\n   * @see {@link MapboxSearchBox#focus}\n   */\n  focus: typeof MapboxSearchBox.prototype.focus;\n  /**\n   * @see {@link MapboxSearchBox#search}\n   */\n  search: typeof MapboxSearchBox.prototype.search;\n}\n\n/**\n * @typedef SearchBoxProps\n */\nexport interface SearchBoxProps {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n  /**\n   * Options to pass to the underlying {@link SearchBoxCore} interface.\n   * @example\n   * ```typescript\n   * <SearchBox options={{\n   *  language: 'en',\n   *  country: 'US',\n   * }}>\n   * ```\n   */\n  options?: Partial<SearchBoxOptions>;\n  /**\n   * The {@link Theme} to use for styling the search box.\n   * @example\n   * ```typescript\n   * <SearchBox theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   * @example\n   * ```typescript\n   * <SearchBox popoverOptions={{\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * }}>\n   * ```\n   */\n  popoverOptions?: Partial<PopoverOptions>;\n  /**\n   * The input element's placeholder text. The default value may be localized if {@link SearchBoxOptions#language} is set.\n   */\n  placeholder?: string;\n  /**\n   * If specified, the map will be centered on the retrieved suggestion.\n   */\n  map?: mapboxgl.Map;\n  /**\n   * If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that {@link SearchBoxProps#mapboxgl} also be set.\n   */\n  marker?: boolean | mapboxgl.MarkerOptions;\n  /**\n   * A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if {@link SearchBoxProps#marker} is `true`.\n   */\n  mapboxgl?: typeof mapboxgl;\n  /**\n   * Value to display in the search box.\n   */\n  value?: string;\n  /**\n   * Callback for when the value changes.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   * The underlying response from {@link SearchBoxCore} is passed.\n   */\n  onSuggest?: (res: SearchBoxSuggestionResponse) => void;\n  /**\n   * Fired when {@link SearchBoxCore} has errored providing a list of suggestions.\n   * The underlying error is passed.\n   */\n  onSuggestError?: (error: Error) => void;\n  /**\n   * Fired when the user has selected a suggestion.\n   * The underlying response from {@link SearchBoxCore} is passed.\n   */\n  onRetrieve?: (res: SearchBoxRetrieveResponse) => void;\n  /**\n   * Fired when the user has cleared the search box.\n   */\n  onClear?: () => void;\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string  is returned, no search request will be performed.\n   */\n  interceptSearch?: (value: string) => string;\n}\n\n/**\n * `<SearchBox>` is a React component that provides an interactive search box,\n * powered by the Mapbox Search Box API.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * Internally, this wraps the [`<mapbox-search-box>`](https://docs.mapbox.com/mapbox-search-js/api/web/search/#mapboxsearchbox) element.\n *\n * @function SearchBox\n * @param {SearchBoxProps} props\n * @example\n * ```typescript\n * import { SearchBox } from \"@mapbox/search-js-react\";\n * export function Component() {\n *   const [value, setValue] = React.useState('');\n *\n *   const handleChange = (d) => {\n *     setValue(d);\n *   };\n *   return (\n *     <SearchBox\n *       options={{\n *         proximity: {\n *           lng: -122.431297,\n *           lat: 37.773972,\n *         },\n *       }}\n *       value={value}\n *       onChange={handleChange}\n *       accessToken=\"YOUR_MAPBOX_ACCESS_TOKEN\"\n *     />\n *   );\n * }\n * ```\n */\nexport const SearchBox = React.forwardRef(\n  (props: SearchBoxProps, refProp): React.ReactElement => {\n    const {\n      accessToken,\n      options,\n      theme,\n      popoverOptions,\n      placeholder,\n      map,\n      marker,\n      mapboxgl,\n      value,\n      onChange,\n      onSuggest,\n      onSuggestError,\n      onRetrieve,\n      onClear,\n      interceptSearch\n    } = props;\n    const ref = useRef<MapboxSearchBox>();\n\n    useImperativeHandle(refProp, () => ({\n      focus: () => {\n        if (ref.current) return ref.current.focus();\n        throw new Error('SearchBox is not mounted');\n      },\n      search: (text: string) => {\n        if (ref.current) return ref.current.search(text);\n        throw new Error('SearchBox is not mounted');\n      }\n    }));\n\n    // Update options.\n    useEffect(() => {\n      if (ref.current) ref.current.options = options || {};\n    }, [ref.current, options]);\n\n    // Update intercept search.\n    useEffect(() => {\n      if (ref.current) ref.current.interceptSearch = interceptSearch;\n    }, [ref.current, interceptSearch]);\n\n    // Update theme.\n    useEffect(() => {\n      if (ref.current) ref.current.theme = theme;\n    }, [ref.current, theme]);\n\n    // Update popoverOptions\n    useEffect(() => {\n      if (ref.current) ref.current.popoverOptions = popoverOptions;\n    }, [ref.current, popoverOptions]);\n\n    // Update placeholder\n    useEffect(() => {\n      if (ref.current) ref.current.placeholder = placeholder;\n    }, [ref.current, placeholder]);\n\n    // Update value.\n    useEffect(() => {\n      if (ref.current) ref.current.value = value || '';\n    }, [ref.current, value]);\n\n    // Update map.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      node.bindMap(map);\n      return () => {\n        node.unbindMap();\n      };\n    }, [ref.current, map]);\n\n    // Update marker.\n    useEffect(() => {\n      if (ref.current) ref.current.marker = marker;\n    }, [ref.current, marker]);\n\n    // Update mapboxgl.\n    useEffect(() => {\n      if (ref.current) ref.current.mapboxgl = mapboxgl;\n    }, [ref.current, mapboxgl]);\n\n    // Update onSuggest.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggest) return;\n\n      const fn = (e: MapboxHTMLEvent<SearchBoxSuggestionResponse>) =>\n        onSuggest(e.detail);\n\n      node.addEventListener('suggest', fn);\n      return () => {\n        node.removeEventListener('suggest', fn);\n      };\n    }, [ref.current, onSuggest]);\n\n    // Update onSuggestError.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggestError) return;\n\n      const fn = (e: MapboxHTMLEvent<Error>) => onSuggestError(e.detail);\n\n      node.addEventListener('suggesterror', fn);\n      return () => {\n        node.removeEventListener('suggesterror', fn);\n      };\n    }, [ref.current, onSuggestError]);\n\n    // Update onRetrieve.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onRetrieve) return;\n\n      const fn = (e: MapboxHTMLEvent<SearchBoxRetrieveResponse>) =>\n        onRetrieve(e.detail);\n\n      node.addEventListener('retrieve', fn);\n      return () => {\n        node.removeEventListener('retrieve', fn);\n      };\n    }, [ref.current, onRetrieve]);\n\n    // Update onChange.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onChange) return;\n\n      const fn = (e: MapboxHTMLEvent<string>) => {\n        if (e.target !== e.currentTarget) return; // ignore child input event\n        onChange(e.detail);\n      };\n\n      node.addEventListener('input', fn);\n      return () => {\n        node.removeEventListener('input', fn);\n      };\n    }, [ref.current, onChange]);\n\n    // Update onClear.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onClear) return;\n\n      const fn = () => {\n        onClear();\n      };\n\n      node.addEventListener('clear', fn);\n      return () => {\n        node.removeEventListener('clear', fn);\n      };\n    }, [ref.current, onClear]);\n\n    // Update accessToken.\n    useEffect(() => {\n      if (ref.current) ref.current.accessToken = accessToken;\n    }, [ref.current, accessToken]);\n\n    return <mapbox-search-box ref={ref} />;\n  }\n);\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect, useImperativeHandle } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport {\n  GeocodingOptions,\n  GeocodingResponse,\n  GeocodingFeature\n} from '@mapbox/search-js-core';\nimport {\n  MapboxGeocoder,\n  Theme,\n  MapboxHTMLEvent,\n  PopoverOptions\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-geocoder': any;\n    }\n  }\n}\n\n/**\n * @typedef GeocoderRefType\n */\nexport interface GeocoderRefType {\n  /**\n   * @see {@link MapboxGeocoder#focus}\n   */\n  focus: typeof MapboxGeocoder.prototype.focus;\n  /**\n   * @see {@link MapboxGeocoder#search}\n   */\n  search: typeof MapboxGeocoder.prototype.search;\n}\n\n/**\n * @typedef GeocoderProps\n */\nexport interface GeocoderProps {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n  /**\n   * Options to pass to the underlying {@link GeocodingCore} interface.\n   * @example\n   * ```typescript\n   * <Geocoder options={{\n   *  language: 'en',\n   *  country: 'US',\n   * }}>\n   * ```\n   */\n  options?: Partial<GeocodingOptions>;\n  /**\n   * The {@link Theme} to use for styling the geocoder.\n   * @example\n   * ```typescript\n   * <Geocoder theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   * @example\n   * ```typescript\n   * <Geocoder popoverOptions={{\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * }}>\n   * ```\n   */\n  popoverOptions?: Partial<PopoverOptions>;\n  /**\n   * The input element's placeholder text. The default value may be localized if {@link GeocodingOptions#language} is set.\n   */\n  placeholder?: string;\n  /**\n   * If specified, the map will be centered on the retrieved suggestion.\n   */\n  map?: mapboxgl.Map;\n  /**\n   * If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that {@link GeocoderProps#mapboxgl} also be set.\n   */\n  marker?: boolean | mapboxgl.MarkerOptions;\n  /**\n   * A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if {@link GeocoderProps#marker} is `true`.\n   */\n  mapboxgl?: typeof mapboxgl;\n  /**\n   * Value to display in the geocoder.\n   */\n  value?: string;\n  /**\n   * Callback for when the value changes.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   * The underlying response from {@link GeocodingCore} is passed.\n   */\n  onSuggest?: (res: GeocodingResponse) => void;\n  /**\n   * Fired when {@link GeocodingCore} has errored providing a list of suggestions.\n   * The underlying error is passed.\n   */\n  onSuggestError?: (error: Error) => void;\n  /**\n   * Fired when the user has selected a suggestion.\n   * The underlying feature from {@link GeocodingCore} is passed.\n   */\n  onRetrieve?: (res: GeocodingFeature) => void;\n  /**\n   * Fired when the user has cleared the search box.\n   */\n  onClear?: () => void;\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string  is returned, no search request will be performed.\n   */\n  interceptSearch?: (value: string) => string;\n}\n\n/**\n * `<Geocoder>` is a React component that provides an interactive geocoder,\n * powered by the Mapbox Geocoding API.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * Internally, this wraps the [`<mapbox-geocoder>`](https://docs.mapbox.com/mapbox-search-js/api/web/search/#mapboxgeocoder) element.\n *\n * @function Geocoder\n * @param {GeocoderProps} props\n * @example\n * ```typescript\n * import { Geocoder } from \"@mapbox/search-js-react\";\n * export function Component() {\n *   const [value, setValue] = React.useState('');\n *\n *   const handleChange = (d) => {\n *     setValue(d);\n *   };\n *   return (\n *     <Geocoder\n *       options={{\n *         proximity: {\n *           lng: -122.431297,\n *           lat: 37.773972,\n *         },\n *       }}\n *       value={value}\n *       onChange={handleChange}\n *       accessToken=\"YOUR_MAPBOX_ACCESS_TOKEN\"\n *     />\n *   );\n * }\n * ```\n */\nexport const Geocoder = React.forwardRef(\n  (props: GeocoderProps, refProp): React.ReactElement => {\n    const {\n      accessToken,\n      options,\n      theme,\n      popoverOptions,\n      placeholder,\n      map,\n      marker,\n      mapboxgl,\n      value,\n      onChange,\n      onSuggest,\n      onSuggestError,\n      onRetrieve,\n      onClear,\n      interceptSearch\n    } = props;\n    const ref = useRef<MapboxGeocoder>();\n\n    useImperativeHandle(refProp, () => ({\n      focus: () => {\n        if (ref.current) return ref.current.focus();\n        throw new Error('Geocoder is not mounted');\n      },\n      search: (text: string) => {\n        if (ref.current) return ref.current.search(text);\n        throw new Error('Geocoder is not mounted');\n      }\n    }));\n\n    // Update options.\n    useEffect(() => {\n      if (ref.current) ref.current.options = options || {};\n    }, [ref.current, options]);\n\n    // Update intercept search.\n    useEffect(() => {\n      if (ref.current) ref.current.interceptSearch = interceptSearch;\n    }, [ref.current, interceptSearch]);\n\n    // Update theme.\n    useEffect(() => {\n      if (ref.current) ref.current.theme = theme;\n    }, [ref.current, theme]);\n\n    // Update popoverOptions\n    useEffect(() => {\n      if (ref.current) ref.current.popoverOptions = popoverOptions;\n    }, [ref.current, popoverOptions]);\n\n    // Update placeholder\n    useEffect(() => {\n      if (ref.current) ref.current.placeholder = placeholder;\n    }, [ref.current, placeholder]);\n\n    // Update value.\n    useEffect(() => {\n      if (ref.current) ref.current.value = value || '';\n    }, [ref.current, value]);\n\n    // Update map.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      node.bindMap(map);\n      return () => {\n        node.unbindMap();\n      };\n    }, [ref.current, map]);\n\n    // Update marker.\n    useEffect(() => {\n      if (ref.current) ref.current.marker = marker;\n    }, [ref.current, marker]);\n\n    // Update mapboxgl.\n    useEffect(() => {\n      if (ref.current) ref.current.mapboxgl = mapboxgl;\n    }, [ref.current, mapboxgl]);\n\n    // Update onSuggest.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggest) return;\n\n      const fn = (e: MapboxHTMLEvent<GeocodingResponse>) => onSuggest(e.detail);\n\n      node.addEventListener('suggest', fn);\n      return () => {\n        node.removeEventListener('suggest', fn);\n      };\n    }, [ref.current, onSuggest]);\n\n    // Update onSuggestError.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggestError) return;\n\n      const fn = (e: MapboxHTMLEvent<Error>) => onSuggestError(e.detail);\n\n      node.addEventListener('suggesterror', fn);\n      return () => {\n        node.removeEventListener('suggesterror', fn);\n      };\n    }, [ref.current, onSuggestError]);\n\n    // Update onRetrieve.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onRetrieve) return;\n\n      const fn = (e: MapboxHTMLEvent<GeocodingFeature>) => onRetrieve(e.detail);\n\n      node.addEventListener('retrieve', fn);\n      return () => {\n        node.removeEventListener('retrieve', fn);\n      };\n    }, [ref.current, onRetrieve]);\n\n    // Update onChange.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onChange) return;\n\n      const fn = (e: MapboxHTMLEvent<string>) => {\n        if (e.target !== e.currentTarget) return; // ignore child input event\n        onChange(e.detail);\n      };\n\n      node.addEventListener('input', fn);\n      return () => {\n        node.removeEventListener('input', fn);\n      };\n    }, [ref.current, onChange]);\n\n    // Update onClear.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onClear) return;\n\n      const fn = () => {\n        onClear();\n      };\n\n      node.addEventListener('clear', fn);\n      return () => {\n        node.removeEventListener('clear', fn);\n      };\n    }, [ref.current, onClear]);\n\n    // Update accessToken.\n    useEffect(() => {\n      if (ref.current) ref.current.accessToken = accessToken;\n    }, [ref.current, accessToken]);\n\n    return <mapbox-geocoder ref={ref} />;\n  }\n);\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect } from 'react';\n\nimport {\n  Anchor,\n  MapboxAddressMinimap,\n  MapStyleMode,\n  Theme\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-address-minimap': any;\n    }\n  }\n}\n\n/**\n * @typedef AddressMinimapProps\n */\nexport interface AddressMinimapProps {\n  /**\n   * If `true`, the marker can be moved around the map. Defaults to `false`.\n   *\n   * When editable, the marker can be moved around the map and the updated\n   * location can be referenced from the {@link AddressMinimapProps#onSaveMarkerLocation} callback.\n   */\n  canAdjustMarker?: boolean;\n  /**\n   * If `true`, the map when panned moves around the marker, keeping the marker\n   * centered. Defaults to `false`.\n   */\n  keepMarkerCentered?: boolean;\n  /**\n   * The anchor of the marker, relative to center of the expanded size. Defaults to `'bottom'`.\n   */\n  markerAnchor?: Anchor;\n  /**\n   * A client-defined callback that is triggered when the \"Save\" button is clicked in the editing interface,\n   * and gives access to the adjusted marker coordinate.\n   */\n  onSaveMarkerLocation?: (coordinate: [number, number]) => void;\n\n  /**\n   * Must be `true` for the minimap to be shown, in addition to {@link AddressMinimapProps#feature}\n   * being present.\n   */\n  show?: boolean;\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * If not explicitly set on the component, this will reference the value in the global config object.\n   */\n  accessToken?: string;\n  /**\n   * A [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) Feature representing\n   * a [Point](https://geojson.org/geojson-spec.html#point) geometry.\n   *\n   * The minimap is hidden unless {@link AddressMinimapProps#feature} is truthy.\n   */\n  feature?: GeoJSON.Feature<GeoJSON.Point>;\n\n  /**\n   * If `true`, the map will have an image toggle between Map and Satellite styles.\n   */\n  satelliteToggle?: boolean;\n  /**\n   * The {@link Theme} to use for styling interface buttons.\n   * @example\n   * ```typescript\n   * <AddressMinimap theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The map style to use, either `'default'` or `'satellite'`. The default map\n   * style is configurable with {@link AddressMinimapProps#defaultMapStyle}.\n   */\n  mapStyleMode?: MapStyleMode;\n  /**\n   * The map style to use for the default map style. Defaults to `['mapbox', 'streets-v11']`.\n   */\n  defaultMapStyle?: [string, string];\n  /**\n   * Custom footer text appearing below the map, when marker adjustment is enabled.\n   * If `true` or left undefined, the default footer text will be used.\n   * If `false`, the footer will not be shown.\n   */\n  footer?: boolean | string;\n  /**\n   * Custom adjust button text appearing on the map.\n   * If not provided, the default text will be used.\n   */\n  adjustBtnText?: string;\n  /**\n   * Custom cancel button text appearing on the map, when marker adjustment is enabled.\n   * If not provided, the default text will be used.\n   */\n  cancelBtnText?: string;\n  /**\n   * Custom save button text appearing on the map, when marker adjustment is enabled.\n   * If not provided, the default text will be used.\n   */\n  saveBtnText?: string;\n}\n\n/**\n * `AddressMinimap` is a React component that displays a marker for confirmation purposes.\n *\n * Optionally, this marker is editable. When editable, the marker can be moved\n * around the map and the updated location is sent back to the Mapbox Contribute\n * workflow.\n *\n * The goal of `AddressMinimap` is to reduce delivery or geolocation error in shipping and\n * local dispatching contexts.\n *\n * `AddressMinimap` expands to fill its container, and is hidden unless\n * {@link AddressMinimapProps#feature} and {@link AddressMinimapProps#show} are truthy.\n *\n * Internally, this wraps the [`<mapbox-address-minimap>`](https://docs.mapbox.com/mapbox-search-js/api/web/minimap/#mapboxaddressminimap) element.\n *\n * @class AddressMinimap\n * @param {AddressMinimapProps} props\n * @example\n * ```typescript\n * export function Component() {\n *   return (\n *     <AddressMinimap accessToken={'YOUR_MAPBOX_ACCESS_TOKEN'}>\n *     </AddressMinimap>\n *   );\n * }\n * ```\n */\nexport function AddressMinimap(props: AddressMinimapProps): React.ReactElement {\n  const {\n    canAdjustMarker = false,\n    keepMarkerCentered = false,\n    markerAnchor = 'bottom',\n    onSaveMarkerLocation,\n\n    show = false,\n    accessToken,\n    feature = null,\n\n    adjustBtnText,\n    saveBtnText,\n    cancelBtnText,\n\n    satelliteToggle = false,\n    theme,\n    mapStyleMode = 'default',\n    defaultMapStyle = ['mapbox', 'streets-v11'],\n    footer\n  } = props;\n  const ref = useRef<MapboxAddressMinimap>();\n\n  // Update show.\n  useEffect(() => {\n    if (!ref.current) return;\n    if (show) {\n      ref.current.show();\n    } else {\n      ref.current.hide();\n    }\n  }, [ref.current, show]);\n\n  // Update theme.\n  useEffect(() => {\n    if (ref.current) ref.current.theme = theme;\n  }, [ref.current, theme]);\n\n  // Update feature.\n  useEffect(() => {\n    if (ref.current) ref.current.feature = show ? feature : null;\n  }, [ref.current, feature, show]);\n\n  // Update mapStyleMode.\n  useEffect(() => {\n    if (ref.current) ref.current.mapStyleMode = mapStyleMode;\n  }, [ref.current, mapStyleMode]);\n\n  // Update adjustBtnText.\n  useEffect(() => {\n    if (adjustBtnText === undefined) return;\n    if (ref.current) ref.current.adjustBtnText = adjustBtnText;\n  }, [ref.current, adjustBtnText]);\n\n  // Update saveBtnText.\n  useEffect(() => {\n    if (saveBtnText === undefined) return;\n    if (ref.current) ref.current.saveBtnText = saveBtnText;\n  }, [ref.current, saveBtnText]);\n\n  // Update cancelBtnText.\n  useEffect(() => {\n    if (cancelBtnText === undefined) return;\n    if (ref.current) ref.current.cancelBtnText = cancelBtnText;\n  }, [ref.current, cancelBtnText]);\n\n  // Update defaultMapStyle.\n  useEffect(() => {\n    if (ref.current) ref.current.defaultMapStyle = defaultMapStyle;\n  }, [ref.current, defaultMapStyle]);\n\n  // Update footer.\n  useEffect(() => {\n    if (footer === undefined) return;\n    if (ref.current) ref.current.footer = footer;\n  }, [ref.current, footer]);\n\n  // Update accessToken.\n  useEffect(() => {\n    if (ref.current) ref.current.accessToken = accessToken;\n  }, [ref.current, accessToken]);\n\n  // Update onSaveMarkerLocation callback\n  useEffect(() => {\n    if (ref.current) ref.current.onSaveMarkerLocation = onSaveMarkerLocation;\n  }, [ref.current, onSaveMarkerLocation]);\n\n  return (\n    <mapbox-address-minimap\n      ref={ref}\n      can-adjust-marker={canAdjustMarker}\n      keep-marker-centered={keepMarkerCentered}\n      marker-anchor={markerAnchor}\n      satellite-toggle={satelliteToggle}\n    />\n  );\n}\n","import { useEffect, useRef } from 'react';\nimport { Evented } from '@mapbox/search-js-core';\n\n/**\n * A React hook to register an event listener on a Search JS Core Evented object.\n *\n * {@link Evented} is a base class that is inherited by {@link SearchSession}.\n */\nexport function useEvented<T, K extends keyof T>(\n  evented: Evented<T> | null,\n  eventName: K,\n  cb: (object: T[K]) => unknown\n): void {\n  const cbRef = useRef(cb);\n  useEffect(() => {\n    cbRef.current = cb;\n  });\n\n  useEffect(() => {\n    if (!evented) return;\n\n    const fn = (object?: T[K]) => cbRef.current(object);\n    evented.addEventListener(eventName, fn);\n\n    return () => {\n      evented.removeEventListener(eventName, fn);\n    };\n  }, [evented, eventName, cbRef]);\n}\n","import { useEffect, useMemo } from 'react';\nimport {\n  AddressAutofillOptions,\n  AddressAutofillCore\n} from '@mapbox/search-js-core';\n\nconst DEFAULTS = AddressAutofillCore.defaults;\n\n/**\n * A React hook that returns a {@link AddressAutofillCore} instance.\n *\n * @param {AddressAutofillOptions} options\n * @param {string} options.accessToken Your Mapbox access token.\n * @see {@link AddressAutofillCore}\n * @example\n * ```typescript\n * import { useAddressAutofillCore } from '../src';\n * const autofill = useAddressAutofillCore({ accessToken: 'YOUR_MAPBOX_ACCESS_TOKEN' });\n * const response = await autofill.suggest('1600 pennsylvania ave nw', {\n *   sessionToken: 'test-123'\n * });\n * console.log(response);\n * // { suggestions: [...], attribution: '...' };\n * ```\n * @see {@link AddressAutofillCore}\n */\nexport function useAddressAutofillCore(\n  options: Partial<{ accessToken: string } & AddressAutofillOptions>\n): AddressAutofillCore {\n  const autofill = useMemo(() => {\n    return new AddressAutofillCore();\n  }, []);\n\n  useEffect(() => {\n    const { accessToken, ...restOptions } = options;\n    autofill.accessToken = accessToken;\n    autofill.defaults = {\n      ...DEFAULTS,\n      ...restOptions\n    };\n  }, [options]);\n\n  return autofill;\n}\n","import { useEffect, useMemo } from 'react';\nimport { SearchBoxCore, SearchBoxOptions } from '@mapbox/search-js-core';\n\nconst DEFAULTS = SearchBoxCore.defaults;\n\n/**\n * A React hook that returns a {@link SearchBoxCore} instance.\n *\n * @param {SearchBoxOptions} options\n * @param {string} options.accessToken Your Mapbox access token.\n * @see {@link SearchBoxCore}\n * @example\n * ```typescript\n * import { useSearchBoxCore } from '@mapbox/search-js-react';\n * const searchBoxCore = useSearchBoxCore({ accessToken: 'YOUR_MAPBOX_ACCESS_TOKEN' });\n * const response = await searchBoxCore.suggest('1600 pennsylvania ave nw', {\n *   sessionToken: 'test-123'\n * });\n * console.log(response);\n * // { suggestions: [...], attribution: '...', url: '...' };\n * ```\n */\nexport function useSearchBoxCore(\n  options: Partial<{ accessToken: string } & SearchBoxOptions>\n): SearchBoxCore {\n  const search = useMemo(() => {\n    return new SearchBoxCore();\n  }, []);\n\n  useEffect(() => {\n    const { accessToken, ...restOptions } = options;\n    search.accessToken = accessToken;\n    search.defaults = {\n      ...DEFAULTS,\n      ...restOptions\n    };\n  }, [options]);\n\n  return search;\n}\n","import { useEffect, useMemo } from 'react';\nimport { GeocodingCore, GeocodingOptions } from '@mapbox/search-js-core';\n\n/**\n * A React hook that returns a {@link GeocodingCore} instance.\n *\n * @param {GeocodingOptions} options\n * @param {string} options.accessToken Your Mapbox access token.\n * @see {@link GeocodingCore}\n * @example\n * ```typescript\n * import { useGeocodingCore } from '@mapbox/search-js-react';\n * const geocodingCore = useGeocodingCore({ accessToken: 'YOUR_MAPBOX_ACCESS_TOKEN' });\n * const response = await geocodingCore.forward('1600 pennsylvania ave nw', {\n *   limit: 1\n * });\n * console.log(response);\n * // { type: 'FeatureCollection', features: [...], attribution: '...', url: '...' };\n * ```\n */\nexport function useGeocodingCore(\n  options: Partial<{ accessToken: string } & GeocodingOptions>\n): GeocodingCore {\n  const search = useMemo(() => {\n    return new GeocodingCore();\n  }, []);\n\n  useEffect(() => {\n    const { accessToken, ...restOptions } = options;\n    search.accessToken = accessToken;\n    search.defaults = {\n      ...restOptions\n    };\n  }, [options]);\n\n  return search;\n}\n","import {\n  AddressAutofillOptions,\n  AddressAutofillRetrieveResponse,\n  AddressAutofillSuggestion,\n  AddressAutofillSuggestionResponse,\n  AddressAutofillCore,\n  SearchBoxCore,\n  SearchBoxOptions,\n  SearchBoxRetrieveResponse,\n  SearchBoxSuggestion,\n  SearchBoxSuggestionResponse,\n  GeocodingOptions,\n  GeocodingFeature,\n  GeocodingResponse,\n  GeocodingCore,\n  SearchSession\n} from '@mapbox/search-js-core';\nimport { useMemo } from 'react';\n\nexport type SearchSessionType = SearchSession<\n  SearchBoxOptions,\n  SearchBoxSuggestion,\n  SearchBoxSuggestionResponse,\n  SearchBoxRetrieveResponse\n>;\n\nexport type AddressAutofillSearchSessionType = SearchSession<\n  AddressAutofillOptions,\n  AddressAutofillSuggestion,\n  AddressAutofillSuggestionResponse,\n  AddressAutofillRetrieveResponse\n>;\n\nexport type GeocodingSearchSessionType = SearchSession<\n  GeocodingOptions,\n  GeocodingFeature,\n  GeocodingResponse,\n  GeocodingFeature\n>;\n\nfunction useSearchSession(search: SearchBoxCore): SearchSessionType;\nfunction useSearchSession(geocoding: GeocodingCore): GeocodingSearchSessionType;\nfunction useSearchSession(\n  autofill: AddressAutofillCore\n): AddressAutofillSearchSessionType;\n\n/**\n * A React hook that returns a {@link SearchSession} instance.\n *\n * @param {SearchBoxCore | AddressAutofillCore} search\n * @returns {SearchSession}\n * @see {@link SearchSession}\n */\nfunction useSearchSession(\n  search: SearchBoxCore | AddressAutofillCore | GeocodingCore\n):\n  | SearchSessionType\n  | AddressAutofillSearchSessionType\n  | GeocodingSearchSessionType {\n  const searchSession = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new SearchSession(search as any);\n  }, [search]);\n\n  if (search instanceof SearchBoxCore) {\n    return searchSession as SearchSessionType;\n  } else if (search instanceof GeocodingCore) {\n    return searchSession as GeocodingSearchSessionType;\n  } else {\n    return searchSession as AddressAutofillSearchSessionType;\n  }\n}\n\nexport { useSearchSession };\n","import { useMemo, useRef } from 'react';\n\nimport {\n  AddressConfirmOptions,\n  AddressConfirmShowResult,\n  confirmAddress\n} from '@mapbox/search-js-web';\n\ninterface UseConfirmAddressObject {\n  formRef: React.RefObject<HTMLFormElement>;\n  showConfirm: (\n    options?: Partial<AddressConfirmOptions>\n  ) => Promise<AddressConfirmShowResult>;\n}\n\n/**\n * A React hook that returns a form ref and a function to show the address confirmation modal\n *\n * @param {AddressConfirmOptions} optionsArg\n * @see {@link confirmAddress}\n * @example\n * ```typescript\n * import { useConfirmAddress } from '@mapbox/search-js-react';\n *\n * export function Autofill(): React.ReactElement {\n *   const { formRef, showConfirm } = useConfirmAddress({\n *     footer: 'My custom footer'\n *   });\n *\n *   const handleSubmit = React.useCallback(async () => {\n *     const result = await showConfirm();\n *      console.log(result);\n *   }, [showConfirm]);\n *\n *   return (\n *     <div>\n *       <form\n *         ref={formRef}\n *         style={{ display: 'flex', flexDirection: 'column', marginTop: 30 }}\n *       >\n *         <AddressAutofill\n *           ...\n *         >\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useConfirmAddress(\n  optionsArg: AddressConfirmOptions = {}\n): UseConfirmAddressObject {\n  const formRef = useRef<HTMLFormElement>(null);\n  return useMemo(() => {\n    return {\n      formRef,\n      showConfirm: () => confirmAddress(formRef.current, optionsArg)\n    };\n  }, [formRef, optionsArg]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10],"debugId":null}},
    {"offset": {"line": 9004, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}