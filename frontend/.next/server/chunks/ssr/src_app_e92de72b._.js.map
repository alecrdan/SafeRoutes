{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/saferoutes/frontend/src/app/controllers/route-controller.ts"],"sourcesContent":["import MapRoute from \"../map/features/create-route\";\r\nimport Map from \"../map/map/map-instance\";\r\nimport GeoPoint from \"../utils/geo/GeoPoint\";\r\n\r\nconst mapInstance = Map.getInstance().getMap()\r\n\r\nconst handleRoute = (start: GeoPoint, end: GeoPoint) => {\r\n  if (!mapInstance) {\r\n    console.error(\"Map instance is not initialized.\");\r\n    return;\r\n  }\r\n\r\n  const route = new MapRoute(mapInstance, \"cycling\", start, end);\r\n  route.constructRoute();\r\n  route.constructPoint(\"start\", start);\r\n  route.constructPoint(\"end\", end);\r\n};\r\n\r\nexport default handleRoute;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGA,MAAM,cAAc,2IAAA,CAAA,UAAG,CAAC,WAAW,GAAG,MAAM;AAE5C,MAAM,cAAc,CAAC,OAAiB;IACpC,IAAI,CAAC,aAAa;QAChB,QAAQ,KAAK,CAAC;QACd;IACF;IAEA,MAAM,QAAQ,IAAI,gJAAA,CAAA,UAAQ,CAAC,aAAa,WAAW,OAAO;IAC1D,MAAM,cAAc;IACpB,MAAM,cAAc,CAAC,SAAS;IAC9B,MAAM,cAAc,CAAC,OAAO;AAC9B;uCAEe","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/saferoutes/frontend/src/app/components/menu.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport GeoPoint from \"../utils/geo/GeoPoint\";\r\nimport handleRoute from \"../controllers/route-controller\";\r\nimport { handleRouteFlyTo } from \"../map/features/fly-to\";\r\nimport { token } from \"../page\";\r\nimport { Button } from \"@headlessui/react\";\r\n\r\ninterface LocationData {\r\n  address: string;\r\n  fullAddress: string;\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\nconst Menu: React.FC = () => {\r\n  const [start, setStart] = useState<LocationData | null>(null);\r\n  const [end, setEnd] = useState<LocationData | null>(null);\r\n\r\n  const handleRetrieve = (res: Location | any, type: \"start\" | \"end\") => {\r\n    if (!res.features?.length) {\r\n      console.warn(\"No features found in response.\");\r\n      return;\r\n    }\r\n\r\n    const feature = res.features[0];\r\n    if (!feature.properties) return;\r\n\r\n    const { properties } = feature;\r\n    const { context, coordinates } = properties;\r\n\r\n    const locationData: LocationData = {\r\n      address: properties.address ?? \"\",\r\n      fullAddress: properties.full_address ?? \"\",\r\n      latitude: coordinates?.latitude ?? 0,\r\n      longitude: coordinates?.longitude ?? 0,\r\n    };\r\n\r\n    type === \"start\" ? setStart(locationData) : setEnd(locationData);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    // if (!start || !end) {\r\n    //   console.error(\"Start or End location is missing.\");\r\n    //   return;\r\n    // }\r\n\r\n    try {\r\n      // let startGeoPoint = new GeoPoint(start.longitude, start.latitude);\r\n      // let endGeoPoint = new GeoPoint(end.longitude, end.latitude);\r\n\r\n      // console.log(\"Start GeoPoint:\", startGeoPoint.toString());\r\n      // console.log(\"End GeoPoint:\", endGeoPoint.toString());\r\n\r\n      // const distance = startGeoPoint.distanceTo(endGeoPoint);\r\n\r\n      // Hardcoded Values to save API tokens\r\n      const one = new GeoPoint(-73.9855, 40.758);\r\n      const two = new GeoPoint(-74.017, 40.7033);\r\n\r\n      handleRoute(one, two);\r\n      handleRouteFlyTo(one, two);\r\n      // console.log(`Distance: ${distance.toFixed(2)} km`);\r\n    } catch (error) {\r\n      console.error(\"Failed to create route\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu z-10 bg-black/75 backdrop-blur-2xl rounded-2xl\">\r\n      <form onSubmit={handleSubmit} className=\"space-y-5 p-6 w-[450px]\">\r\n        {/* Start Location Input */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-100\">\r\n            Start\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            {/* <SearchBox\r\n              accessToken={token}\r\n              options={{ proximity: { lng: -122.431297, lat: 37.773972 } }}\r\n              value={start?.fullAddress || \"\"}\r\n              onChange={(value) =>\r\n                setStart({ ...start, fullAddress: value } as LocationData)\r\n              }\r\n              onRetrieve={(res: any) => handleRetrieve(res, \"start\")}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Destination Input */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-100\">\r\n            Destination\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            {/* <SearchBox\r\n               accessToken={token}\r\n              options={{ proximity: { lng: -122.431297, lat: 37.773972 } }}\r\n              value={end?.fullAddress || \"\"}\r\n              onChange={(value) =>\r\n                setEnd({ ...end, fullAddress: value } as LocationData)\r\n              }\r\n              onRetrieve={(res: any) => handleRetrieve(res, \"end\")}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"flex w-full justify-center rounded-md bg-gray-700 py-1.5 px-3 text-md/6 font-semibold text-white shadow-inner shadow-white/10 focus:outline-none data-[hover]:bg-gray-600 data-[open]:bg-gray-700 data-[focus]:outline-1 data-[focus]:outline-white\"\r\n          >\r\n            Route\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AAgBA,MAAM,OAAiB;IACrB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IACxD,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAEpD,MAAM,iBAAiB,CAAC,KAAqB;QAC3C,IAAI,CAAC,IAAI,QAAQ,EAAE,QAAQ;YACzB,QAAQ,IAAI,CAAC;YACb;QACF;QAEA,MAAM,UAAU,IAAI,QAAQ,CAAC,EAAE;QAC/B,IAAI,CAAC,QAAQ,UAAU,EAAE;QAEzB,MAAM,EAAE,UAAU,EAAE,GAAG;QACvB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG;QAEjC,MAAM,eAA6B;YACjC,SAAS,WAAW,OAAO,IAAI;YAC/B,aAAa,WAAW,YAAY,IAAI;YACxC,UAAU,aAAa,YAAY;YACnC,WAAW,aAAa,aAAa;QACvC;QAEA,SAAS,UAAU,SAAS,gBAAgB,OAAO;IACrD;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAEhB,wBAAwB;QACxB,wDAAwD;QACxD,YAAY;QACZ,IAAI;QAEJ,IAAI;YACF,qEAAqE;YACrE,+DAA+D;YAE/D,4DAA4D;YAC5D,wDAAwD;YAExD,0DAA0D;YAE1D,sCAAsC;YACtC,MAAM,MAAM,IAAI,sIAAA,CAAA,UAAQ,CAAC,CAAC,SAAS;YACnC,MAAM,MAAM,IAAI,sIAAA,CAAA,UAAQ,CAAC,CAAC,QAAQ;YAElC,CAAA,GAAA,gJAAA,CAAA,UAAW,AAAD,EAAE,KAAK;YACjB,CAAA,GAAA,0IAAA,CAAA,mBAAgB,AAAD,EAAE,KAAK;QACtB,sDAAsD;QACxD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;QAChB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,UAAU;YAAc,WAAU;;8BAEtC,8OAAC;;sCACC,8OAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAG3D,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAcjB,8OAAC;;sCACC,8OAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAG3D,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAcjB,8OAAC;8BACC,cAAA,8OAAC,+KAAA,CAAA,SAAM;wBACL,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}