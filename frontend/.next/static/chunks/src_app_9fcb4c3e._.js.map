{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/alecd/Desktop/Code/School/App%20Dev%20II/Final%20Project/appdev2_final_project/frontend/app/src/app/components/menu.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { SearchBox } from \"@mapbox/search-js-react\";\r\nimport GeoPoint from \"../map/schemas/map\";\r\nimport handleRoute from \"../controllers/route-controller\";\r\n\r\ninterface LocationData {\r\n  address: string;\r\n  fullAddress: string;\r\n  city?: string;\r\n  state?: string;\r\n  zip?: string;\r\n  country?: string;\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\nconst Menu: React.FC = () => {\r\n  const [start, setStart] = useState<LocationData | null>(null);\r\n  const [end, setEnd] = useState<LocationData | null>(null);\r\n\r\n  const handleRetrieve = (\r\n    res: {\r\n      features?: {\r\n        properties?: {\r\n          full_address?: string;\r\n          address?: string;\r\n          context?: {\r\n            place?: { name: string };\r\n            region?: { name: string };\r\n            postcode?: { name: string };\r\n            country?: { name: string };\r\n          };\r\n          coordinates?: {\r\n            latitude: number;\r\n            longitude: number;\r\n          };\r\n        };\r\n      }[];\r\n    },\r\n    type: \"start\" | \"end\"\r\n  ) => {\r\n    if (res?.features?.length) {\r\n      const feature = res.features[0];\r\n      const properties = feature.properties || {};\r\n      const coordinates = properties.coordinates || {};\r\n\r\n      const locationData: LocationData = {\r\n        address: properties.address || \"\",\r\n        fullAddress: properties.full_address || \"\",\r\n        city: properties.context?.place?.name,\r\n        state: properties.context?.region?.name,\r\n        zip: properties.context?.postcode?.name,\r\n        country: properties.context?.country?.name,\r\n        latitude: coordinates.latitude || 0,\r\n        longitude: coordinates.longitude || 0,\r\n      };\r\n\r\n      if (type === \"start\") {\r\n        setStart(locationData);\r\n      } else {\r\n        setEnd(locationData);\r\n      }\r\n    }\r\n  };\r\n\r\nconst handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n  e.preventDefault();\r\n\r\n  if (!start || !end) {\r\n    console.error(\"Start or End location is missing.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    let startGeoPoint = new GeoPoint(start.longitude, start.latitude);\r\n    let endGeoPoint = new GeoPoint(end.longitude, end.latitude);\r\n\r\n    console.log(\"Start GeoPoint:\", startGeoPoint.toString());\r\n    console.log(\"End GeoPoint:\", endGeoPoint.toString());\r\n\r\n    const distance = startGeoPoint.distanceTo(endGeoPoint);\r\n    console.log(`Distance: ${distance.toFixed(2)} km`);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"menu absolute top-5 left-5 z-10 bg-black/85 backdrop-blur-md rounded-xl\">\r\n      <form onSubmit={handleSubmit} className=\"space-y-5 p-6 w-[450px]\">\r\n        {/* Start Location Input */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-100\">\r\n            Start\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            <SearchBox\r\n              accessToken=\"pk.eyJ1IjoiYWxlY3JkYW4iLCJhIjoiY203ejdtdmVhMGlocDJrcTQxY3Juamg0aiJ9.4PKhiLg4cZmfj0FOMXqeBw\"\r\n              options={{ proximity: { lng: -122.431297, lat: 37.773972 } }}\r\n              value={start?.fullAddress || \"\"}\r\n              onChange={(value) =>\r\n                setStart({ ...start, fullAddress: value } as LocationData)\r\n              }\r\n              onRetrieve={(res) => handleRetrieve(res, \"start\")}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Destination Input */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-100\">\r\n            Destination\r\n          </label>\r\n          <div className=\"mt-2\">\r\n            <SearchBox\r\n              accessToken=\"pk.eyJ1IjoiYWxlY3JkYW4iLCJhIjoiY203ejdtdmVhMGlocDJrcTQxY3Juamg0aiJ9.4PKhiLg4cZmfj0FOMXqeBw\"\r\n              options={{ proximity: { lng: -122.431297, lat: 37.773972 } }}\r\n              value={end?.fullAddress || \"\"}\r\n              onChange={(value) =>\r\n                setEnd({ ...end, fullAddress: value } as LocationData)\r\n              }\r\n              onRetrieve={(res) => handleRetrieve(res, \"end\")}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"flex w-full justify-center rounded-md bg-white px-3 py-2 text-md font-semibold text-black shadow-sm hover:bg-slate-200 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-slate-200\"\r\n          >\r\n            Route\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAkBA,MAAM,OAAiB;;IACrB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IACxD,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAEpD,MAAM,iBAAiB,CACrB,KAkBA;QAEA,IAAI,KAAK,UAAU,QAAQ;YACzB,MAAM,UAAU,IAAI,QAAQ,CAAC,EAAE;YAC/B,MAAM,aAAa,QAAQ,UAAU,IAAI,CAAC;YAC1C,MAAM,cAAc,WAAW,WAAW,IAAI,CAAC;YAE/C,MAAM,eAA6B;gBACjC,SAAS,WAAW,OAAO,IAAI;gBAC/B,aAAa,WAAW,YAAY,IAAI;gBACxC,MAAM,WAAW,OAAO,EAAE,OAAO;gBACjC,OAAO,WAAW,OAAO,EAAE,QAAQ;gBACnC,KAAK,WAAW,OAAO,EAAE,UAAU;gBACnC,SAAS,WAAW,OAAO,EAAE,SAAS;gBACtC,UAAU,YAAY,QAAQ,IAAI;gBAClC,WAAW,YAAY,SAAS,IAAI;YACtC;YAEA,IAAI,SAAS,SAAS;gBACpB,SAAS;YACX,OAAO;gBACL,OAAO;YACT;QACF;IACF;IAEF,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAEhB,IAAI,CAAC,SAAS,CAAC,KAAK;YAClB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,IAAI;YACF,IAAI,gBAAgB,IAAI,sIAAA,CAAA,UAAQ,CAAC,MAAM,SAAS,EAAE,MAAM,QAAQ;YAChE,IAAI,cAAc,IAAI,sIAAA,CAAA,UAAQ,CAAC,IAAI,SAAS,EAAE,IAAI,QAAQ;YAE1D,QAAQ,GAAG,CAAC,mBAAmB,cAAc,QAAQ;YACrD,QAAQ,GAAG,CAAC,iBAAiB,YAAY,QAAQ;YAEjD,MAAM,WAAW,cAAc,UAAU,CAAC;YAC1C,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,SAAS,OAAO,CAAC,GAAG,GAAG,CAAC;QACnD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,MAAM,OAAO;QAC7B;IACF;IAEE,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAK,UAAU;YAAc,WAAU;;8BAEtC,6LAAC;;sCACC,6LAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAG3D,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,4LAAA,CAAA,YAAS;gCACR,aAAY;gCACZ,SAAS;oCAAE,WAAW;wCAAE,KAAK,CAAC;wCAAY,KAAK;oCAAU;gCAAE;gCAC3D,OAAO,OAAO,eAAe;gCAC7B,UAAU,CAAC,QACT,SAAS;wCAAE,GAAG,KAAK;wCAAE,aAAa;oCAAM;gCAE1C,YAAY,CAAC,MAAQ,eAAe,KAAK;;;;;;;;;;;;;;;;;8BAM/C,6LAAC;;sCACC,6LAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAG3D,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,4LAAA,CAAA,YAAS;gCACR,aAAY;gCACZ,SAAS;oCAAE,WAAW;wCAAE,KAAK,CAAC;wCAAY,KAAK;oCAAU;gCAAE;gCAC3D,OAAO,KAAK,eAAe;gCAC3B,UAAU,CAAC,QACT,OAAO;wCAAE,GAAG,GAAG;wCAAE,aAAa;oCAAM;gCAEtC,YAAY,CAAC,MAAQ,eAAe,KAAK;;;;;;;;;;;;;;;;;8BAM/C,6LAAC;8BACC,cAAA,6LAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;GA1HM;KAAA;uCA4HS","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}